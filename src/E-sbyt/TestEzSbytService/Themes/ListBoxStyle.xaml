<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:TMP.Work.AmperM.TestApp.Converters">
    
    <Style x:Key="ExpandCollapsePlusMinusToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="17" Height="15"
                          SnapsToDevicePixels="True">
                        <!--  Квадрат 13x13 пикселей  -->
                        <Rectangle x:Name="rect"
                                   Width="13" Height="13"
                                   Stroke="{DynamicResource GrayBrush2}"
                                   SnapsToDevicePixels="true">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,2">
                                    <GradientStop Offset="0" Color="{DynamicResource WhiteColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource Gray8}" />
                                    <GradientStop Offset="1" Color="{DynamicResource Gray6}" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <!--  Вертикальная линия по центру квадрата  -->
                        <Rectangle x:Name="ExpandPath"
                                   Width="1" Height="7"
                                   Stroke="{DynamicResource BlackBrush}"
                                   SnapsToDevicePixels="true" />
                        <!--  Горизонтальная линия по центру квадрата  -->
                        <Rectangle x:Name="MinusPath"
                                   Width="7" Height="1"
                                   Stroke="{DynamicResource BlackBrush}"
                                   SnapsToDevicePixels="true" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <Style x:Key="PlusMinusExpander" TargetType="{x:Type Expander}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander}}, Path=Header, Mode=OneWay}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="Gray"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                        <DockPanel x:Name="ExpanderRoot">
                            <Border x:Name="HeaderSite"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    DockPanel.Dock="Top">
                                <DockPanel>
                                    <ToggleButton x:Name="ToggleSite"
                                                  Margin="2"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Background="Transparent"
                                                  BorderBrush="Transparent"
                                                  DockPanel.Dock="Left"
                                                  FocusVisualStyle="{x:Null}"
                                                  IsChecked="{Binding IsExpanded,
                                                                      Mode=TwoWay,
                                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource ExpandCollapsePlusMinusToggleStyle}" />
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                      Content="{TemplateBinding Header}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                      RecognizesAccessKey="True" />
                                </DockPanel>
                            </Border>
                            <Border x:Name="ExpandSite"
                                    Margin="5,0,0,1"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,0,1,1"
                                    DockPanel.Dock="Bottom"
                                    Focusable="false"
                                    Opacity="0"
                                    Visibility="Collapsed">
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Cursor="{TemplateBinding Cursor}" />
                            </Border>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.25"
                                                         Storyboard.TargetName="ExpandSite"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.25"
                                                         Storyboard.TargetName="ExpandSite"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupStyleContainerStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <Expander Margin="0"
                                  BorderThickness="1"
                                  BorderBrush="{DynamicResource AccentColorBrush}"
                                  IsExpanded="True"
                                  Style="{StaticResource PlusMinusExpander}">
                            <Expander.Header>
                                <DockPanel>
                                    <TextBlock Margin="5,0,0,0"
                                               DockPanel.Dock="Left"
                                               FontWeight="Bold"
                                               Text="{Binding Path=Name}" />
                                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                        <Border Background="{DynamicResource AccentColorBrush3}" CornerRadius="5" Padding="2">
                                        <TextBlock VerticalAlignment="Center"
                                                   FontWeight="Bold"
                                                   Text="{Binding Path=ItemCount}" />
                                            </Border>
                                    </StackPanel>
                                </DockPanel>
                            </Expander.Header>
                            <Expander.Content>
                                <ItemsPresenter Margin="0" />
                            </Expander.Content>
                        </Expander>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseHorizontalListBox" TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
    </Style>
    
    <converters:SpaceToNewLineReplaceConverter x:Key="SpaceToNewLineReplaceConverter" />
    
    <Style x:Key="HorizontalListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border"
                            BorderThickness="1"
                            CornerRadius="3">
                        <TextBlock Margin="10 0"
                                   VerticalAlignment="Center"
                                   LineHeight="18"
                                   LineStackingStrategy="BlockLineHeight"
                                   Text="{Binding Name,
                                                  Converter={StaticResource SpaceToNewLineReplaceConverter}}"
                                   TextAlignment="Center"
                                   TextWrapping="Wrap" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalListBox"
           BasedOn="{StaticResource BaseHorizontalListBox}"
           TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource HorizontalListBoxItem}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel VerticalAlignment="Stretch" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    
</ResourceDictionary>