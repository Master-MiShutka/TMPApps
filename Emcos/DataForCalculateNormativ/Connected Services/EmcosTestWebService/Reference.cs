//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmcosTestWebService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ksmlab.ru/", ConfigurationName="EmcosServiceReference.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetPointInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetPointInfo(string UserName, string PPOINT_CODE_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetPointInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetPointInfo(string UserName, string PPOINT_CODE_ID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetPointInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetGRInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetGRInfo(string UserName, string PGR_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetGRInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetGRInfo(string UserName, string PGR_ID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetGRInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetMLInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetMLInfo(string UserName, string PML_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetMLInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetMLInfo(string UserName, string PML_ID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetMLInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetSTPLData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetSTPLData(string UserName, string PPOINT_CODE_ID, string PML_ID, string PBT, string PET);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetSTPLData", ReplyAction="*")]
        System.IAsyncResult BeginGetSTPLData(string UserName, string PPOINT_CODE_ID, string PML_ID, string PBT, string PET, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetSTPLData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetRPARGRCacheData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetRPARGRCacheData(string UserName, string PGR_ID, string PML_ID, string PBT, string PET);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetRPARGRCacheData", ReplyAction="*")]
        System.IAsyncResult BeginGetRPARGRCacheData(string UserName, string PGR_ID, string PML_ID, string PBT, string PET, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetRPARGRCacheData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetDayEnergyFromGroup_3min", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetDayEnergyFromGroup_3min(string UserName, string PGR_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetDayEnergyFromGroup_3min", ReplyAction="*")]
        System.IAsyncResult BeginGetDayEnergyFromGroup_3min(string UserName, string PGR_ID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetDayEnergyFromGroup_3min(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetGroupValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetGroupValue(string UserName, string PGR_ID, string PML_ID, string Interval, string Offset);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetGroupValue", ReplyAction="*")]
        System.IAsyncResult BeginGetGroupValue(string UserName, string PGR_ID, string PML_ID, string Interval, string Offset, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetGroupValue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetRPARGRData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetRPARGRData(string UserName, string PGR_ID, string PML_ID, string PBT, string PET);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetRPARGRData", ReplyAction="*")]
        System.IAsyncResult BeginGetRPARGRData(string UserName, string PGR_ID, string PML_ID, string PBT, string PET, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetRPARGRData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetLPTYInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetLPTYInfo(string UserName, string LPTY_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetLPTYInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetLPTYInfo(string UserName, string LPTY_ID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetLPTYInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetSEParams", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetSEParams(string UserName, string SE_ID, string LPTY_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetSEParams", ReplyAction="*")]
        System.IAsyncResult BeginGetSEParams(string UserName, string SE_ID, string LPTY_ID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetSEParams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetDPInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetDPInfo(string UserName, string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetDPInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetDPInfo(string UserName, string DP_ID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetDPInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/Get_POINT_SRC_DP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Get_POINT_SRC_DP(string UserName, string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/Get_POINT_SRC_DP", ReplyAction="*")]
        System.IAsyncResult BeginGet_POINT_SRC_DP(string UserName, string DP_ID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGet_POINT_SRC_DP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetSEElements", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetSEElements(string UserName, string SRC_ID, string POINT_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetSEElements", ReplyAction="*")]
        System.IAsyncResult BeginGetSEElements(string UserName, string SRC_ID, string POINT_ID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetSEElements(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetSEElementsSEP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetSEElementsSEP(string UserName, string SRC_ID, string POINT_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetSEElementsSEP", ReplyAction="*")]
        System.IAsyncResult BeginGetSEElementsSEP(string UserName, string SRC_ID, string POINT_ID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetSEElementsSEP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/SetSEParams", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable SetSEParams(string UserName, string SE_ID, string LPTY_ID, string LPTY_VALUE);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/SetSEParams", ReplyAction="*")]
        System.IAsyncResult BeginSetSEParams(string UserName, string SE_ID, string LPTY_ID, string LPTY_VALUE, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndSetSEParams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/SetDPEnabledParam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable SetDPEnabledParam(string UserName, string DP_ID, string ENABLED_VALUE);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/SetDPEnabledParam", ReplyAction="*")]
        System.IAsyncResult BeginSetDPEnabledParam(string UserName, string DP_ID, string ENABLED_VALUE, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndSetDPEnabledParam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/GetDPChannelsInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetDPChannelsInfo(string UserName, string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/GetDPChannelsInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetDPChannelsInfo(string UserName, string DP_ID, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetDPChannelsInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/SetPHEnabledParam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable SetPHEnabledParam(string UserName, string PH_ID, string ENABLED_VALUE);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/SetPHEnabledParam", ReplyAction="*")]
        System.IAsyncResult BeginSetPHEnabledParam(string UserName, string PH_ID, string ENABLED_VALUE, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndSetPHEnabledParam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/SetSEEnabledParam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable SetSEEnabledParam(string UserName, string SE_ID, string ENABLED_VALUE);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/SetSEEnabledParam", ReplyAction="*")]
        System.IAsyncResult BeginSetSEEnabledParam(string UserName, string SE_ID, string ENABLED_VALUE, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndSetSEEnabledParam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ksmlab.ru/SetSEPEnabledParam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable SetSEPEnabledParam(string UserName, string SEP_ID, string ENABLED_VALUE);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ksmlab.ru/SetSEPEnabledParam", ReplyAction="*")]
        System.IAsyncResult BeginSetSEPEnabledParam(string UserName, string SEP_ID, string ENABLED_VALUE, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndSetSEPEnabledParam(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : EmcosTestWebService.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPointInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPointInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGRInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGRInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMLInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMLInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSTPLDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSTPLDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRPARGRCacheDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRPARGRCacheDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDayEnergyFromGroup_3minCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDayEnergyFromGroup_3minCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGroupValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGroupValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRPARGRDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRPARGRDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLPTYInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLPTYInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSEParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSEParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDPInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDPInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_POINT_SRC_DPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_POINT_SRC_DPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSEElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSEElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSEElementsSEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSEElementsSEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetSEParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetSEParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDPEnabledParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDPEnabledParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDPChannelsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDPChannelsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetPHEnabledParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetPHEnabledParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetSEEnabledParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetSEEnabledParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetSEPEnabledParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetSEPEnabledParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<EmcosTestWebService.ServiceSoap>, EmcosTestWebService.ServiceSoap {
        
        private BeginOperationDelegate onBeginGetPointInfoDelegate;
        
        private EndOperationDelegate onEndGetPointInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetPointInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGRInfoDelegate;
        
        private EndOperationDelegate onEndGetGRInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetGRInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMLInfoDelegate;
        
        private EndOperationDelegate onEndGetMLInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetMLInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSTPLDataDelegate;
        
        private EndOperationDelegate onEndGetSTPLDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetSTPLDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRPARGRCacheDataDelegate;
        
        private EndOperationDelegate onEndGetRPARGRCacheDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetRPARGRCacheDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDayEnergyFromGroup_3minDelegate;
        
        private EndOperationDelegate onEndGetDayEnergyFromGroup_3minDelegate;
        
        private System.Threading.SendOrPostCallback onGetDayEnergyFromGroup_3minCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGroupValueDelegate;
        
        private EndOperationDelegate onEndGetGroupValueDelegate;
        
        private System.Threading.SendOrPostCallback onGetGroupValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRPARGRDataDelegate;
        
        private EndOperationDelegate onEndGetRPARGRDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetRPARGRDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLPTYInfoDelegate;
        
        private EndOperationDelegate onEndGetLPTYInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetLPTYInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSEParamsDelegate;
        
        private EndOperationDelegate onEndGetSEParamsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSEParamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDPInfoDelegate;
        
        private EndOperationDelegate onEndGetDPInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetDPInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_POINT_SRC_DPDelegate;
        
        private EndOperationDelegate onEndGet_POINT_SRC_DPDelegate;
        
        private System.Threading.SendOrPostCallback onGet_POINT_SRC_DPCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSEElementsDelegate;
        
        private EndOperationDelegate onEndGetSEElementsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSEElementsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSEElementsSEPDelegate;
        
        private EndOperationDelegate onEndGetSEElementsSEPDelegate;
        
        private System.Threading.SendOrPostCallback onGetSEElementsSEPCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSEParamsDelegate;
        
        private EndOperationDelegate onEndSetSEParamsDelegate;
        
        private System.Threading.SendOrPostCallback onSetSEParamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDPEnabledParamDelegate;
        
        private EndOperationDelegate onEndSetDPEnabledParamDelegate;
        
        private System.Threading.SendOrPostCallback onSetDPEnabledParamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDPChannelsInfoDelegate;
        
        private EndOperationDelegate onEndGetDPChannelsInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetDPChannelsInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPHEnabledParamDelegate;
        
        private EndOperationDelegate onEndSetPHEnabledParamDelegate;
        
        private System.Threading.SendOrPostCallback onSetPHEnabledParamCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSEEnabledParamDelegate;
        
        private EndOperationDelegate onEndSetSEEnabledParamDelegate;
        
        private System.Threading.SendOrPostCallback onSetSEEnabledParamCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSEPEnabledParamDelegate;
        
        private EndOperationDelegate onEndSetSEPEnabledParamDelegate;
        
        private System.Threading.SendOrPostCallback onSetSEPEnabledParamCompletedDelegate;
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetPointInfoCompletedEventArgs> GetPointInfoCompleted;
        
        public event System.EventHandler<GetGRInfoCompletedEventArgs> GetGRInfoCompleted;
        
        public event System.EventHandler<GetMLInfoCompletedEventArgs> GetMLInfoCompleted;
        
        public event System.EventHandler<GetSTPLDataCompletedEventArgs> GetSTPLDataCompleted;
        
        public event System.EventHandler<GetRPARGRCacheDataCompletedEventArgs> GetRPARGRCacheDataCompleted;
        
        public event System.EventHandler<GetDayEnergyFromGroup_3minCompletedEventArgs> GetDayEnergyFromGroup_3minCompleted;
        
        public event System.EventHandler<GetGroupValueCompletedEventArgs> GetGroupValueCompleted;
        
        public event System.EventHandler<GetRPARGRDataCompletedEventArgs> GetRPARGRDataCompleted;
        
        public event System.EventHandler<GetLPTYInfoCompletedEventArgs> GetLPTYInfoCompleted;
        
        public event System.EventHandler<GetSEParamsCompletedEventArgs> GetSEParamsCompleted;
        
        public event System.EventHandler<GetDPInfoCompletedEventArgs> GetDPInfoCompleted;
        
        public event System.EventHandler<Get_POINT_SRC_DPCompletedEventArgs> Get_POINT_SRC_DPCompleted;
        
        public event System.EventHandler<GetSEElementsCompletedEventArgs> GetSEElementsCompleted;
        
        public event System.EventHandler<GetSEElementsSEPCompletedEventArgs> GetSEElementsSEPCompleted;
        
        public event System.EventHandler<SetSEParamsCompletedEventArgs> SetSEParamsCompleted;
        
        public event System.EventHandler<SetDPEnabledParamCompletedEventArgs> SetDPEnabledParamCompleted;
        
        public event System.EventHandler<GetDPChannelsInfoCompletedEventArgs> GetDPChannelsInfoCompleted;
        
        public event System.EventHandler<SetPHEnabledParamCompletedEventArgs> SetPHEnabledParamCompleted;
        
        public event System.EventHandler<SetSEEnabledParamCompletedEventArgs> SetSEEnabledParamCompleted;
        
        public event System.EventHandler<SetSEPEnabledParamCompletedEventArgs> SetSEPEnabledParamCompleted;
        
        public System.Data.DataTable GetPointInfo(string UserName, string PPOINT_CODE_ID) {
            return base.Channel.GetPointInfo(UserName, PPOINT_CODE_ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPointInfo(string UserName, string PPOINT_CODE_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPointInfo(UserName, PPOINT_CODE_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetPointInfo(System.IAsyncResult result) {
            return base.Channel.EndGetPointInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetPointInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string PPOINT_CODE_ID = ((string)(inValues[1]));
            return this.BeginGetPointInfo(UserName, PPOINT_CODE_ID, callback, asyncState);
        }
        
        private object[] OnEndGetPointInfo(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetPointInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPointInfoCompleted(object state) {
            if ((this.GetPointInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPointInfoCompleted(this, new GetPointInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPointInfoAsync(string UserName, string PPOINT_CODE_ID) {
            this.GetPointInfoAsync(UserName, PPOINT_CODE_ID, null);
        }
        
        public void GetPointInfoAsync(string UserName, string PPOINT_CODE_ID, object userState) {
            if ((this.onBeginGetPointInfoDelegate == null)) {
                this.onBeginGetPointInfoDelegate = new BeginOperationDelegate(this.OnBeginGetPointInfo);
            }
            if ((this.onEndGetPointInfoDelegate == null)) {
                this.onEndGetPointInfoDelegate = new EndOperationDelegate(this.OnEndGetPointInfo);
            }
            if ((this.onGetPointInfoCompletedDelegate == null)) {
                this.onGetPointInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPointInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetPointInfoDelegate, new object[] {
                        UserName,
                        PPOINT_CODE_ID}, this.onEndGetPointInfoDelegate, this.onGetPointInfoCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetGRInfo(string UserName, string PGR_ID) {
            return base.Channel.GetGRInfo(UserName, PGR_ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGRInfo(string UserName, string PGR_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGRInfo(UserName, PGR_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetGRInfo(System.IAsyncResult result) {
            return base.Channel.EndGetGRInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetGRInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string PGR_ID = ((string)(inValues[1]));
            return this.BeginGetGRInfo(UserName, PGR_ID, callback, asyncState);
        }
        
        private object[] OnEndGetGRInfo(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetGRInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGRInfoCompleted(object state) {
            if ((this.GetGRInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGRInfoCompleted(this, new GetGRInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGRInfoAsync(string UserName, string PGR_ID) {
            this.GetGRInfoAsync(UserName, PGR_ID, null);
        }
        
        public void GetGRInfoAsync(string UserName, string PGR_ID, object userState) {
            if ((this.onBeginGetGRInfoDelegate == null)) {
                this.onBeginGetGRInfoDelegate = new BeginOperationDelegate(this.OnBeginGetGRInfo);
            }
            if ((this.onEndGetGRInfoDelegate == null)) {
                this.onEndGetGRInfoDelegate = new EndOperationDelegate(this.OnEndGetGRInfo);
            }
            if ((this.onGetGRInfoCompletedDelegate == null)) {
                this.onGetGRInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGRInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetGRInfoDelegate, new object[] {
                        UserName,
                        PGR_ID}, this.onEndGetGRInfoDelegate, this.onGetGRInfoCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetMLInfo(string UserName, string PML_ID) {
            return base.Channel.GetMLInfo(UserName, PML_ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMLInfo(string UserName, string PML_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMLInfo(UserName, PML_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetMLInfo(System.IAsyncResult result) {
            return base.Channel.EndGetMLInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetMLInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string PML_ID = ((string)(inValues[1]));
            return this.BeginGetMLInfo(UserName, PML_ID, callback, asyncState);
        }
        
        private object[] OnEndGetMLInfo(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetMLInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMLInfoCompleted(object state) {
            if ((this.GetMLInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMLInfoCompleted(this, new GetMLInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMLInfoAsync(string UserName, string PML_ID) {
            this.GetMLInfoAsync(UserName, PML_ID, null);
        }
        
        public void GetMLInfoAsync(string UserName, string PML_ID, object userState) {
            if ((this.onBeginGetMLInfoDelegate == null)) {
                this.onBeginGetMLInfoDelegate = new BeginOperationDelegate(this.OnBeginGetMLInfo);
            }
            if ((this.onEndGetMLInfoDelegate == null)) {
                this.onEndGetMLInfoDelegate = new EndOperationDelegate(this.OnEndGetMLInfo);
            }
            if ((this.onGetMLInfoCompletedDelegate == null)) {
                this.onGetMLInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMLInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetMLInfoDelegate, new object[] {
                        UserName,
                        PML_ID}, this.onEndGetMLInfoDelegate, this.onGetMLInfoCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetSTPLData(string UserName, string PPOINT_CODE_ID, string PML_ID, string PBT, string PET) {
            return base.Channel.GetSTPLData(UserName, PPOINT_CODE_ID, PML_ID, PBT, PET);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSTPLData(string UserName, string PPOINT_CODE_ID, string PML_ID, string PBT, string PET, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSTPLData(UserName, PPOINT_CODE_ID, PML_ID, PBT, PET, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetSTPLData(System.IAsyncResult result) {
            return base.Channel.EndGetSTPLData(result);
        }
        
        private System.IAsyncResult OnBeginGetSTPLData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string PPOINT_CODE_ID = ((string)(inValues[1]));
            string PML_ID = ((string)(inValues[2]));
            string PBT = ((string)(inValues[3]));
            string PET = ((string)(inValues[4]));
            return this.BeginGetSTPLData(UserName, PPOINT_CODE_ID, PML_ID, PBT, PET, callback, asyncState);
        }
        
        private object[] OnEndGetSTPLData(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetSTPLData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSTPLDataCompleted(object state) {
            if ((this.GetSTPLDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSTPLDataCompleted(this, new GetSTPLDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSTPLDataAsync(string UserName, string PPOINT_CODE_ID, string PML_ID, string PBT, string PET) {
            this.GetSTPLDataAsync(UserName, PPOINT_CODE_ID, PML_ID, PBT, PET, null);
        }
        
        public void GetSTPLDataAsync(string UserName, string PPOINT_CODE_ID, string PML_ID, string PBT, string PET, object userState) {
            if ((this.onBeginGetSTPLDataDelegate == null)) {
                this.onBeginGetSTPLDataDelegate = new BeginOperationDelegate(this.OnBeginGetSTPLData);
            }
            if ((this.onEndGetSTPLDataDelegate == null)) {
                this.onEndGetSTPLDataDelegate = new EndOperationDelegate(this.OnEndGetSTPLData);
            }
            if ((this.onGetSTPLDataCompletedDelegate == null)) {
                this.onGetSTPLDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSTPLDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetSTPLDataDelegate, new object[] {
                        UserName,
                        PPOINT_CODE_ID,
                        PML_ID,
                        PBT,
                        PET}, this.onEndGetSTPLDataDelegate, this.onGetSTPLDataCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetRPARGRCacheData(string UserName, string PGR_ID, string PML_ID, string PBT, string PET) {
            return base.Channel.GetRPARGRCacheData(UserName, PGR_ID, PML_ID, PBT, PET);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRPARGRCacheData(string UserName, string PGR_ID, string PML_ID, string PBT, string PET, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRPARGRCacheData(UserName, PGR_ID, PML_ID, PBT, PET, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetRPARGRCacheData(System.IAsyncResult result) {
            return base.Channel.EndGetRPARGRCacheData(result);
        }
        
        private System.IAsyncResult OnBeginGetRPARGRCacheData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string PGR_ID = ((string)(inValues[1]));
            string PML_ID = ((string)(inValues[2]));
            string PBT = ((string)(inValues[3]));
            string PET = ((string)(inValues[4]));
            return this.BeginGetRPARGRCacheData(UserName, PGR_ID, PML_ID, PBT, PET, callback, asyncState);
        }
        
        private object[] OnEndGetRPARGRCacheData(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetRPARGRCacheData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRPARGRCacheDataCompleted(object state) {
            if ((this.GetRPARGRCacheDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRPARGRCacheDataCompleted(this, new GetRPARGRCacheDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRPARGRCacheDataAsync(string UserName, string PGR_ID, string PML_ID, string PBT, string PET) {
            this.GetRPARGRCacheDataAsync(UserName, PGR_ID, PML_ID, PBT, PET, null);
        }
        
        public void GetRPARGRCacheDataAsync(string UserName, string PGR_ID, string PML_ID, string PBT, string PET, object userState) {
            if ((this.onBeginGetRPARGRCacheDataDelegate == null)) {
                this.onBeginGetRPARGRCacheDataDelegate = new BeginOperationDelegate(this.OnBeginGetRPARGRCacheData);
            }
            if ((this.onEndGetRPARGRCacheDataDelegate == null)) {
                this.onEndGetRPARGRCacheDataDelegate = new EndOperationDelegate(this.OnEndGetRPARGRCacheData);
            }
            if ((this.onGetRPARGRCacheDataCompletedDelegate == null)) {
                this.onGetRPARGRCacheDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRPARGRCacheDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetRPARGRCacheDataDelegate, new object[] {
                        UserName,
                        PGR_ID,
                        PML_ID,
                        PBT,
                        PET}, this.onEndGetRPARGRCacheDataDelegate, this.onGetRPARGRCacheDataCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetDayEnergyFromGroup_3min(string UserName, string PGR_ID) {
            return base.Channel.GetDayEnergyFromGroup_3min(UserName, PGR_ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDayEnergyFromGroup_3min(string UserName, string PGR_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDayEnergyFromGroup_3min(UserName, PGR_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetDayEnergyFromGroup_3min(System.IAsyncResult result) {
            return base.Channel.EndGetDayEnergyFromGroup_3min(result);
        }
        
        private System.IAsyncResult OnBeginGetDayEnergyFromGroup_3min(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string PGR_ID = ((string)(inValues[1]));
            return this.BeginGetDayEnergyFromGroup_3min(UserName, PGR_ID, callback, asyncState);
        }
        
        private object[] OnEndGetDayEnergyFromGroup_3min(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetDayEnergyFromGroup_3min(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDayEnergyFromGroup_3minCompleted(object state) {
            if ((this.GetDayEnergyFromGroup_3minCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDayEnergyFromGroup_3minCompleted(this, new GetDayEnergyFromGroup_3minCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDayEnergyFromGroup_3minAsync(string UserName, string PGR_ID) {
            this.GetDayEnergyFromGroup_3minAsync(UserName, PGR_ID, null);
        }
        
        public void GetDayEnergyFromGroup_3minAsync(string UserName, string PGR_ID, object userState) {
            if ((this.onBeginGetDayEnergyFromGroup_3minDelegate == null)) {
                this.onBeginGetDayEnergyFromGroup_3minDelegate = new BeginOperationDelegate(this.OnBeginGetDayEnergyFromGroup_3min);
            }
            if ((this.onEndGetDayEnergyFromGroup_3minDelegate == null)) {
                this.onEndGetDayEnergyFromGroup_3minDelegate = new EndOperationDelegate(this.OnEndGetDayEnergyFromGroup_3min);
            }
            if ((this.onGetDayEnergyFromGroup_3minCompletedDelegate == null)) {
                this.onGetDayEnergyFromGroup_3minCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDayEnergyFromGroup_3minCompleted);
            }
            base.InvokeAsync(this.onBeginGetDayEnergyFromGroup_3minDelegate, new object[] {
                        UserName,
                        PGR_ID}, this.onEndGetDayEnergyFromGroup_3minDelegate, this.onGetDayEnergyFromGroup_3minCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetGroupValue(string UserName, string PGR_ID, string PML_ID, string Interval, string Offset) {
            return base.Channel.GetGroupValue(UserName, PGR_ID, PML_ID, Interval, Offset);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGroupValue(string UserName, string PGR_ID, string PML_ID, string Interval, string Offset, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGroupValue(UserName, PGR_ID, PML_ID, Interval, Offset, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetGroupValue(System.IAsyncResult result) {
            return base.Channel.EndGetGroupValue(result);
        }
        
        private System.IAsyncResult OnBeginGetGroupValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string PGR_ID = ((string)(inValues[1]));
            string PML_ID = ((string)(inValues[2]));
            string Interval = ((string)(inValues[3]));
            string Offset = ((string)(inValues[4]));
            return this.BeginGetGroupValue(UserName, PGR_ID, PML_ID, Interval, Offset, callback, asyncState);
        }
        
        private object[] OnEndGetGroupValue(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetGroupValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGroupValueCompleted(object state) {
            if ((this.GetGroupValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGroupValueCompleted(this, new GetGroupValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGroupValueAsync(string UserName, string PGR_ID, string PML_ID, string Interval, string Offset) {
            this.GetGroupValueAsync(UserName, PGR_ID, PML_ID, Interval, Offset, null);
        }
        
        public void GetGroupValueAsync(string UserName, string PGR_ID, string PML_ID, string Interval, string Offset, object userState) {
            if ((this.onBeginGetGroupValueDelegate == null)) {
                this.onBeginGetGroupValueDelegate = new BeginOperationDelegate(this.OnBeginGetGroupValue);
            }
            if ((this.onEndGetGroupValueDelegate == null)) {
                this.onEndGetGroupValueDelegate = new EndOperationDelegate(this.OnEndGetGroupValue);
            }
            if ((this.onGetGroupValueCompletedDelegate == null)) {
                this.onGetGroupValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGroupValueCompleted);
            }
            base.InvokeAsync(this.onBeginGetGroupValueDelegate, new object[] {
                        UserName,
                        PGR_ID,
                        PML_ID,
                        Interval,
                        Offset}, this.onEndGetGroupValueDelegate, this.onGetGroupValueCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetRPARGRData(string UserName, string PGR_ID, string PML_ID, string PBT, string PET) {
            return base.Channel.GetRPARGRData(UserName, PGR_ID, PML_ID, PBT, PET);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRPARGRData(string UserName, string PGR_ID, string PML_ID, string PBT, string PET, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRPARGRData(UserName, PGR_ID, PML_ID, PBT, PET, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetRPARGRData(System.IAsyncResult result) {
            return base.Channel.EndGetRPARGRData(result);
        }
        
        private System.IAsyncResult OnBeginGetRPARGRData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string PGR_ID = ((string)(inValues[1]));
            string PML_ID = ((string)(inValues[2]));
            string PBT = ((string)(inValues[3]));
            string PET = ((string)(inValues[4]));
            return this.BeginGetRPARGRData(UserName, PGR_ID, PML_ID, PBT, PET, callback, asyncState);
        }
        
        private object[] OnEndGetRPARGRData(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetRPARGRData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRPARGRDataCompleted(object state) {
            if ((this.GetRPARGRDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRPARGRDataCompleted(this, new GetRPARGRDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRPARGRDataAsync(string UserName, string PGR_ID, string PML_ID, string PBT, string PET) {
            this.GetRPARGRDataAsync(UserName, PGR_ID, PML_ID, PBT, PET, null);
        }
        
        public void GetRPARGRDataAsync(string UserName, string PGR_ID, string PML_ID, string PBT, string PET, object userState) {
            if ((this.onBeginGetRPARGRDataDelegate == null)) {
                this.onBeginGetRPARGRDataDelegate = new BeginOperationDelegate(this.OnBeginGetRPARGRData);
            }
            if ((this.onEndGetRPARGRDataDelegate == null)) {
                this.onEndGetRPARGRDataDelegate = new EndOperationDelegate(this.OnEndGetRPARGRData);
            }
            if ((this.onGetRPARGRDataCompletedDelegate == null)) {
                this.onGetRPARGRDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRPARGRDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetRPARGRDataDelegate, new object[] {
                        UserName,
                        PGR_ID,
                        PML_ID,
                        PBT,
                        PET}, this.onEndGetRPARGRDataDelegate, this.onGetRPARGRDataCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetLPTYInfo(string UserName, string LPTY_ID) {
            return base.Channel.GetLPTYInfo(UserName, LPTY_ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLPTYInfo(string UserName, string LPTY_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLPTYInfo(UserName, LPTY_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetLPTYInfo(System.IAsyncResult result) {
            return base.Channel.EndGetLPTYInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetLPTYInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string LPTY_ID = ((string)(inValues[1]));
            return this.BeginGetLPTYInfo(UserName, LPTY_ID, callback, asyncState);
        }
        
        private object[] OnEndGetLPTYInfo(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetLPTYInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLPTYInfoCompleted(object state) {
            if ((this.GetLPTYInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLPTYInfoCompleted(this, new GetLPTYInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLPTYInfoAsync(string UserName, string LPTY_ID) {
            this.GetLPTYInfoAsync(UserName, LPTY_ID, null);
        }
        
        public void GetLPTYInfoAsync(string UserName, string LPTY_ID, object userState) {
            if ((this.onBeginGetLPTYInfoDelegate == null)) {
                this.onBeginGetLPTYInfoDelegate = new BeginOperationDelegate(this.OnBeginGetLPTYInfo);
            }
            if ((this.onEndGetLPTYInfoDelegate == null)) {
                this.onEndGetLPTYInfoDelegate = new EndOperationDelegate(this.OnEndGetLPTYInfo);
            }
            if ((this.onGetLPTYInfoCompletedDelegate == null)) {
                this.onGetLPTYInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLPTYInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetLPTYInfoDelegate, new object[] {
                        UserName,
                        LPTY_ID}, this.onEndGetLPTYInfoDelegate, this.onGetLPTYInfoCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetSEParams(string UserName, string SE_ID, string LPTY_ID) {
            return base.Channel.GetSEParams(UserName, SE_ID, LPTY_ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSEParams(string UserName, string SE_ID, string LPTY_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSEParams(UserName, SE_ID, LPTY_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetSEParams(System.IAsyncResult result) {
            return base.Channel.EndGetSEParams(result);
        }
        
        private System.IAsyncResult OnBeginGetSEParams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string SE_ID = ((string)(inValues[1]));
            string LPTY_ID = ((string)(inValues[2]));
            return this.BeginGetSEParams(UserName, SE_ID, LPTY_ID, callback, asyncState);
        }
        
        private object[] OnEndGetSEParams(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetSEParams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSEParamsCompleted(object state) {
            if ((this.GetSEParamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSEParamsCompleted(this, new GetSEParamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSEParamsAsync(string UserName, string SE_ID, string LPTY_ID) {
            this.GetSEParamsAsync(UserName, SE_ID, LPTY_ID, null);
        }
        
        public void GetSEParamsAsync(string UserName, string SE_ID, string LPTY_ID, object userState) {
            if ((this.onBeginGetSEParamsDelegate == null)) {
                this.onBeginGetSEParamsDelegate = new BeginOperationDelegate(this.OnBeginGetSEParams);
            }
            if ((this.onEndGetSEParamsDelegate == null)) {
                this.onEndGetSEParamsDelegate = new EndOperationDelegate(this.OnEndGetSEParams);
            }
            if ((this.onGetSEParamsCompletedDelegate == null)) {
                this.onGetSEParamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSEParamsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSEParamsDelegate, new object[] {
                        UserName,
                        SE_ID,
                        LPTY_ID}, this.onEndGetSEParamsDelegate, this.onGetSEParamsCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetDPInfo(string UserName, string DP_ID) {
            return base.Channel.GetDPInfo(UserName, DP_ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDPInfo(string UserName, string DP_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDPInfo(UserName, DP_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetDPInfo(System.IAsyncResult result) {
            return base.Channel.EndGetDPInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetDPInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string DP_ID = ((string)(inValues[1]));
            return this.BeginGetDPInfo(UserName, DP_ID, callback, asyncState);
        }
        
        private object[] OnEndGetDPInfo(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetDPInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDPInfoCompleted(object state) {
            if ((this.GetDPInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDPInfoCompleted(this, new GetDPInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDPInfoAsync(string UserName, string DP_ID) {
            this.GetDPInfoAsync(UserName, DP_ID, null);
        }
        
        public void GetDPInfoAsync(string UserName, string DP_ID, object userState) {
            if ((this.onBeginGetDPInfoDelegate == null)) {
                this.onBeginGetDPInfoDelegate = new BeginOperationDelegate(this.OnBeginGetDPInfo);
            }
            if ((this.onEndGetDPInfoDelegate == null)) {
                this.onEndGetDPInfoDelegate = new EndOperationDelegate(this.OnEndGetDPInfo);
            }
            if ((this.onGetDPInfoCompletedDelegate == null)) {
                this.onGetDPInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDPInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetDPInfoDelegate, new object[] {
                        UserName,
                        DP_ID}, this.onEndGetDPInfoDelegate, this.onGetDPInfoCompletedDelegate, userState);
        }
        
        public System.Data.DataTable Get_POINT_SRC_DP(string UserName, string DP_ID) {
            return base.Channel.Get_POINT_SRC_DP(UserName, DP_ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGet_POINT_SRC_DP(string UserName, string DP_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_POINT_SRC_DP(UserName, DP_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGet_POINT_SRC_DP(System.IAsyncResult result) {
            return base.Channel.EndGet_POINT_SRC_DP(result);
        }
        
        private System.IAsyncResult OnBeginGet_POINT_SRC_DP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string DP_ID = ((string)(inValues[1]));
            return this.BeginGet_POINT_SRC_DP(UserName, DP_ID, callback, asyncState);
        }
        
        private object[] OnEndGet_POINT_SRC_DP(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGet_POINT_SRC_DP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_POINT_SRC_DPCompleted(object state) {
            if ((this.Get_POINT_SRC_DPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_POINT_SRC_DPCompleted(this, new Get_POINT_SRC_DPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_POINT_SRC_DPAsync(string UserName, string DP_ID) {
            this.Get_POINT_SRC_DPAsync(UserName, DP_ID, null);
        }
        
        public void Get_POINT_SRC_DPAsync(string UserName, string DP_ID, object userState) {
            if ((this.onBeginGet_POINT_SRC_DPDelegate == null)) {
                this.onBeginGet_POINT_SRC_DPDelegate = new BeginOperationDelegate(this.OnBeginGet_POINT_SRC_DP);
            }
            if ((this.onEndGet_POINT_SRC_DPDelegate == null)) {
                this.onEndGet_POINT_SRC_DPDelegate = new EndOperationDelegate(this.OnEndGet_POINT_SRC_DP);
            }
            if ((this.onGet_POINT_SRC_DPCompletedDelegate == null)) {
                this.onGet_POINT_SRC_DPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_POINT_SRC_DPCompleted);
            }
            base.InvokeAsync(this.onBeginGet_POINT_SRC_DPDelegate, new object[] {
                        UserName,
                        DP_ID}, this.onEndGet_POINT_SRC_DPDelegate, this.onGet_POINT_SRC_DPCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetSEElements(string UserName, string SRC_ID, string POINT_ID) {
            return base.Channel.GetSEElements(UserName, SRC_ID, POINT_ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSEElements(string UserName, string SRC_ID, string POINT_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSEElements(UserName, SRC_ID, POINT_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetSEElements(System.IAsyncResult result) {
            return base.Channel.EndGetSEElements(result);
        }
        
        private System.IAsyncResult OnBeginGetSEElements(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string SRC_ID = ((string)(inValues[1]));
            string POINT_ID = ((string)(inValues[2]));
            return this.BeginGetSEElements(UserName, SRC_ID, POINT_ID, callback, asyncState);
        }
        
        private object[] OnEndGetSEElements(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetSEElements(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSEElementsCompleted(object state) {
            if ((this.GetSEElementsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSEElementsCompleted(this, new GetSEElementsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSEElementsAsync(string UserName, string SRC_ID, string POINT_ID) {
            this.GetSEElementsAsync(UserName, SRC_ID, POINT_ID, null);
        }
        
        public void GetSEElementsAsync(string UserName, string SRC_ID, string POINT_ID, object userState) {
            if ((this.onBeginGetSEElementsDelegate == null)) {
                this.onBeginGetSEElementsDelegate = new BeginOperationDelegate(this.OnBeginGetSEElements);
            }
            if ((this.onEndGetSEElementsDelegate == null)) {
                this.onEndGetSEElementsDelegate = new EndOperationDelegate(this.OnEndGetSEElements);
            }
            if ((this.onGetSEElementsCompletedDelegate == null)) {
                this.onGetSEElementsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSEElementsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSEElementsDelegate, new object[] {
                        UserName,
                        SRC_ID,
                        POINT_ID}, this.onEndGetSEElementsDelegate, this.onGetSEElementsCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetSEElementsSEP(string UserName, string SRC_ID, string POINT_ID) {
            return base.Channel.GetSEElementsSEP(UserName, SRC_ID, POINT_ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSEElementsSEP(string UserName, string SRC_ID, string POINT_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSEElementsSEP(UserName, SRC_ID, POINT_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetSEElementsSEP(System.IAsyncResult result) {
            return base.Channel.EndGetSEElementsSEP(result);
        }
        
        private System.IAsyncResult OnBeginGetSEElementsSEP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string SRC_ID = ((string)(inValues[1]));
            string POINT_ID = ((string)(inValues[2]));
            return this.BeginGetSEElementsSEP(UserName, SRC_ID, POINT_ID, callback, asyncState);
        }
        
        private object[] OnEndGetSEElementsSEP(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetSEElementsSEP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSEElementsSEPCompleted(object state) {
            if ((this.GetSEElementsSEPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSEElementsSEPCompleted(this, new GetSEElementsSEPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSEElementsSEPAsync(string UserName, string SRC_ID, string POINT_ID) {
            this.GetSEElementsSEPAsync(UserName, SRC_ID, POINT_ID, null);
        }
        
        public void GetSEElementsSEPAsync(string UserName, string SRC_ID, string POINT_ID, object userState) {
            if ((this.onBeginGetSEElementsSEPDelegate == null)) {
                this.onBeginGetSEElementsSEPDelegate = new BeginOperationDelegate(this.OnBeginGetSEElementsSEP);
            }
            if ((this.onEndGetSEElementsSEPDelegate == null)) {
                this.onEndGetSEElementsSEPDelegate = new EndOperationDelegate(this.OnEndGetSEElementsSEP);
            }
            if ((this.onGetSEElementsSEPCompletedDelegate == null)) {
                this.onGetSEElementsSEPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSEElementsSEPCompleted);
            }
            base.InvokeAsync(this.onBeginGetSEElementsSEPDelegate, new object[] {
                        UserName,
                        SRC_ID,
                        POINT_ID}, this.onEndGetSEElementsSEPDelegate, this.onGetSEElementsSEPCompletedDelegate, userState);
        }
        
        public System.Data.DataTable SetSEParams(string UserName, string SE_ID, string LPTY_ID, string LPTY_VALUE) {
            return base.Channel.SetSEParams(UserName, SE_ID, LPTY_ID, LPTY_VALUE);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSEParams(string UserName, string SE_ID, string LPTY_ID, string LPTY_VALUE, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSEParams(UserName, SE_ID, LPTY_ID, LPTY_VALUE, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndSetSEParams(System.IAsyncResult result) {
            return base.Channel.EndSetSEParams(result);
        }
        
        private System.IAsyncResult OnBeginSetSEParams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string SE_ID = ((string)(inValues[1]));
            string LPTY_ID = ((string)(inValues[2]));
            string LPTY_VALUE = ((string)(inValues[3]));
            return this.BeginSetSEParams(UserName, SE_ID, LPTY_ID, LPTY_VALUE, callback, asyncState);
        }
        
        private object[] OnEndSetSEParams(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndSetSEParams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetSEParamsCompleted(object state) {
            if ((this.SetSEParamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSEParamsCompleted(this, new SetSEParamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSEParamsAsync(string UserName, string SE_ID, string LPTY_ID, string LPTY_VALUE) {
            this.SetSEParamsAsync(UserName, SE_ID, LPTY_ID, LPTY_VALUE, null);
        }
        
        public void SetSEParamsAsync(string UserName, string SE_ID, string LPTY_ID, string LPTY_VALUE, object userState) {
            if ((this.onBeginSetSEParamsDelegate == null)) {
                this.onBeginSetSEParamsDelegate = new BeginOperationDelegate(this.OnBeginSetSEParams);
            }
            if ((this.onEndSetSEParamsDelegate == null)) {
                this.onEndSetSEParamsDelegate = new EndOperationDelegate(this.OnEndSetSEParams);
            }
            if ((this.onSetSEParamsCompletedDelegate == null)) {
                this.onSetSEParamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSEParamsCompleted);
            }
            base.InvokeAsync(this.onBeginSetSEParamsDelegate, new object[] {
                        UserName,
                        SE_ID,
                        LPTY_ID,
                        LPTY_VALUE}, this.onEndSetSEParamsDelegate, this.onSetSEParamsCompletedDelegate, userState);
        }
        
        public System.Data.DataTable SetDPEnabledParam(string UserName, string DP_ID, string ENABLED_VALUE) {
            return base.Channel.SetDPEnabledParam(UserName, DP_ID, ENABLED_VALUE);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDPEnabledParam(string UserName, string DP_ID, string ENABLED_VALUE, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDPEnabledParam(UserName, DP_ID, ENABLED_VALUE, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndSetDPEnabledParam(System.IAsyncResult result) {
            return base.Channel.EndSetDPEnabledParam(result);
        }
        
        private System.IAsyncResult OnBeginSetDPEnabledParam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string DP_ID = ((string)(inValues[1]));
            string ENABLED_VALUE = ((string)(inValues[2]));
            return this.BeginSetDPEnabledParam(UserName, DP_ID, ENABLED_VALUE, callback, asyncState);
        }
        
        private object[] OnEndSetDPEnabledParam(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndSetDPEnabledParam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDPEnabledParamCompleted(object state) {
            if ((this.SetDPEnabledParamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDPEnabledParamCompleted(this, new SetDPEnabledParamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDPEnabledParamAsync(string UserName, string DP_ID, string ENABLED_VALUE) {
            this.SetDPEnabledParamAsync(UserName, DP_ID, ENABLED_VALUE, null);
        }
        
        public void SetDPEnabledParamAsync(string UserName, string DP_ID, string ENABLED_VALUE, object userState) {
            if ((this.onBeginSetDPEnabledParamDelegate == null)) {
                this.onBeginSetDPEnabledParamDelegate = new BeginOperationDelegate(this.OnBeginSetDPEnabledParam);
            }
            if ((this.onEndSetDPEnabledParamDelegate == null)) {
                this.onEndSetDPEnabledParamDelegate = new EndOperationDelegate(this.OnEndSetDPEnabledParam);
            }
            if ((this.onSetDPEnabledParamCompletedDelegate == null)) {
                this.onSetDPEnabledParamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDPEnabledParamCompleted);
            }
            base.InvokeAsync(this.onBeginSetDPEnabledParamDelegate, new object[] {
                        UserName,
                        DP_ID,
                        ENABLED_VALUE}, this.onEndSetDPEnabledParamDelegate, this.onSetDPEnabledParamCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetDPChannelsInfo(string UserName, string DP_ID) {
            return base.Channel.GetDPChannelsInfo(UserName, DP_ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDPChannelsInfo(string UserName, string DP_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDPChannelsInfo(UserName, DP_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetDPChannelsInfo(System.IAsyncResult result) {
            return base.Channel.EndGetDPChannelsInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetDPChannelsInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string DP_ID = ((string)(inValues[1]));
            return this.BeginGetDPChannelsInfo(UserName, DP_ID, callback, asyncState);
        }
        
        private object[] OnEndGetDPChannelsInfo(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetDPChannelsInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDPChannelsInfoCompleted(object state) {
            if ((this.GetDPChannelsInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDPChannelsInfoCompleted(this, new GetDPChannelsInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDPChannelsInfoAsync(string UserName, string DP_ID) {
            this.GetDPChannelsInfoAsync(UserName, DP_ID, null);
        }
        
        public void GetDPChannelsInfoAsync(string UserName, string DP_ID, object userState) {
            if ((this.onBeginGetDPChannelsInfoDelegate == null)) {
                this.onBeginGetDPChannelsInfoDelegate = new BeginOperationDelegate(this.OnBeginGetDPChannelsInfo);
            }
            if ((this.onEndGetDPChannelsInfoDelegate == null)) {
                this.onEndGetDPChannelsInfoDelegate = new EndOperationDelegate(this.OnEndGetDPChannelsInfo);
            }
            if ((this.onGetDPChannelsInfoCompletedDelegate == null)) {
                this.onGetDPChannelsInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDPChannelsInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetDPChannelsInfoDelegate, new object[] {
                        UserName,
                        DP_ID}, this.onEndGetDPChannelsInfoDelegate, this.onGetDPChannelsInfoCompletedDelegate, userState);
        }
        
        public System.Data.DataTable SetPHEnabledParam(string UserName, string PH_ID, string ENABLED_VALUE) {
            return base.Channel.SetPHEnabledParam(UserName, PH_ID, ENABLED_VALUE);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetPHEnabledParam(string UserName, string PH_ID, string ENABLED_VALUE, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPHEnabledParam(UserName, PH_ID, ENABLED_VALUE, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndSetPHEnabledParam(System.IAsyncResult result) {
            return base.Channel.EndSetPHEnabledParam(result);
        }
        
        private System.IAsyncResult OnBeginSetPHEnabledParam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string PH_ID = ((string)(inValues[1]));
            string ENABLED_VALUE = ((string)(inValues[2]));
            return this.BeginSetPHEnabledParam(UserName, PH_ID, ENABLED_VALUE, callback, asyncState);
        }
        
        private object[] OnEndSetPHEnabledParam(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndSetPHEnabledParam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetPHEnabledParamCompleted(object state) {
            if ((this.SetPHEnabledParamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPHEnabledParamCompleted(this, new SetPHEnabledParamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPHEnabledParamAsync(string UserName, string PH_ID, string ENABLED_VALUE) {
            this.SetPHEnabledParamAsync(UserName, PH_ID, ENABLED_VALUE, null);
        }
        
        public void SetPHEnabledParamAsync(string UserName, string PH_ID, string ENABLED_VALUE, object userState) {
            if ((this.onBeginSetPHEnabledParamDelegate == null)) {
                this.onBeginSetPHEnabledParamDelegate = new BeginOperationDelegate(this.OnBeginSetPHEnabledParam);
            }
            if ((this.onEndSetPHEnabledParamDelegate == null)) {
                this.onEndSetPHEnabledParamDelegate = new EndOperationDelegate(this.OnEndSetPHEnabledParam);
            }
            if ((this.onSetPHEnabledParamCompletedDelegate == null)) {
                this.onSetPHEnabledParamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPHEnabledParamCompleted);
            }
            base.InvokeAsync(this.onBeginSetPHEnabledParamDelegate, new object[] {
                        UserName,
                        PH_ID,
                        ENABLED_VALUE}, this.onEndSetPHEnabledParamDelegate, this.onSetPHEnabledParamCompletedDelegate, userState);
        }
        
        public System.Data.DataTable SetSEEnabledParam(string UserName, string SE_ID, string ENABLED_VALUE) {
            return base.Channel.SetSEEnabledParam(UserName, SE_ID, ENABLED_VALUE);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSEEnabledParam(string UserName, string SE_ID, string ENABLED_VALUE, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSEEnabledParam(UserName, SE_ID, ENABLED_VALUE, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndSetSEEnabledParam(System.IAsyncResult result) {
            return base.Channel.EndSetSEEnabledParam(result);
        }
        
        private System.IAsyncResult OnBeginSetSEEnabledParam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string SE_ID = ((string)(inValues[1]));
            string ENABLED_VALUE = ((string)(inValues[2]));
            return this.BeginSetSEEnabledParam(UserName, SE_ID, ENABLED_VALUE, callback, asyncState);
        }
        
        private object[] OnEndSetSEEnabledParam(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndSetSEEnabledParam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetSEEnabledParamCompleted(object state) {
            if ((this.SetSEEnabledParamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSEEnabledParamCompleted(this, new SetSEEnabledParamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSEEnabledParamAsync(string UserName, string SE_ID, string ENABLED_VALUE) {
            this.SetSEEnabledParamAsync(UserName, SE_ID, ENABLED_VALUE, null);
        }
        
        public void SetSEEnabledParamAsync(string UserName, string SE_ID, string ENABLED_VALUE, object userState) {
            if ((this.onBeginSetSEEnabledParamDelegate == null)) {
                this.onBeginSetSEEnabledParamDelegate = new BeginOperationDelegate(this.OnBeginSetSEEnabledParam);
            }
            if ((this.onEndSetSEEnabledParamDelegate == null)) {
                this.onEndSetSEEnabledParamDelegate = new EndOperationDelegate(this.OnEndSetSEEnabledParam);
            }
            if ((this.onSetSEEnabledParamCompletedDelegate == null)) {
                this.onSetSEEnabledParamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSEEnabledParamCompleted);
            }
            base.InvokeAsync(this.onBeginSetSEEnabledParamDelegate, new object[] {
                        UserName,
                        SE_ID,
                        ENABLED_VALUE}, this.onEndSetSEEnabledParamDelegate, this.onSetSEEnabledParamCompletedDelegate, userState);
        }
        
        public System.Data.DataTable SetSEPEnabledParam(string UserName, string SEP_ID, string ENABLED_VALUE) {
            return base.Channel.SetSEPEnabledParam(UserName, SEP_ID, ENABLED_VALUE);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSEPEnabledParam(string UserName, string SEP_ID, string ENABLED_VALUE, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSEPEnabledParam(UserName, SEP_ID, ENABLED_VALUE, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndSetSEPEnabledParam(System.IAsyncResult result) {
            return base.Channel.EndSetSEPEnabledParam(result);
        }
        
        private System.IAsyncResult OnBeginSetSEPEnabledParam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string SEP_ID = ((string)(inValues[1]));
            string ENABLED_VALUE = ((string)(inValues[2]));
            return this.BeginSetSEPEnabledParam(UserName, SEP_ID, ENABLED_VALUE, callback, asyncState);
        }
        
        private object[] OnEndSetSEPEnabledParam(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndSetSEPEnabledParam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetSEPEnabledParamCompleted(object state) {
            if ((this.SetSEPEnabledParamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSEPEnabledParamCompleted(this, new SetSEPEnabledParamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSEPEnabledParamAsync(string UserName, string SEP_ID, string ENABLED_VALUE) {
            this.SetSEPEnabledParamAsync(UserName, SEP_ID, ENABLED_VALUE, null);
        }
        
        public void SetSEPEnabledParamAsync(string UserName, string SEP_ID, string ENABLED_VALUE, object userState) {
            if ((this.onBeginSetSEPEnabledParamDelegate == null)) {
                this.onBeginSetSEPEnabledParamDelegate = new BeginOperationDelegate(this.OnBeginSetSEPEnabledParam);
            }
            if ((this.onEndSetSEPEnabledParamDelegate == null)) {
                this.onEndSetSEPEnabledParamDelegate = new EndOperationDelegate(this.OnEndSetSEPEnabledParam);
            }
            if ((this.onSetSEPEnabledParamCompletedDelegate == null)) {
                this.onSetSEPEnabledParamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSEPEnabledParamCompleted);
            }
            base.InvokeAsync(this.onBeginSetSEPEnabledParamDelegate, new object[] {
                        UserName,
                        SEP_ID,
                        ENABLED_VALUE}, this.onEndSetSEPEnabledParamDelegate, this.onSetSEPEnabledParamCompletedDelegate, userState);
        }
    }
}
