<local:WaitableControl x:Class="TMP.Work.Emcos.DataForCalculateNormativ.SettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TMP.Work.Emcos.DataForCalculateNormativ"
             xmlns:properties="clr-namespace:TMP.Work.Emcos.DataForCalculateNormativ.Properties"
             mc:Ignorable="d" 
             Cursor="Wait"
             TextOptions.TextFormattingMode="Ideal"
             UseLayoutRounding="True">
    <local:WaitableControl.Resources>
        <local:Base64StringToEmcosReportConverter x:Key="Base64StringToEmcosReportConverter"/>
        <local:Base64StringToListPointConverter x:Key="Base64StringToListPointConverter"/>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" Negative="False"/>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverterNegative" Negative="True"/>

        <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="0 2"/>
            <Setter Property="MinWidth" Value="150" />
        </Style>
        <Style BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="0 2"/>
        </Style>
    </local:WaitableControl.Resources>
    <Grid>
        <local:Background />
        <ContentControl Content="{Binding DialogHost}" Panel.ZIndex="1001"/>
        <!-- -->
        <Border BorderBrush="{x:Static SystemColors.ActiveBorderBrush}" BorderThickness="1" Background="{x:Static SystemColors.WindowBrush}" Padding="10" Margin="10"
                    HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="AppStarting" CornerRadius="5">
            <DockPanel>
                <TextBlock DockPanel.Dock="Top" TextAlignment="Center" Text="{x:Static local:Strings.SettingsHeader}"/>
                <StackPanel DockPanel.Dock="Bottom" Margin="5 2">
                    <GroupBox Margin="0 2" Header="Параметры сервиса" BorderBrush="{x:Static SystemColors.HighlightBrush}" BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <!-- -->
                            <Label Grid.Row="0" Grid.Column="0" Content="Адрес сервера"/>
                            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Source={x:Static properties:Settings.Default}, Path=ServerAddress}" />
                            <!-- -->
                            <Label Grid.Row="1" Grid.Column="0" Content="Путь к сайту"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Source={x:Static properties:Settings.Default}, Path=SiteName}" />
                            <!-- -->
                            <Label Grid.Row="2" Grid.Column="0" Content="Путь к сервису"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Source={x:Static properties:Settings.Default}, Path=ServiceName}" />
                            <!-- -->
                            <Label Grid.Row="3" Grid.Column="0" Content="Пользователь"/>
                            <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Source={x:Static properties:Settings.Default}, Path=UserName}" />
                            <!-- -->
                            <Label Grid.Row="4" Grid.Column="0" Content="Пароль"/>
                            <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Source={x:Static properties:Settings.Default}, Path=Password}" />
                            <!-- -->
                            <Label Grid.Row="5" Grid.Column="0" Content="Макс. время ожидания в секундах"/>
                            <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding Source={x:Static properties:Settings.Default}, Path=NetTimeOutInSeconds}" />
                            <!-- -->
                            <StackPanel Grid.Row="6" Orientation="Vertical" Margin="5 0" TextBlock.LineStackingStrategy="BlockLineHeight" TextBlock.LineHeight="15">
                                <TextBlock Text="{x:Static local:Strings.MessageServerAvailability}" Padding="0" Visibility="{Binding ServerAvailability, Converter={StaticResource BoolToVisibilityConverterNegative}}" Foreground="Green"/>
                                <TextBlock Text="{x:Static local:Strings.MessageServerNotAvailability}" Padding="0" Visibility="{Binding ServerAvailability, Converter={StaticResource BoolToVisibilityConverter}}" Foreground="Red"/>
                                <TextBlock Text="{x:Static local:Strings.MessageServiceAvailability}" Padding="0" Visibility="{Binding ServiceAvailability, Converter={StaticResource BoolToVisibilityConverterNegative}}" Foreground="Green"/>
                                <TextBlock Text="{x:Static local:Strings.MessageServiceNotAvailability}" Padding="0" Visibility="{Binding ServiceAvailability, Converter={StaticResource BoolToVisibilityConverter}}" Foreground="Red"/>
                            </StackPanel>
                            <Button Grid.Row="6" Grid.Column="2" HorizontalAlignment="Center" Content="Проверить" Command="{Binding CheckCommand}"/>
                            <!-- -->
                            <TextBlock Grid.Row="7" Grid.ColumnSpan="2" Padding="0" Text="{Binding MessageError}" Visibility="{Binding ServiceAvailability, Converter={StaticResource BoolToVisibilityConverter}}" 
                                       LineStackingStrategy="BlockLineHeight" LineHeight="15" TextAlignment="Center" TextWrapping="Wrap" Foreground="Red" FontWeight="Bold" />
                        </Grid>
                    </GroupBox>
                    <!-- -->
                    <GroupBox Margin="0 2" IsEnabled="{Binding IsReportSettingsEnabled}" Header="Отчёт" BorderBrush="{x:Static SystemColors.HighlightBrush}" BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Группа отчётов"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding ReportsGroupList}"  SelectedValuePath="RP_TYPE_ID" IsEnabled="true" 
                          SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=SelectedReportsGroupId}" IsSynchronizedWithCurrentItem="True">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Name="txt" Text="{Binding RP_TYPE_NAME}" Margin="2"/>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding RP_PUBLIC}" Value="false">
                                                <Setter TargetName="txt" Property="Foreground" Value="Gray"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <!-- -->
                            <Label Grid.Row="1" Grid.Column="0" Content="Отчёт"/>
                            <ComboBox Grid.Row="1" Grid.Column="1"  ItemsSource="{Binding ReportsList}"
                          SelectedValue="{Binding Source={x:Static properties:Settings.Default}, 
                                            Path=SelectedReport,
                                            Converter={StaticResource Base64StringToEmcosReportConverter}}" IsSynchronizedWithCurrentItem="True">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Name="txt" Text="{Binding RP_NAME}" Margin="2"/>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding RP_PUBLIC}" Value="false">
                                                <Setter TargetName="txt" Property="Foreground" Value="Gray"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <!-- -->
                            <Label Grid.Row="2" Grid.Column="0" Content="Подразделение"/>
                            <ComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding DepartamentsList}" 
                          SelectedValue="{Binding Source={x:Static properties:Settings.Default}, 
                                            Path=RootPoint,
                                            Converter={StaticResource Base64StringToListPointConverter}}" IsSynchronizedWithCurrentItem="True">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Name="txt" Text="{Binding Name}" Margin="2"/>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding TypeCode}" Value="RES">
                                                <Setter TargetName="txt" Property="Margin" Value="15,2"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </Grid>
                    </GroupBox>
                    <!-- -->
                    <UniformGrid Margin="0 5" Columns="2" HorizontalAlignment="Center">
                        <Button Content="{x:Static local:Strings.ToDefaultHeader}" Padding="10 2" Command="{Binding ToDefaultCommand}"/>
                        <Button Content="{x:Static local:Strings.CloseHeader}" Padding="10 2" IsDefault="True" Command="{Binding SaveCommand}" TabIndex="0"/>
                    </UniformGrid>
                </StackPanel>
            </DockPanel>
            <Border.Effect>
                <DropShadowEffect BlurRadius="20" Color="White" Direction="0" RenderingBias="Performance" ShadowDepth="0" Opacity="0.6"/>
            </Border.Effect>
        </Border>
    </Grid>
</local:WaitableControl>