<UserControl
    x:Class="TMP.WORK.AramisChetchiki.Controls.PropertyTransfer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:TMP.UI.Controls.WPF;assembly=ui.controls.wpf"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:helpers="clr-namespace:TMP.UI.Controls.WPF.Helpers;assembly=ui.controls.wpf"
    xmlns:local_controls="clr-namespace:TMP.WORK.AramisChetchiki.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui_controls="clr-namespace:TMP.UI.Controls.WPF;assembly=ui.controls.wpf"
    x:Name="root"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>
        <GridSplitter
            Grid.Column="1"
            Width="3"
            Margin="0"
            HorizontalAlignment="Left"
            VerticalAlignment="Stretch"
            Background="{DynamicResource HighlightBrush}"
            ResizeBehavior="PreviousAndNext"
            ResizeDirection="Columns" />
        <HeaderedContentControl Header="Доступные поля">
            <DockPanel>
                <TextBlock DockPanel.Dock="Bottom" Text="{Binding Path=SourceCollection.Count, StringFormat={}Выбрано {0}, ElementName=root}" />
                <ListBox
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    dd:DragDrop.UseDefaultEffectDataTemplate="True"
                    AlternationCount="2"
                    DisplayMemberPath="DisplayName"
                    ItemContainerStyle="{StaticResource ListBoxItemWithAlternationIndex}"
                    ItemsSource="{Binding SourceCollection, ElementName=root}"
                    SelectedItem="{Binding SourceSelectedItem, ElementName=root, Mode=TwoWay}"
                    SelectedValuePath="Name">
                    <ListBox.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        FontWeight="Black"
                                        Text="{Binding Name}" />
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListBox.GroupStyle>
                    <ListBox.Style>
                        <Style BasedOn="{StaticResource {x:Type ListBox}}" TargetType="{x:Type ListBox}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding AllSourceCollectionItemsUsed, RelativeSource={RelativeSource AncestorType={x:Type local_controls:PropertyTransfer}}}" Value="True" />
                                        <Condition Binding="{Binding HasSourceItems, RelativeSource={RelativeSource AncestorType={x:Type local_controls:PropertyTransfer}}}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Border
                                                        Margin="5"
                                                        Padding="10,5"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                                                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                                                        BorderThickness="1"
                                                        CornerRadius="10">
                                                        <ui_controls:GlowEffectTextBlock
                                                            helpers:RelativeFontSize.RelativeFontSize="1.5"
                                                            FontWeight="DemiBold"
                                                            Text="используются&#x0A;все&#x0A;доступные&#x0A;поля" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding AllSourceCollectionItemsUsed, RelativeSource={RelativeSource AncestorType={x:Type local_controls:PropertyTransfer}}}" Value="False" />
                                        <Condition Binding="{Binding HasSourceItems, RelativeSource={RelativeSource AncestorType={x:Type local_controls:PropertyTransfer}}}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Margin" Value="5" />
                                        <Setter Property="ToolTip" Value="{Binding AllSourceCollectionItemsUsed, NotifyOnTargetUpdated=True}" />
                                        <Setter Property="ToolTip" Value="{Binding HasSourceItems, RelativeSource={RelativeSource AncestorType={x:Type local_controls:PropertyTransfer}}}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <controls:NoData Message="список&#x0A;пуст" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
                </ListBox>
            </DockPanel>
        </HeaderedContentControl>
        <controls:StackPanel
            Grid.Column="1"
            Margin="8,0,5,0"
            VerticalAlignment="Center"
            MarginBetweenChildren="10">
            <controls:ButtonWithIconKind
                Command="{Binding CommandRemoveFromTarget, ElementName=root}"
                ImageKind="Delete"
                ToolTip="Удалить из списка" />
            <controls:ButtonWithIconKind
                Command="{Binding CommandClear, ElementName=root}"
                ImageKind="ClearReflectHorizontal"
                ToolTip="Очистить список" />
            <Separator />
            <controls:ButtonWithIconKind
                Command="{Binding CommandAddToTarget, ElementName=root}"
                ImageKind="ChevronRight"
                ToolTip="Добавить поле в используемые" />
            <controls:ButtonWithIconKind
                Command="{Binding CommandRemoveFromTarget, ElementName=root}"
                ImageKind="ChevronLeft"
                ToolTip="Удалить поле из используемых" />
            <Separator />
            <controls:ButtonWithIconKind
                Command="{Binding CommandMoveUp, ElementName=root}"
                ImageKind="ChevronUp"
                ToolTip="Переместить выше по списку" />
            <controls:ButtonWithIconKind
                Command="{Binding CommandMoveDown, ElementName=root}"
                ImageKind="ChevronDown"
                ToolTip="Переместить ниже по списку" />
        </controls:StackPanel>
        <HeaderedContentControl Grid.Column="2" Header="Используемые поля">
            <DockPanel>
                <TextBlock DockPanel.Dock="Bottom" Text="{Binding Path=TargetCollection.Count, StringFormat={}Выбрано {0}, ElementName=root}" />
                <ListBox
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    AlternationCount="2"
                    DisplayMemberPath="DisplayName"
                    ItemContainerStyle="{StaticResource ListBoxItemWithAlternationIndex}"
                    ItemsSource="{Binding TargetCollection, ElementName=root}"
                    SelectedItem="{Binding TargetSelectedItem, ElementName=root, Mode=TwoWay}"
                    ToolTip="Измените порядок полей, перетаскивая их с помощью мыши.">
                    <ListBox.Style>
                        <Style BasedOn="{StaticResource {x:Type ListBox}}" TargetType="{x:Type ListBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasTargetItems, RelativeSource={RelativeSource AncestorType={x:Type local_controls:PropertyTransfer}}}" Value="False">
                                    <Setter Property="Margin" Value="5" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <controls:NoData Message="список&#x0A;пуст" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
                </ListBox>
            </DockPanel>
        </HeaderedContentControl>
    </Grid>
</UserControl>
