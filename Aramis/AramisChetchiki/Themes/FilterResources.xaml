<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:TMP.UI.Controls.WPF.Converters;assembly=ui.controls.wpf"
                    xmlns:itemsfilter="clr-namespace:ItemsFilter;assembly=ItemsFilter"
                    xmlns:itemsfilter_view="clr-namespace:ItemsFilter.View;assembly=ItemsFilter"
                    xmlns:itemsfilter_model="clr-namespace:ItemsFilter.Model;assembly=ItemsFilter"
                    xmlns:local="clr-namespace:TMP.WORK.AramisChetchiki.Controls"
                    xmlns:local_controls="clr-namespace:TMP.WORK.AramisChetchiki.Controls"
                    xmlns:controls="clr-namespace:TMP.UI.Controls.WPF;assembly=ui.controls.wpf"
                    >

    <Style x:Key="FilterHeaderedContentControlStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border x:Name="border"
                                Margin="10,2,10,-5" HorizontalAlignment="Center"
                                Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                                BorderThickness="1"
                                CornerRadius="5">
                        <TextBlock x:Name="txt"
                                Margin="5,2"
                                Text="{TemplateBinding Content}" />
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsFilterActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BaseFilterControl}}}" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel >
                        <ContentPresenter Panel.ZIndex="1"
                                              ContentSource="Header"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              DockPanel.Dock="Top" />
                        <Border x:Name="border"
                                    Margin="0,-5,0,0"
                                    Padding="2,8,2,2" CornerRadius="5"
                                    Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                                    BorderThickness="1">
                            <ContentPresenter ContentSource="Content" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>