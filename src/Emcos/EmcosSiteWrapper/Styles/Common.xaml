<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="PresentationOptions">

    <FontFamily x:Key="DefaultFont">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
    <FontFamily x:Key="HeaderFontFamily">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
    <FontFamily x:Key="ContentFontFamily">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>

    <FontFamily x:Key="ContentTextFontFamily">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
    <FontFamily x:Key="ContentNumbersFontFamily">Century Gothic, Segoe UI, Trebuchet MS</FontFamily>

    <system:Double x:Key="HeaderFontSize">18</system:Double>
    <system:Double x:Key="SubHeaderFontSize">16</system:Double>
    <system:Double x:Key="LargeFontSize">22</system:Double>
    <system:Double x:Key="VeryLargeFontSize">28</system:Double>
    <system:Double x:Key="NormalFontSize">14</system:Double>
    <system:Double x:Key="ContentFontSize">13</system:Double>
    <system:Double x:Key="SmallFontSize">12</system:Double>
    <system:Double x:Key="VerySmallFontSize">10</system:Double>
    <system:Double x:Key="MenuFontSize">13</system:Double>
    <system:Double x:Key="ContextMenuFontSize">13</system:Double>

    <system:Double x:Key="tableFontSize">16</system:Double>

    <system:Double x:Key="iconSize">32</system:Double>

    <system:Double x:Key="numbersColumnMinWidth">120</system:Double>

    <system:Double x:Key="CellFontSize">14</system:Double>

    <system:String x:Key="DoubleStringFormat">{0:N2}</system:String>
    <system:String x:Key="NumberStringFormat">{0:N0}</system:String>

    <Style x:Key="DialogWindow" TargetType="{x:Type Window}">
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    </Style>

    <!--  Images  -->
    <BitmapImage
        x:Key="Enterprise"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/prom.png" />
    <BitmapImage
        x:Key="Departament"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/area.png" />
    <BitmapImage
        x:Key="Substation"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/substation.png" />
    <BitmapImage
        x:Key="Voltage"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/section.png" />
    <BitmapImage
        x:Key="Section"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/section.png" />
    <BitmapImage
        x:Key="PowerTransformer"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/UnitTransformer.png" />
    <BitmapImage
        x:Key="Transformer"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/Transformer.png" />
    <BitmapImage
        x:Key="UnitTransformer"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/UnitTransformer.png" />
    <BitmapImage
        x:Key="UnitTransformerBus"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/UnitTransformerBus.png" />
    <BitmapImage
        x:Key="Fider"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/element.png" />
    <BitmapImage
        x:Key="Fider_10"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/fider10.png" />
    <BitmapImage
        x:Key="Fider_35"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/fider35.png" />
    <BitmapImage
        x:Key="Group"
        PresentationOptions:Freeze="True"
        UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/section.png" />



    <Style x:Key="ExpandCollapsePlusMinusToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="17" Height="15"
                          SnapsToDevicePixels="True">
                        <!--  Квадрат 13x13 пикселей  -->
                        <Rectangle x:Name="rect"
                                   Width="13" Height="13"
                                   Stroke="{DynamicResource GrayBrush2}"
                                   SnapsToDevicePixels="true">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,2">
                                    <GradientStop Offset="0" Color="{DynamicResource WhiteColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource Gray8}" />
                                    <GradientStop Offset="1" Color="{DynamicResource Gray6}" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <!--  Вертикальная линия по центру квадрата  -->
                        <Rectangle x:Name="ExpandPath"
                                   Width="1" Height="7"
                                   Stroke="{DynamicResource BlackBrush}"
                                   SnapsToDevicePixels="true" />
                        <!--  Горизонтальная линия по центру квадрата  -->
                        <Rectangle x:Name="MinusPath"
                                   Width="7" Height="1"
                                   Stroke="{DynamicResource BlackBrush}"
                                   SnapsToDevicePixels="true" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="HorizontalGridSplitterStyle"
        BasedOn="{StaticResource GridSplitterStyle}"
        TargetType="{x:Type GridSplitter}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="{DynamicResource HighlightColor}" />
                    <GradientStop Offset="0.5" Color="{DynamicResource AccentColor}" />
                    <GradientStop Offset="1" Color="{DynamicResource HighlightColor}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="3" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>

    <Style
        x:Key="VerticalGridSplitterStyle"
        BasedOn="{StaticResource GridSplitterStyle}"
        TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="3" />
    </Style>


    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource PanelBackgroundHorizontal}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="CornerRadius" Value="4,4,4,4" />
        <Setter Property="Effect" Value="{DynamicResource dropShadow}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--  Separator  -->
    <Style TargetType="{x:Type Separator}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border x:Name="b1"
                                Margin="0,1"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                BorderBrush="{DynamicResource GrayBrush4}"
                                BorderThickness="1" />
                        <Border x:Name="b2"
                                Margin="2,1,0,1"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                BorderBrush="{DynamicResource WhiteBrush}"
                                BorderThickness="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VerticalAlignment" Value="Stretch">
                            <Setter TargetName="b1" Property="Margin" Value="0,1" />
                            <Setter TargetName="b2" Property="Margin" Value="2,1,0,1" />
                            <Setter Property="Margin" Value="5,0" />
                            <Setter TargetName="b1" Property="Width" Value="1" />
                            <Setter TargetName="b2" Property="Width" Value="1" />
                            <Setter Property="Width" Value="10" />
                        </Trigger>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter TargetName="b1" Property="Height" Value="1" />
                            <Setter TargetName="b2" Property="Height" Value="1" />
                            <Setter Property="Height" Value="5" />
                            <Setter TargetName="b1" Property="Margin" Value="1,0" />
                            <Setter TargetName="b2" Property="Margin" Value="1,2,1,0" />
                            <Setter Property="Margin" Value="0,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <!--  HeaderControl  -->
    <Style TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border x:Name="PART_HEADER"
                            Margin="2,0,2,0" Padding="5,0,5,0"
                            Background="{StaticResource Brush_HeaderBackground}"
                            BorderBrush="{DynamicResource WhiteBrush}"
                            BorderThickness="0"
                            CornerRadius="5 5 0 0" SnapsToDevicePixels="True">
                        <TextBlock Margin="0,-2,0,2" Padding="0"
                                   HorizontalAlignment="Center"
                                   Foreground="{DynamicResource WhiteBrush}"
                                   FontSize="{DynamicResource HeaderFontSize}"
                                   FontWeight="Bold"
                                   Text="{TemplateBinding Content}"
                                   TextWrapping="Wrap" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <Grid VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="0"
                                          Margin="0"
                                          ContentSource="Header"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        <Border Grid.Row="1"
                                Margin="2,0,2,0"
                                BorderBrush="{DynamicResource AccentColorBrush4}"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0 0 5 5">
                            <Border Margin="1,0,0,0"
                                    Background="{StaticResource PanelBackgroundVertical}"
                                    CornerRadius="0 0 5 5">
                                <ContentPresenter ContentSource="Content" ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Expander  -->
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Margin="1"
                                Padding="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                DockPanel.Dock="Top"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.FocusVisualStyle>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Border>
                                                        <Rectangle
                                                            Margin="0"
                                                            SnapsToDevicePixels="True"
                                                            Stroke="Black"
                                                            StrokeDashArray="1 2"
                                                            StrokeThickness="1" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.FocusVisualStyle>
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}">
                                                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="19" />
                                                                <ColumnDefinition Width="*" />
                                                            </Grid.ColumnDefinitions>
                                                            <Ellipse
                                                                x:Name="circle"
                                                                Width="19"
                                                                Height="19"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center"
                                                                Fill="White"
                                                                Stroke="#FF333333" />
                                                            <Path
                                                                x:Name="arrow"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center"
                                                                Data="M1,1.5L4.5,5 8,1.5"
                                                                SnapsToDevicePixels="False"
                                                                Stroke="#FF333333"
                                                                StrokeThickness="2" />
                                                            <ContentPresenter
                                                                Grid.Column="1"
                                                                Margin="4,0,0,0"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                VerticalAlignment="Center"
                                                                Content="{TemplateBinding Content}"
                                                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                RecognizesAccessKey="True"
                                                                SnapsToDevicePixels="True" />
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="arrow" Property="Data" Value="M1,4.5L4.5,1 8,4.5" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="circle" Property="Stroke" Value="#FF5593FF" />
                                                            <Setter TargetName="circle" Property="Fill" Value="#FFF3F9FF" />
                                                            <Setter TargetName="arrow" Property="Stroke" Value="Black" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="circle" Property="Stroke" Value="#FF3C77DD" />
                                                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                                            <Setter TargetName="circle" Property="Fill" Value="#FFD9ECFF" />
                                                            <Setter TargetName="arrow" Property="Stroke" Value="Black" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="circle" Property="Stroke" Value="#FFBCBCBC" />
                                                            <Setter TargetName="circle" Property="Fill" Value="#FFE6E6E6" />
                                                            <Setter TargetName="arrow" Property="Stroke" Value="#FF707070" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ContentPresenter
                                x:Name="ExpandSite"
                                Grid.Row="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PlusMinusExpander" TargetType="{x:Type Expander}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander}}, Path=Header, Mode=OneWay}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="Gray"
                            IsHitTestVisible="false"
                            Opacity="0" />
                        <DockPanel x:Name="ExpanderRoot">
                            <Border
                                x:Name="HeaderSite"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                DockPanel.Dock="Top">
                                <DockPanel>
                                    <ToggleButton
                                        x:Name="ToggleSite"
                                        Margin="2"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        DockPanel.Dock="Left"
                                        FocusVisualStyle="{x:Null}"
                                        IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource ExpandCollapsePlusMinusToggleStyle}" />
                                    <ContentPresenter
                                        Margin="{TemplateBinding Padding}"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                        RecognizesAccessKey="True" />
                                </DockPanel>
                            </Border>
                            <Border
                                x:Name="ExpandSite"
                                Margin="5,0,0,1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,0,1,1"
                                DockPanel.Dock="Bottom"
                                Focusable="false"
                                Opacity="0"
                                Visibility="Collapsed">
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Cursor="{TemplateBinding Cursor}" />
                            </Border>
                        </DockPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0"
                                            Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupStyleContainerStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <Expander
                            Margin="0"
                            BorderThickness="0,0,0,1"
                            IsExpanded="True"
                            Style="{StaticResource PlusMinusExpander}">
                            <Expander.Header>
                                <DockPanel>
                                    <TextBlock
                                        Margin="5,0,0,0"
                                        DockPanel.Dock="Left"
                                        FontWeight="Bold"
                                        Text="{Binding Path=Name}" />
                                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            FontWeight="Bold"
                                            Text="{Binding Path=ItemCount}" />
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            FontWeight="Bold"
                                            Text=" пст." />
                                    </StackPanel>
                                </DockPanel>
                            </Expander.Header>
                            <Expander.Content>
                                <ItemsPresenter Margin="0" />
                            </Expander.Content>
                        </Expander>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="tableViewColumnHeaderDataTemplate">
        <TextBlock
            Padding="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Foreground="Navy"
            LineHeight="18"
            LineStackingStrategy="BlockLineHeight"
            Text="{Binding}"
            TextAlignment="Center"
            TextWrapping="Wrap" />
    </DataTemplate>

    <DataTemplate x:Key="textTableViewCellTemplate">
        <TextBlock Style="{StaticResource TextCellStyle}" Text="{Binding}" />
    </DataTemplate>

    <DataTemplate x:Key="numberTableViewCellTemplate">
        <TextBlock
            x:Name="content"
            Style="{StaticResource NumericCellStyle}"
            Text="{Binding StringFormat={StaticResource DoubleStringFormat}, ConverterCulture=be-BY}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding}" Value="0">
                <Setter TargetName="content" Property="Foreground" Value="{DynamicResource BlackTransparentBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Style
        x:Key="TabControlStyle"
        BasedOn="{StaticResource {x:Type TabControl}}"
        TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource TabItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        ClipToBounds="True"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="2,2,2,0"
                            HorizontalAlignment="Center"
                            Panel.ZIndex="1"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding SelectedContent}"
                                ContentSource="SelectedContent"
                                ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style-->

    <Style
        x:Key="TabItemStyle"
        BasedOn="{StaticResource {x:Type TabItem}}"
        TargetType="{x:Type TabItem}">
        <Setter Property="Padding" Value="50,1" />
    </Style>

</ResourceDictionary>
