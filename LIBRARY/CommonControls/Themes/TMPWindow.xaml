<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviors="clr-namespace:TMP.Wpf.CommonControls.Behaviors"
    xmlns:Controls="clr-namespace:TMP.Wpf.CommonControls"
    xmlns:Converters="clr-namespace:TMP.Wpf.CommonControls.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/TMP.Wpf.CommonControls;component/Styles/Controls.TextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Controls:TMPWindow}">
        <Grid>
            <AdornerDecorator>
                <Grid Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <!--  icon  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  title  -->
                        <ColumnDefinition Width="*" />
                        <!--  min,max,close buttons  -->
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Rectangle
                        x:Name="PART_WindowTitleBackground"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Fill="{TemplateBinding WindowTitleBrush}"
                        Focusable="False"
                        StrokeThickness="0"
                        Visibility="{TemplateBinding ShowTitleBar,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  icon  -->
                    <ContentControl
                        x:Name="PART_Icon"
                        Grid.Row="0"
                        Grid.Column="0"
                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        MinWidth="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Panel.ZIndex="1"
                        Content="{TemplateBinding Icon}"
                        ContentTemplate="{TemplateBinding IconTemplate}"
                        Focusable="False"
                        Visibility="{TemplateBinding ShowIconOnTitleBar,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  the title bar  -->
                    <ContentControl
                        x:Name="PART_TitleBar"
                        Grid.Row="0"
                        Grid.Column="1"
                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Content="{TemplateBinding Title}"
                        ContentTemplate="{TemplateBinding TitleTemplate}"
                        Focusable="False"
                        Visibility="{TemplateBinding ShowTitleBar,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ContentControl.Foreground>
                            <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                <Binding
                                    ElementName="PART_WindowTitleBackground"
                                    Mode="OneWay"
                                    Path="Fill" />
                                <Binding
                                    Mode="OneWay"
                                    Path="TitleForeground"
                                    RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </ContentControl.Foreground>
                    </ContentControl>

                    <!--  the window button commands  -->
                    <Controls:WindowButtonCommands
                        x:Name="PART_WindowButtonCommands"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="2"
                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        VerticalAlignment="Top"
                        Panel.ZIndex="1"
                        Focusable="False" />

                    <Grid
                        x:Name="PART_OverlayBox"
                        Grid.Row="1"
                        Grid.RowSpan="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Panel.ZIndex="3"
                        Background="{DynamicResource BlackColorBrush}"
                        FocusVisualStyle="{x:Null}"
                        Focusable="False"
                        Opacity="0"
                        Visibility="Hidden" />

                    <Grid
                        x:Name="PART_TMPDialogContainer"
                        Grid.Row="1"
                        Grid.RowSpan="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Panel.ZIndex="4"
                        FocusVisualStyle="{x:Null}" />

                    <Controls:TMPContentControl
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        FocusVisualStyle="{x:Null}"
                        IsTabStop="False"
                        OnlyLoadTransition="True">
                        <ContentPresenter />
                    </Controls:TMPContentControl>

                    <!--  the main window content  -->
                    <!--  Used to create that overlay effect. Can be used for anything.  -->
                </Grid>
            </AdornerDecorator>

            <Border
                x:Name="PART_Border"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" />
            <ResizeGrip
                x:Name="WindowResizeGrip"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                IsTabStop="false"
                Visibility="Collapsed" />
        </Grid>

        <ControlTemplate.Resources>
            <Storyboard
                x:Key="OverlayFastSemiFadeIn"
                AccelerationRatio=".97"
                BeginTime="0:0:0"
                SpeedRatio="2.7"
                Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To=".7" />
            </Storyboard>
            <Storyboard
                x:Key="OverlayFastSemiFadeOut"
                AccelerationRatio=".97"
                BeginTime="0:0:0"
                SpeedRatio="2.7"
                Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To="0.0" />
            </Storyboard>
        </ControlTemplate.Resources>
        <ControlTemplate.Triggers>
            <!--  handle active/inactive state  -->
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}}" />
            </Trigger>
            <!--  no icon and no icon content template -> collapse the icon content control  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="IconTemplate" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Icon" Property="MinWidth" Value="0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Controls:TMPWindow}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="WindowTitleBrush" Value="{DynamicResource WindowTitleColorBrush}" />
        <Setter Property="TextElement.FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="WindowMinButtonStyle" Value="{DynamicResource TMPWindowButtonStyle}" />
        <Setter Property="WindowMaxButtonStyle" Value="{DynamicResource TMPWindowButtonStyle}" />
        <Setter Property="WindowCloseButtonStyle" Value="{DynamicResource TMPWindowCloseButtonStyle}" />
        <Setter Property="GlowBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="NonActiveGlowBrush" Value="{DynamicResource GrayBrush2}" />
        <Setter Property="Behaviors:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Behaviors:StylizedBehaviorCollection>
                    <Behaviors:BorderlessWindowBehavior />
                    <Behaviors:GlowWindowBehavior />
                </Behaviors:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="TitleForeground" Value="{DynamicResource IdealForegroundColorBrush}" />
        <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Margin="8,-1,0,0"
                        VerticalAlignment="Center"
                        FontFamily="{DynamicResource HeaderFontFamily}"
                        FontSize="{DynamicResource WindowTitleFontSize}"
                        Text="{TemplateBinding Content}"
                        TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=TitleCaps, Mode=OneWay}" Value="True">
                <Setter Property="TitleTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock
                                Margin="8,-1,0,0"
                                VerticalAlignment="Center"
                                FontFamily="{DynamicResource HeaderFontFamily}"
                                FontSize="{DynamicResource WindowTitleFontSize}"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                TextTrimming="CharacterEllipsis" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Icon, Mode=OneWay, Converter={x:Static Converters:IsNullConverter.Instance}}" Value="False">
                <Setter Property="IconTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Controls:MultiFrameImage
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}}"
                                RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}}"
                                Source="{TemplateBinding Content}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  *******  -->
    <Style TargetType="{x:Type Controls:WindowButtonCommands}">
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:WindowButtonCommands">
                    <StackPanel Orientation="Horizontal">

                        <Button
                            x:Name="PART_Min"
                            Focusable="False"
                            IsEnabled="{Binding IsMinButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}}"
                            Style="{Binding WindowMinButtonStyle, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}}"
                            ToolTip="{Binding Minimize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:WindowButtonCommands}}}">
                            <Button.Visibility>
                                <MultiBinding Converter="{x:Static Converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MIN">
                                    <Binding
                                        Mode="OneWay"
                                        Path="ShowMinButton"
                                        RelativeSource="{RelativeSource FindAncestor,
                                                                        AncestorType={x:Type Controls:TMPWindow}}" />
                                    <Binding
                                        Mode="OneWay"
                                        Path="UseNoneWindowStyle"
                                        RelativeSource="{RelativeSource FindAncestor,
                                                                        AncestorType={x:Type Controls:TMPWindow}}" />
                                    <Binding
                                        Mode="OneWay"
                                        Path="ResizeMode"
                                        RelativeSource="{RelativeSource FindAncestor,
                                                                        AncestorType={x:Type Controls:TMPWindow}}" />
                                </MultiBinding>
                            </Button.Visibility>
                            <Path
                                Data="F1M0,6L0,9 9,9 9,6 0,6z"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                SnapsToDevicePixels="True" />
                        </Button>

                        <Button
                            x:Name="PART_Max"
                            Focusable="False"
                            IsEnabled="{Binding IsMaxRestoreButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}}"
                            Style="{Binding WindowMaxButtonStyle, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}}"
                            ToolTip="{Binding Maximize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:WindowButtonCommands}}}">
                            <Button.Visibility>
                                <MultiBinding Converter="{x:Static Converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MAX">
                                    <Binding
                                        Mode="OneWay"
                                        Path="ShowMaxRestoreButton"
                                        RelativeSource="{RelativeSource FindAncestor,
                                                                        AncestorType={x:Type Controls:TMPWindow}}" />
                                    <Binding
                                        Mode="OneWay"
                                        Path="UseNoneWindowStyle"
                                        RelativeSource="{RelativeSource FindAncestor,
                                                                        AncestorType={x:Type Controls:TMPWindow}}" />
                                    <Binding
                                        Mode="OneWay"
                                        Path="ResizeMode"
                                        RelativeSource="{RelativeSource FindAncestor,
                                                                        AncestorType={x:Type Controls:TMPWindow}}" />
                                </MultiBinding>
                            </Button.Visibility>
                            <!--  normal state  -->
                            <Path
                                x:Name="PART_MaxPath"
                                Width="10"
                                Height="10"
                                Data="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                SnapsToDevicePixels="True" />
                        </Button>

                        <Button
                            x:Name="PART_Close"
                            Focusable="False"
                            IsEnabled="{Binding IsCloseButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}}"
                            RenderOptions.EdgeMode="Aliased"
                            Style="{Binding WindowCloseButtonStyle, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}}"
                            ToolTip="{Binding Close, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:WindowButtonCommands}}}">
                            <Button.Visibility>
                                <MultiBinding Converter="{x:Static Converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="CLOSE">
                                    <Binding
                                        Mode="OneWay"
                                        Path="ShowCloseButton"
                                        RelativeSource="{RelativeSource FindAncestor,
                                                                        AncestorType={x:Type Controls:TMPWindow}}" />
                                    <Binding
                                        Mode="OneWay"
                                        Path="UseNoneWindowStyle"
                                        RelativeSource="{RelativeSource FindAncestor,
                                                                        AncestorType={x:Type Controls:TMPWindow}}" />
                                </MultiBinding>
                            </Button.Visibility>
                            <Path
                                Data="M 10.009,1.704 L 8.331,0.026 5.03,3.327 1.703,0 0,1.704 3.326,5.031 0.025,8.332 1.703,10.009 5.004,6.708 8.305,10.009 10.009,8.305 6.708,5.005"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                SnapsToDevicePixels="True" />
                        </Button>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}, Path=WindowState}" Value="Maximized">
                            <Setter TargetName="PART_MaxPath" Property="Data" Value="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />
                            <Setter TargetName="PART_Max" Property="ToolTip" Value="{Binding Restore, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:WindowButtonCommands}}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ParentWindow.ShowTitleBar, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ParentWindow.ShowTitleBar, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Background" Value="Transparent" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
