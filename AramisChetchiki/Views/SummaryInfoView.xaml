<UserControl
    x:Class="TMP.WORK.AramisChetchiki.Views.SummaryInfoView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:TMP.UI.Controls.WPF;assembly=ui.controls.wpf"
    xmlns:converters="clr-namespace:TMP.UI.Controls.WPF.Converters;assembly=ui.controls.wpf"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:TMP.WORK.AramisChetchiki"
    xmlns:local_extensions="clr-namespace:TMP.WORK.AramisChetchiki.Extensions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:TMP.WORK.AramisChetchiki.Model"
    xmlns:vm="clr-namespace:TMP.WORK.AramisChetchiki.ViewModel"
    x:Name="root"
    d:DataContext="{d:DesignInstance {x:Type vm:SummaryInfoViewViewModel},
                                     IsDesignTimeCreatable=True}"
    SnapsToDevicePixels="True"
    UseLayoutRounding="True"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ContextMenu x:Key="itemsContextMenu" FontSize="{local_extensions:SettingBinding FontSize, 12.0}">
            <MenuItem
                Header="Отображать только первые 10 групп&#x0a;в порядке убывания количества элементов"
                IsCheckable="True"
                IsChecked="{Binding ShowOnly10Groups, Mode=TwoWay}" />
        </ContextMenu>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <!--  1  -->
        <Border
            Background="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"
            BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
            BorderThickness="1"
            CornerRadius="3"
            Visibility="{Binding IsDataLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
            <WrapPanel Orientation="Horizontal" TextBlock.Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}">
                <ToggleButton
                    Margin="2"
                    Padding="0"
                    IsChecked="{Binding ShowOnly10Groups, Mode=TwoWay}"
                    ToolTip="Отображать только первые 10 групп&#x0a;в порядке убывания количества элементов">
                    <Grid>
                        <TextBlock
                            x:Name="txt"
                            Padding="2.5"
                            VerticalAlignment="Center"
                            FontSize="{StaticResource HeaderFontSize}"
                            Text="10"
                            TextAlignment="Center" />
                        <Ellipse
                            Width="{Binding Path=ActualWidth, ElementName=txt}"
                            Height="{Binding Path=ActualWidth, ElementName=txt}"
                            Stretch="Fill"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeThickness="1" />
                    </Grid>
                </ToggleButton>
                <Separator Margin="5,0" />
                <StackPanel Margin="5,4" Orientation="Horizontal">
                    <TextBlock Text="Поиск: " />
                    <TextBox MinWidth="200" Text="{Binding TextToFind, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
                <Separator Margin="5,0" />
                <Button
                    Margin="2"
                    Padding="5,0"
                    Command="{Binding CommandPrint}"
                    Content="{Binding CommandPrint.Header}" />
                <Button
                    Margin="2"
                    Padding="5,0"
                    Command="{Binding CommandExport}"
                    Content="{Binding CommandExport.Header}" />
            </WrapPanel>
        </Border>
        <!--  2  -->
        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled">
            <ItemsControl
                x:Name="itemsControl"
                ContextMenu="{StaticResource itemsContextMenu}"
                ItemTemplate="{StaticResource ViewAsListInfoItemTemplate}"
                ItemsSource="{Binding View}">
                <ItemsControl.Style>
                    <Style BasedOn="{StaticResource {x:Type ItemsControl}}" TargetType="{x:Type ItemsControl}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBusy}" Value="True">
                                <Setter Property="Template" Value="{StaticResource PrepareDataControlTemplate}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsAnalizingData}" Value="True">
                                <Setter Property="Template" Value="{StaticResource PrepareDataControlTemplate}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Data}" Value="{x:Null}">
                                <Setter Property="Template" Value="{StaticResource NoDataControlTemplate}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</UserControl>
