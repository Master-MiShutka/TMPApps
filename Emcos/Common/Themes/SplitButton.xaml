<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:TMP.Wpf.Common">

    <ControlTemplate x:Key="SplitButtonHorizontal" TargetType="{x:Type local:SplitButton}">
        <Border
            Name="PART_Border"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid
                x:Name="PART_Container"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button
                    x:Name="PART_Button"
                    Grid.Column="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Style="{StaticResource {x:Type Button}}"
                    Command="{TemplateBinding Command}"
                    CommandParameter="{TemplateBinding CommandParameter}"
                    CommandTarget="{TemplateBinding CommandTarget}">
                    <StackPanel
                        HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                        VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                        Orientation="Horizontal">
                        <ContentPresenter Content="{TemplateBinding Icon}" RecognizesAccessKey="True" />
                        <ContentControl
                            x:Name="PART_ButtonContent"
                            MinWidth="20"
                            Margin="2"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            VerticalContentAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            Content="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ContentStringFormat="{TemplateBinding ItemStringFormat}"
                            ContentTemplate="{TemplateBinding ItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                    </StackPanel>
                </Button>
                <Button
                    x:Name="PART_Expander"
                    Grid.Column="1"
                    Width="25"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Style="{StaticResource {x:Type Button}}">
                    <Button.Content>
                        <Rectangle
                            Name="PART_Rectangle"
                            Width="10"
                            Height="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="{DynamicResource BlackColorBrush}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill">
                                    <VisualBrush.Visual>
                                        <Canvas
                                            Width="18"
                                            Height="18"
                                            Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0"
                                            UseLayoutRounding="False">
                                            <Path
                                                Canvas.Left="14.9063"
                                                Canvas.Top="15.75"
                                                Width="18"
                                                Height="16"
                                                Fill="{DynamicResource BlackColorBrush}"
                                                Data="F1 M 23.9063,25L 25.9063,23L 32.9063,15.75L 32.9063,22.25L 23.9062,31.75L 14.9063,22.25L 14.9063,15.75L 21.9063,23L 23.9063,25 Z "
                                                Stretch="Fill" />
                                        </Canvas>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button.Content>
                </Button>
                <Popup
                    Name="PART_Popup"
                    MinWidth="{TemplateBinding ActualWidth}"
                    IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    PlacementTarget="{Binding ElementName=PART_Button}"
                    PopupAnimation="Fade"
                    StaysOpen="True">
                    <ListBox
                        x:Name="PART_ListBox"
                        Style="{DynamicResource VirtualisedMetroListBox}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                        ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                        ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                        ItemStringFormat="{TemplateBinding ItemStringFormat}"
                        ItemTemplate="{TemplateBinding ItemTemplate}"
                        ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        ItemsSource="{TemplateBinding ItemsSource}"
                        SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        SelectionMode="Single" />
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Button" Property="IsFocused" Value="True">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger SourceName="PART_Expander" Property="IsFocused" Value="True">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_Rectangle" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SplitButtonVertical" TargetType="{x:Type local:SplitButton}">
        <Border
            Name="PART_Border"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid
                x:Name="PART_Container"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Button
                    x:Name="PART_Button"
                    Grid.Row="0"
                    Width="{TemplateBinding Width}"
                    MinHeight="20"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Style="{StaticResource {x:Type Button}}"
                    Command="{TemplateBinding Command}"
                    CommandParameter="{TemplateBinding CommandParameter}"
                    CommandTarget="{TemplateBinding CommandTarget}">
                    <Button.Content>
                        <StackPanel
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            Orientation="Vertical">
                            <ContentPresenter Content="{TemplateBinding Icon}" RecognizesAccessKey="True" />
                            <ContentControl
                                x:Name="PART_ButtonContent"
                                Margin="2"
                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                VerticalAlignment="Stretch"
                                VerticalContentAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                Content="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentStringFormat="{TemplateBinding ItemStringFormat}"
                                ContentTemplate="{TemplateBinding ItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button
                    x:Name="PART_Expander"
                    Grid.Row="1"
                    Height="20"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Style="{StaticResource {x:Type Button}}">
                    <Button.Content>
                        <Rectangle
                            Name="PART_Rectangle"
                            Width="10"
                            Height="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="{DynamicResource BlackColorBrush}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill">
                                    <VisualBrush.Visual>
                                        <Canvas
                                            Width="18"
                                            Height="18"
                                            Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0"
                                            UseLayoutRounding="False">
                                            <Path
                                                Canvas.Left="14.9063"
                                                Canvas.Top="15.75"
                                                Width="18"
                                                Height="16"
                                                Fill="{DynamicResource BlackColorBrush}"
                                                Data="F1 M 23.9063,25L 25.9063,23L 32.9063,15.75L 32.9063,22.25L 23.9062,31.75L 14.9063,22.25L 14.9063,15.75L 21.9063,23L 23.9063,25 Z "
                                                Stretch="Fill" />
                                        </Canvas>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button.Content>
                </Button>
                <Popup
                    Name="PART_Popup"
                    MinWidth="{TemplateBinding ActualWidth}"
                    IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    PlacementTarget="{Binding ElementName=PART_Expander}"
                    PopupAnimation="Fade"
                    StaysOpen="True">
                    <ListBox
                        x:Name="PART_ListBox"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                        ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                        ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                        ItemStringFormat="{TemplateBinding ItemStringFormat}"
                        ItemTemplate="{TemplateBinding ItemTemplate}"
                        ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        ItemsSource="{TemplateBinding ItemsSource}"
                        SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        SelectionMode="Single" />
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Button" Property="IsFocused" Value="True">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger SourceName="PART_Expander" Property="IsFocused" Value="True">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_Rectangle" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:SplitButton}">
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Template" Value="{StaticResource SplitButtonHorizontal}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource SplitButtonVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>