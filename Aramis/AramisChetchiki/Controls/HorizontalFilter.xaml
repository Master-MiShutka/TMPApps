<local:BaseFilterControl
    x:Class="TMP.WORK.AramisChetchiki.Controls.HorizontalFilter"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:TMP.UI.Controls.WPF.Converters;assembly=ui.controls.wpf"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:itemsfilter="clr-namespace:ItemsFilter;assembly=ItemsFilter"
    xmlns:itemsfilter_view="clr-namespace:ItemsFilter.View;assembly=ItemsFilter"
    xmlns:local="clr-namespace:TMP.WORK.AramisChetchiki.Controls"
    xmlns:local_controls="clr-namespace:TMP.WORK.AramisChetchiki.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    Margin="5,0,0,2"
    d:DesignHeight="30"
    d:DesignWidth="100"
    mc:Ignorable="d">
    <local:BaseFilterControl.Resources>

        <converters:BooleanToStringConverter
            x:Key="BooleanToStringConverter"
            FalseValue="нет"
            TrueValue="да" />

        <Style TargetType="{x:Type itemsfilter_view:MultiValueFilterView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type itemsfilter_view:MultiValueFilterView}">
                        <ListBox
                            x:Name="PART_Items"
                            Background="Transparent"
                            BorderThickness="0"
                            Focusable="False"
                            ItemsSource="{Binding ViewModel.AvailableValues, RelativeSource={RelativeSource TemplatedParent}}"
                            SelectedValuePath="{x:Null}"
                            SelectionMode="Multiple">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Margin" Value="5,0" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <CheckBox
                                                    x:Name="checkBox"
                                                    VerticalContentAlignment="Center"
                                                    IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ContentPresenter
                                                        Margin="{TemplateBinding Padding}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="Center"
                                                        ContentStringFormat="G"
                                                        RecognizesAccessKey="True"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                        <ContentPresenter.Resources>
                                                            <DataTemplate DataType="{x:Type system:Boolean}">
                                                                <TextBlock Text="{Binding Converter={StaticResource BooleanToStringConverter}}" />
                                                            </DataTemplate>
                                                        </ContentPresenter.Resources>
                                                    </ContentPresenter>
                                                </CheckBox>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="checkBox" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                        <Setter TargetName="checkBox" Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="true" />
                                                            <Condition Property="Selector.IsSelectionActive" Value="false" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="checkBox" Property="Background" Value="{DynamicResource GrayBrush6}" />
                                                        <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}" />
                                                    </MultiTrigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Foreground" Value="{DynamicResource ControlsDisabledBrush}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </local:BaseFilterControl.Resources>
    <HeaderedContentControl
        x:Name="root" Style="{StaticResource FilterHeaderedContentControlStyle}"
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
        BorderThickness="1"
        Header="{Binding Path=FilterPropertyName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:HorizontalFilter}}, Converter={StaticResource UnderLineTextToSpaceConverter}}">
        <itemsfilter_view:MultiValueFilterView 
            itemsfilter:FilterListExtensions.IsActive="True"
            ViewModel="{Binding Path=Filter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:HorizontalFilter}}}" />
    </HeaderedContentControl>
</local:BaseFilterControl>
