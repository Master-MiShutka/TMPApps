<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:filterdatagrid="clr-namespace:DataGridWpf;assembly=DataGridWpf"
    xmlns:local_extensions="clr-namespace:TMP.WORK.AramisChetchiki.Extensions"
    xmlns:model="clr-namespace:TMP.WORK.AramisChetchiki.Model">

    <Style
        x:Key="HierarchicalMenu"
        BasedOn="{StaticResource baseMenuItemStyle}"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Command" Value="{Binding Command}" />
        <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
        <Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
        <Setter Property="Tag" Value="{Binding Tag}" />
        <Setter Property="Header" Value="{Binding Name, Converter={StaticResource TextSpaceConverter}}" />
        <Setter Property="ItemsSource" Value="{Binding Items}" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource HierarchicalMenu}" />
    </Style>

    <ContextMenu x:Key="dataGridContextMenuKey" Style="{StaticResource baseContextMenuStyle}">
        <MenuItem
            Header="Сортировка"
            ItemsSource="{Binding SortFields}"
            Style="{StaticResource HierarchicalMenu}" />
        <MenuItem
            Header="Группировка"
            ItemsSource="{Binding GroupFields}"
            Style="{StaticResource HierarchicalMenu}" />
        <Separator />
        <MenuItem Command="ApplicationCommands.Copy" Header="Копировать" />
        <Separator />
        <MenuItem Header="Вид" ItemsSource="{local_extensions:EnumToItemsSource {x:Type model:TableViewKinds}}">
            <MenuItem.ItemContainerStyle>
                <Style BasedOn="{StaticResource baseMenuItemStyle}" TargetType="{x:Type MenuItem}">
                    <Setter Property="Header" Value="{Binding Description}" />
                    <Setter Property="Command" Value="{Binding Path=DataContext.CommandChangeViewKind, RelativeSource={RelativeSource AncestorType={x:Type filterdatagrid:FilterDataGrid}}}" />
                    <Setter Property="CommandParameter" Value="{Binding Value}" />
                    <Setter Property="IsCheckable" Value="True" />
                    <Setter Property="local_extensions:MenuItemExtensions.GroupName" Value="ViewKind" />
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
    </ContextMenu>

    <Style
        x:Key="DefaultRowStyle"
        BasedOn="{StaticResource {x:Type DataGridRow}}"
        TargetType="{x:Type DataGridRow}">
        <Setter Property="MaxHeight" Value="100" />
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="{Binding AlternatingRowBackground, RelativeSource={RelativeSource AncestorType={x:Type filterdatagrid:FilterDataGrid}}}" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </Trigger>

            <DataTrigger Binding="{Binding Отключён, FallbackValue=False}" Value="True">
                <Setter Property="Background" Value="DarkGray" />
                <Setter Property="Foreground" Value="Gray" />
            </DataTrigger>

        </Style.Triggers>
    </Style>


    <Style
        x:Key="MeterRowStyle"
        BasedOn="{StaticResource {x:Type DataGridRow}}"
        TargetType="{x:Type DataGridRow}">
        <Setter Property="MaxHeight" Value="100" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip>
                    <ToolTip.ContentTemplate>
                        <DataTemplate>
                            <StackPanel MinWidth="100" DataContext="{Binding Path=PlacementTarget.DataContext, IsAsync=True, RelativeSource={RelativeSource AncestorType=ToolTip}}">
                                <StackPanel x:Name="txtRemoved">
                                    <TextBlock>
                                        <Run Text="Удалён:" />
                                        <Decorator Width="4" />
                                        <Run Text="{Binding Path=ДатаУдаления, StringFormat={}{0:dd.MM.yyy} г., Mode=OneWay}" />
                                    </TextBlock>
                                    <Separator />
                                </StackPanel>
                                <StackPanel x:Name="txtDisconnected">
                                    <TextBlock>
                                        <Run Text="Отключён:" />
                                        <Decorator Width="4" />
                                        <Run Text="{Binding Path=ДатаОтключения, StringFormat={}{0:dd.MM.yyy} г., Mode=OneWay}" />
                                    </TextBlock>
                                    <Separator />
                                </StackPanel>
                                <TextBlock Text="{Binding Path=Задолженность, StringFormat={}Задолженность {0} руб., Mode=OneWay}" />
                                <TextBlock Text="{Binding Path=ДолгРуб, StringFormat={}Долг {0} руб., Mode=OneWay}" />
                                <TextBlock Text="{Binding Path=Долг, StringFormat={}Долг {0} кВт∙ч, Mode=OneWay}" />
                                <TextBlock Text="{Binding Path=ДатаОплаты, StringFormat={}ДатаОплаты {0:dd.MM.yyy} г., Mode=OneWay}" />
                                <Separator />
                                <TextBlock x:Name="txtПоверка">
                                    <Run Text="Поверка: " />
                                    <Run x:Name="runПоверка" Text="?" />
                                </TextBlock>
                                <Separator />
                                <TextBlock Text="{Binding Path=СреднеМесячныйРасходПоОплате, StringFormat={}Среднемесячный расход по оплате: {0} кВт∙ч, Mode=OneWay}" />
                                <TextBlock Text="{Binding Path=СреднеМесячныйРасходПоКонтрольнымПоказаниям, StringFormat={}Среднемесячный расход по контр. показаниям: {0} кВт∙ч, Mode=OneWay}" />
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=PlacementTarget.DataContext.Поверен, RelativeSource={RelativeSource AncestorType=ToolTip}}" Value="False">
                                    <Setter TargetName="runПоверка" Property="Text" Value="не поверен" />
                                    <Setter TargetName="txtПоверка" Property="Foreground" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=PlacementTarget.DataContext.Поверен, RelativeSource={RelativeSource AncestorType=ToolTip}}" Value="True">
                                    <Setter TargetName="runПоверка" Property="Text" Value="да" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=PlacementTarget.DataContext.Удалён, RelativeSource={RelativeSource AncestorType=ToolTip}}" Value="False">
                                    <Setter TargetName="txtRemoved" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=PlacementTarget.DataContext.Отключён, RelativeSource={RelativeSource AncestorType=ToolTip}}" Value="False">
                                    <Setter TargetName="txtDisconnected" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>

                    </ToolTip.ContentTemplate>
                </ToolTip>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="{Binding AlternatingRowBackground, RelativeSource={RelativeSource AncestorType={x:Type filterdatagrid:FilterDataGrid}}}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </Trigger>

            <DataTrigger Binding="{Binding Удалён, FallbackValue=False}" Value="True">
                <Setter Property="Background" Value="Crimson" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Отключён, FallbackValue=False}" Value="True">
                <Setter Property="Background" Value="DarkGray" />
                <Setter Property="Foreground" Value="Gray" />
            </DataTrigger>

            <!-- DataTrigger Binding="{Binding Поверен, FallbackValue=True}" Value="False">
                    <Setter Property="Background" Value="MistyRose" />
                </DataTrigger-->

            <DataTrigger Binding="{Binding ЕстьДолг}" Value="True">
                <Setter Property="Background" Value="Turquoise" />
            </DataTrigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>