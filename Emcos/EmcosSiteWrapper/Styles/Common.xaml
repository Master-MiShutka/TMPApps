<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:TMP.Wpf.Common.Controls;assembly=TMP.Wpf.Common" xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:Double x:Key="iconSize">32</system:Double>

    <system:Double x:Key="numbersColumnMinWidth">120</system:Double>

    <system:Double x:Key="CellFontSize">14</system:Double>

    <system:String x:Key="DoubleStringFormat">{0:N2}</system:String>
    <system:String x:Key="NumberStringFormat">{0:N0}</system:String>

    <Style x:Key="DialogWindow" TargetType="{x:Type Window}">
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    </Style>

    <!--  Images  -->
    <BitmapImage x:Key="Departament" UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/area.png" />
    <BitmapImage x:Key="Substation" UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/substation.png" />
    <BitmapImage x:Key="Voltage" UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/section.png" />
    <BitmapImage x:Key="Section" UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/section.png" />
    <BitmapImage x:Key="PowerTransformer" UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/UnitTransformer.png" />
    <BitmapImage x:Key="UnitTransformer" UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/UnitTransformer.png" />
    <BitmapImage x:Key="UnitTransformerBus" UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/UnitTransformerBus.png" />
    <BitmapImage x:Key="Fider" UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/element.png" />
    <BitmapImage x:Key="Group" UriSource="/EmcosSiteWrapper;component/ImagesAndIcons/section.png" />



    <Style x:Key="ExpandCollapsePlusMinusToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="17" Height="15"
                          SnapsToDevicePixels="True">
                        <!--  Квадрат 13x13 пикселей  -->
                        <Rectangle x:Name="rect"
                                   Width="13" Height="13"
                                   Stroke="{DynamicResource GrayBrush2}"
                                   SnapsToDevicePixels="true">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,2">
                                    <GradientStop Offset="0" Color="{DynamicResource WhiteColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource Gray8}" />
                                    <GradientStop Offset="1" Color="{DynamicResource Gray6}" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <!--  Вертикальная линия по центру квадрата  -->
                        <Rectangle x:Name="ExpandPath"
                                   Width="1" Height="7"
                                   Stroke="{DynamicResource BlackBrush}"
                                   SnapsToDevicePixels="true" />
                        <!--  Горизонтальная линия по центру квадрата  -->
                        <Rectangle x:Name="MinusPath"
                                   Width="7" Height="1"
                                   Stroke="{DynamicResource BlackBrush}"
                                   SnapsToDevicePixels="true" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalGridSplitterStyle"
           BasedOn="{StaticResource GridSplitterStyle}"
           TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="Height" Value="3" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>
    <Style x:Key="VerticalGridSplitterStyle"
           BasedOn="{StaticResource GridSplitterStyle}"
           TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="3" />
    </Style>


    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource PanelBackgroundHorizontal}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="CornerRadius" Value="4,4,4,4" />
        <Setter Property="Effect" Value="{DynamicResource dropShadow}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--  Separator  -->
    <Style TargetType="{x:Type Separator}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border x:Name="b1"
                                Margin="0,1"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                BorderBrush="{DynamicResource GrayBrush4}"
                                BorderThickness="1" />
                        <Border x:Name="b2"
                                Margin="2,1,0,1"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                BorderBrush="{DynamicResource WhiteBrush}"
                                BorderThickness="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VerticalAlignment" Value="Stretch">
                            <Setter TargetName="b1" Property="Margin" Value="0,1" />
                            <Setter TargetName="b2" Property="Margin" Value="2,1,0,1" />
                            <Setter Property="Margin" Value="5,0" />
                            <Setter TargetName="b1" Property="Width" Value="1" />
                            <Setter TargetName="b2" Property="Width" Value="1" />
                            <Setter Property="Width" Value="10" />
                        </Trigger>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter TargetName="b1" Property="Height" Value="1" />
                            <Setter TargetName="b2" Property="Height" Value="1" />
                            <Setter Property="Height" Value="5" />
                            <Setter TargetName="b1" Property="Margin" Value="1,0" />
                            <Setter TargetName="b2" Property="Margin" Value="1,2,1,0" />
                            <Setter Property="Margin" Value="0,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <!--  HeaderControl  -->
    <Style TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border x:Name="PART_HEADER"
                            Margin="2,0,2,0" Padding="5,0,5,0"
                            Background="{StaticResource Brush_HeaderBackground}"
                            BorderBrush="{DynamicResource WhiteBrush}"
                            BorderThickness="0"
                            CornerRadius="5 5 0 0" SnapsToDevicePixels="True">
                        <TextBlock Margin="0,-2,0,2" Padding="0"
                                   HorizontalAlignment="Center"
                                   Foreground="{DynamicResource WhiteBrush}"
                                   FontSize="{DynamicResource HeaderFontSize}"
                                   FontWeight="Bold"
                                   Text="{TemplateBinding Content}"
                                   TextWrapping="Wrap" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <Grid VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="0"
                                          Margin="0"
                                          ContentSource="Header"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        <Border Grid.Row="1"
                                Margin="2,0,2,0"
                                BorderBrush="{DynamicResource AccentColorBrush4}"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0 0 5 5">
                            <Border Margin="1,0,0,0"
                                    Background="{StaticResource PanelBackgroundVertical}"
                                    CornerRadius="0 0 5 5">
                                <ContentPresenter ContentSource="Content" ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>