<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:TMP.Wpf.CommonControls"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style x:Key="TMPComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource TMPComboBoxItem}" />
        <!--  change SnapsToDevicePixels to true to view a better border and validation error  -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="comboToggleStyle" TargetType="{x:Type ToggleButton}">
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Padding" Value="3,1" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Grid>
                                                <theme:ButtonChrome
                                                    x:Name="Background"
                                                    Background="{TemplateBinding Control.Background}"
                                                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                                                    RenderDefaulted="{TemplateBinding Button.IsDefaulted}"
                                                    RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                                    RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                                                    SnapsToDevicePixels="True" />

                                                <Rectangle
                                                    x:Name="FocusVisualElement"
                                                    Margin="1"
                                                    IsHitTestVisible="false"
                                                    Stroke="{DynamicResource HighlightBrush}"
                                                    StrokeThickness="1"
                                                    Visibility="Collapsed" />

                                                <Grid Margin="1,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Mode=OneWay}" />
                                                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Mode=OneWay}" />
                                                    </Grid.ColumnDefinitions>

                                                    <Button
                                                        x:Name="PART_ClearText"
                                                        Grid.Column="1"
                                                        Content="r"
                                                        FontFamily="Marlett"
                                                        FontSize="16"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        IsTabStop="False"
                                                        Style="{DynamicResource ChromelessButtonStyle}"
                                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Path=(Controls:TextBoxHelper.ClearTextButton), Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                    <Rectangle
                                                        x:Name="BtnArrowBackground"
                                                        Grid.Column="2"
                                                        Fill="Transparent"
                                                        StrokeThickness="0" />
                                                    <Path
                                                        x:Name="BtnArrow"
                                                        Grid.Column="2"
                                                        HorizontalAlignment="Center"
                                                        Data="F1 M4,0 H16 L 10,10 Z "
                                                        Fill="{DynamicResource BlackBrush}"
                                                        IsHitTestVisible="false"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                        Stretch="Uniform" />
                                                </Grid>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                    <Setter TargetName="Background" Property="theme:ButtonChrome.RenderMouseOver" Value="True" />
                                                </Trigger>
                                                <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                                    <Setter TargetName="Background" Property="theme:ButtonChrome.RenderDefaulted" Value="True" />
                                                </Trigger>
                                                <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                    <Setter TargetName="Background" Property="theme:ButtonChrome.RenderPressed" Value="True" />
                                                </Trigger>
                                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                                    <Setter Property="Control.Foreground" Value="{DynamicResource GrayBrush2}" />
                                                </Trigger>
                                                <Trigger SourceName="BtnArrowBackground" Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="BtnArrowBackground" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                                </Trigger>
                                                <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource GrayBrush8}" />
                                                    <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                                                </Trigger>
                                                <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                                                    <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource BlackBrush}" />
                                                    <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Mode=OneWay}" />
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Mode=OneWay}" />
                            </Grid.ColumnDefinitions>

                            <ToggleButton
                                x:Name="PART_DropDownToggle"
                                Grid.ColumnSpan="3"
                                Margin="0"
                                Padding="0"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                KeyboardNavigation.IsTabStop="False"
                                Style="{DynamicResource comboToggleStyle}" />

                            <Border
                                x:Name="EditableTextBoxBorder"
                                Margin="0,0,-2,0"
                                BorderBrush="Transparent"
                                BorderThickness="1,1,0,1"
                                Visibility="Collapsed">
                                <TextBox
                                    x:Name="PART_EditableTextBox"
                                    Margin="0,0,0,-2"
                                    Padding="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Controls:TextBoxHelper.Watermark="{TemplateBinding Controls:TextBoxHelper.Watermark}"
                                    Background="{x:Null}"
                                    BorderThickness="0"
                                    Focusable="True"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsReadOnly="{TemplateBinding IsReadOnly}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <Grid x:Name="ContentSite" Margin="7,0,0,0">
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    IsHitTestVisible="false"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Grid>
                        <Rectangle
                            x:Name="FocusRectangle"
                            Opacity="0"
                            Stroke="{DynamicResource ComboBoxMouseOverInnerBorderBrush}" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{DynamicResource DisabledWhiteBrush}"
                            IsHitTestVisible="false"
                            Opacity="0" />
                        <!--  AllowsTransparency="true" fixes the redraw problem under windows vista/7 with a selected non aero theme  -->
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border
                                    x:Name="PopupBorder"
                                    Height="Auto"
                                    HorizontalAlignment="Stretch"
                                    Background="{DynamicResource WhiteBrush}"
                                    BorderBrush="{DynamicResource ComboBoxPopupBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Effect="{DynamicResource DropShadowBrush}" />
                                <ScrollViewer
                                    x:Name="DropDownScrollViewer"
                                    Margin="2"
                                    Padding="1"
                                    BorderThickness="0">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.45" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="PopupBorder"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ClearTextButton)}" Value="False">
                            <Setter TargetName="EditableTextBoxBorder" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="ContentSite" Property="Grid.ColumnSpan" Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="EditableTextBoxBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                            <!-- #1037 : don't know why we set this to transparent ???
                            <Setter TargetName="PART_DropDownToggle"
                                    Property="Background"
                                    Value="Transparent" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="VirtualisedTMPComboBox"
        BasedOn="{StaticResource TMPComboBox}"
        TargetType="{x:Type ComboBox}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel
                        IsItemsHost="True"
                        IsVirtualizing="True"
                        KeyboardNavigation.DirectionalNavigation="Contained"
                        VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TMPComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Margin="0,0.5" Background="{TemplateBinding Background}">
                        <Rectangle
                            x:Name="SelectedRectangle"
                            Fill="{DynamicResource AccentColorBrush}"
                            IsHitTestVisible="False"
                            Opacity="0" />
                        <Rectangle
                            x:Name="MouseOverRectangle"
                            Fill="{DynamicResource AccentColorBrush3}"
                            IsHitTestVisible="False"
                            Opacity="0" />
                        <ContentControl Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </ContentControl>
                        <Rectangle
                            x:Name="FocusVisualElement"
                            Stroke="{DynamicResource HighlightBrush}"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value=".65" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>