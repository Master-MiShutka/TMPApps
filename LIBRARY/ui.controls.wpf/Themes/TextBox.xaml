<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="clr-namespace:TMP.UI.Controls.WPF.Helpers"
    xmlns:local="clr-namespace:TMP.UI.Controls.WPF"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <ExponentialEase
        x:Key="ExpoEaseIn"
        EasingMode="EaseIn"
        Exponent="2" />
    <ExponentialEase
        x:Key="ExpoEaseOut"
        EasingMode="EaseOut"
        Exponent="2" />
    <ExponentialEase
        x:Key="ExpoEaseInOut"
        EasingMode="EaseInOut"
        Exponent="2" />

    <Storyboard x:Key="WaitingForDataStoryboard" po:Freeze="True">
        <DoubleAnimation
            AutoReverse="True"
            RepeatBehavior="Forever"
            Timeline.DesiredFrameRate="30"
            Storyboard.TargetName="PART_WaitingForDataEffectGrid"
            Storyboard.TargetProperty="(Effect).Opacity"
            From="0"
            To="1"
            Duration="00:00:02" />
    </Storyboard>

    <Storyboard x:Key="HideFloatingMessageStoryboard">
        <DoubleAnimation
            EasingFunction="{StaticResource ExpoEaseInOut}"
            Storyboard.TargetName="PART_FloatingMessageContainer"
            Storyboard.TargetProperty="MaxHeight"
            To="0"
            Duration="0:0:.2" />
        <DoubleAnimation
            Storyboard.TargetName="PART_FloatingMessageContainer"
            Storyboard.TargetProperty="Opacity"
            To="0"
            Duration="0:0:.2" />
        <DoubleAnimation
            EasingFunction="{StaticResource ExpoEaseIn}"
            Storyboard.TargetName="PART_FloatingMessage"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
            To="20"
            Duration="0:0:.2" />
    </Storyboard>

    <Storyboard x:Key="ShowFloatingMessageStoryboard">
        <DoubleAnimation
            EasingFunction="{StaticResource ExpoEaseInOut}"
            Storyboard.TargetName="PART_FloatingMessageContainer"
            Storyboard.TargetProperty="MaxHeight"
            To="15"
            Duration="0:0:.2" />
        <DoubleAnimation
            Storyboard.TargetName="PART_FloatingMessageContainer"
            Storyboard.TargetProperty="Opacity"
            Duration="0:0:.2" />
        <DoubleAnimation
            EasingFunction="{StaticResource ExpoEaseOut}"
            Storyboard.TargetName="PART_FloatingMessage"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
            To="0"
            Duration="0:0:.2" />
    </Storyboard>

    <Style x:Key="FloatingMessageContainerStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="MaxHeight" Value="0" />
        <Setter Property="Visibility" Value="Visible" />
    </Style>

    <Style x:Key="TextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="helpers:ControlsHelper.ButtonWidth" Value="22" />
        <Setter Property="helpers:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
        <Setter Property="helpers:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
        <Setter Property="helpers:TextBoxHelper.IsMonitoring" Value="True" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--  change SnapsToDevicePixels to True to view a better border and validation error  -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Message"
                                Storyboard.TargetProperty="Opacity"
                                To=".2"
                                Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Message"
                                Storyboard.TargetProperty="Opacity"
                                Duration="0:0:0.2" />
                        </Storyboard>

                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Message"
                                Storyboard.TargetProperty="Opacity"
                                From=".2"
                                To="0"
                                Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Message"
                                Storyboard.TargetProperty="Opacity"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <AdornerDecorator>
                            <AdornerDecorator.CacheMode>
                                <BitmapCache EnableClearType="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </AdornerDecorator.CacheMode>
                            <Border
                                x:Name="PART_WaitingForDataEffectGrid"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </AdornerDecorator>
                        <Border
                            x:Name="Base"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid x:Name="PART_InnerGrid" Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>

                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="2"
                                VerticalAlignment="Stretch"
                                Background="{x:Null}"
                                BorderThickness="0"
                                IsTabStop="False" />
                            <TextBlock
                                x:Name="PART_Message"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="6,2,6,2"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                IsHitTestVisible="False"
                                Opacity="0.6"
                                Text="{TemplateBinding helpers:TextBoxHelper.Watermark}"
                                Visibility="Collapsed" />
                            <ContentControl
                                x:Name="PART_FloatingMessageContainer"
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Style="{DynamicResource FloatingMessageContainerStyle}">
                                <TextBlock
                                    x:Name="PART_FloatingMessage"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{DynamicResource AutoCollapsingTextBlock}"
                                    Text="{TemplateBinding helpers:TextBoxHelper.Watermark}" />
                            </ContentControl>
                            <Button
                                x:Name="PART_ClearText"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.ButtonWidth), Mode=OneWay}"
                                helpers:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.ClearTextButton), Mode=OneWay}"
                                Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.ButtonContent), Mode=OneWay}"
                                ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.ButtonContentTemplate), Mode=OneWay}"
                                FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.ButtonFontFamily), Mode=OneWay}"
                                FontSize="16"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False"
                                Style="{DynamicResource ChromelessButtonStyle}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                        <Border
                            x:Name="DisabledVisualElement"
                            Background="{DynamicResource ControlsDisabledBrush}"
                            BorderBrush="{DynamicResource ControlsDisabledBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:TextBoxHelper.ButtonsAlignment)}" Value="Left">
                            <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                            <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(helpers:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(helpers:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:TextBoxHelper.ButtonsAlignment)}" Value="Right" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:TextBoxHelper.ClearTextButton)}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                        </MultiDataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helpers:TextBoxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="helpers:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
                            </Trigger.ExitActions>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsVisible" Value="True" />
                                <Condition Property="helpers:TextBoxHelper.IsWaitingForData" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_WaitingForDataEffectGrid" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Opacity="0"
                                        ShadowDepth="0"
                                        Color="{DynamicResource BlackColor}" />
                                </Setter.Value>
                            </Setter>
                            <!-- MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource WaitingForDataStoryboard}" />
                            </MultiTrigger.EnterActions-->
                        </MultiTrigger>
                        <Trigger Property="helpers:TextBoxHelper.IsWaitingForData" Value="False">
                            <Setter TargetName="PART_WaitingForDataEffectGrid" Property="Effect" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ButtonTextBox"
        BasedOn="{StaticResource TextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="helpers:TextBoxHelper.TextButton" Value="True" />
        <Setter Property="helpers:TextBoxHelper.ButtonTemplate" Value="{DynamicResource ChromelessButtonTemplate}" />
        <!--  change SnapsToDevicePixels to True to view a better border and validation error  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <!-- Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Message"
                                Storyboard.TargetProperty="Opacity"
                                To=".2"
                                Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Message"
                                Storyboard.TargetProperty="Opacity"
                                Duration="0:0:0.2" />
                        </Storyboard-->

                        <!-- Storyboard x:Key="enterHasText">
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Message"
                                Storyboard.TargetProperty="Opacity"
                                From=".2"
                                To="0"
                                Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Message"
                                Storyboard.TargetProperty="Opacity"
                                Duration="0:0:0.2" />
                        </Storyboard-->
                    </ControlTemplate.Resources>
                    <Grid>
                        <AdornerDecorator>
                            <AdornerDecorator.CacheMode>
                                <BitmapCache EnableClearType="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </AdornerDecorator.CacheMode>
                            <Border
                                x:Name="PART_WaitingForDataEffectGrid"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </AdornerDecorator>
                        <Border
                            x:Name="Base"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid x:Name="PART_InnerGrid" Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>

                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="2"
                                VerticalAlignment="Stretch"
                                Background="{x:Null}"
                                BorderThickness="0"
                                IsTabStop="False" />
                            <TextBlock
                                x:Name="PART_Message"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="6,2,6,2"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                IsHitTestVisible="False"
                                Opacity="0.6"
                                Text="{TemplateBinding helpers:TextBoxHelper.Watermark}"
                                Visibility="Collapsed" />
                            <ContentControl
                                x:Name="PART_FloatingMessageContainer"
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Style="{DynamicResource FloatingMessageContainerStyle}">
                                <TextBlock
                                    x:Name="PART_FloatingMessage"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{DynamicResource AutoCollapsingTextBlock}"
                                    Text="{TemplateBinding helpers:TextBoxHelper.Watermark}" />
                            </ContentControl>
                            <Button
                                x:Name="PART_ClearText"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.ButtonWidth), Mode=OneWay}"
                                helpers:TextBoxHelper.IsClearTextButtonBehaviorEnabled="True"
                                Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.ButtonContent), Mode=OneWay}"
                                ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.ButtonContentTemplate), Mode=OneWay}"
                                FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.ButtonFontFamily), Mode=OneWay}"
                                FontSize="16"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False"
                                Style="{DynamicResource ChromelessButtonStyle}"
                                Template="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.ButtonTemplate), Mode=OneWay}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.TextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                        <Border
                            x:Name="DisabledVisualElement"
                            Background="{DynamicResource ControlsDisabledBrush}"
                            BorderBrush="{DynamicResource ControlsDisabledBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:TextBoxHelper.ButtonsAlignment)}" Value="Left">
                            <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                            <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(helpers:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(helpers:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <!-- MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
                            </MultiDataTrigger.ExitActions-->
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:TextBoxHelper.ButtonsAlignment)}" Value="Right" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:TextBoxHelper.TextButton)}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                        </MultiDataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsVisible" Value="True" />
                                <Condition Property="helpers:TextBoxHelper.IsWaitingForData" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_WaitingForDataEffectGrid" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Opacity="0"
                                        ShadowDepth="0"
                                        Color="{DynamicResource BlackColor}" />
                                </Setter.Value>
                            </Setter>
                            <!-- MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource WaitingForDataStoryboard}" />
                            </MultiTrigger.EnterActions-->
                        </MultiTrigger>
                        <Trigger Property="helpers:TextBoxHelper.IsWaitingForData" Value="False">
                            <Setter TargetName="PART_WaitingForDataEffectGrid" Property="Effect" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SearchTextBox"
        BasedOn="{StaticResource ButtonTextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="helpers:TextBoxHelper.ButtonContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <local:Icons
                        x:Name="PART_PackIcon"
                        Width="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=(helpers:ControlsHelper.ButtonWidth), Mode=OneWay}"
                        Height="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=(helpers:ControlsHelper.ButtonWidth), Mode=OneWay}"
                        Padding="3"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Kind="Magnify" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
