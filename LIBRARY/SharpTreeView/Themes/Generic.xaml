<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Default="clr-namespace:ICSharpCode.TreeView">

    <SolidColorBrush x:Key="BorderBrush" Color="#FF7F9DB9" />
    <LinearGradientBrush x:Key="ExpandCollapseToggleBackground" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset=".2" Color="White" />
            <GradientStop Offset="1" Color="#FFC0B7A6" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="BlackBrush" Color="Black" />


    <Default:ExpandCollapseToggleMargin x:Key="ExpandCollapseToggleMargin" />

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Name="rootBorder"
                        Width="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type Default:SharpTreeNodeView}}}"
                        Height="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type Default:SharpTreeNodeView}}}">
                        <Border
                            Name="border"
                            Background="{StaticResource ExpandCollapseToggleBackground}"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="1"
                            SnapsToDevicePixels="True">
                            <Path
                                Name="ExpandPath"
                                Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"
                                Fill="{StaticResource BlackBrush}"
                                Stretch="Fill">
                                <Path.Margin>
                                    <MultiBinding Converter="{StaticResource ExpandCollapseToggleMargin}">
                                        <Binding ElementName="rootBorder" Path="ActualWidth" />
                                        <Binding Path="IsExpanded" />
                                    </MultiBinding>
                                </Path.Margin>
                            </Path>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Data" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
                            <Setter TargetName="border" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Default:InsertMarker}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Default:InsertMarker}">
                    <Grid>
                        <Border
                            Height="2"
                            VerticalAlignment="Center"
                            Background="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        <Path
                            HorizontalAlignment="Left"
                            Data="m 0 0 l 3 3 l -3 3"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        <Path
                            HorizontalAlignment="Right"
                            Data="m 0 0 l -3 3 l 3 3"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Default:EditTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Default:EditTextBox}">
                    <Border
                        Padding="0,1,2,0"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="1">
                        <ScrollViewer Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ListBox}}" TargetType="{x:Type Default:SharpTreeView}">
        <Style.Triggers>
            <Trigger Property="ShowRoot" Value="False">
                <Setter Property="Padding" Value="5,0,0,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static Default:SharpTreeView.DefaultItemContainerStyleKey}" TargetType="{x:Type Default:SharpTreeViewItem}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                    <Condition Property="Default:SharpTreeView.ShowAlternation" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="WhiteSmoke" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static Default:SharpGridView.ItemContainerStyleKey}" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Default:SharpTreeViewItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Default:SharpTreeViewItem}">
                    <Border Background="Transparent">
                        <Border Background="{TemplateBinding Background}">
                            <Default:SharpTreeNodeView
                                Name="nodeView"
                                HorizontalAlignment="Stretch"
                                Foreground="{Binding Foreground}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="nodeView" Property="TextBackground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter TargetName="nodeView" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="nodeView"
                                    Property="TextBackground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter TargetName="nodeView"
                                    Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="nodeView" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Default:SharpTreeNodeView}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Default:SharpTreeNodeView}">
                    <Grid>
                        <Default:LinesRenderer
                            Name="linesRenderer"
                            ClipToBounds="True"
                            Visibility="{Binding ShowLines, RelativeSource={RelativeSource AncestorType={x:Type Default:SharpTreeView}}, Converter={Default:CollapsedWhenFalse}}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <FrameworkElement Name="spacer" Grid.Column="0" />
                            <ToggleButton
                                Name="expander"
                                Grid.Column="1"
                                Margin="0,0,6,0"
                                VerticalAlignment="Center"
                                IsChecked="{Binding IsExpanded}"
                                Style="{StaticResource ExpandCollapseToggleStyle}"
                                Visibility="Hidden" />
                            <CheckBox
                                Name="checkBoxContainer"
                                Grid.Column="2"
                                Width="16"
                                Margin="0,0,3,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                IsChecked="{Binding IsChecked}"
                                Visibility="Collapsed" />
                            <Grid
                                Grid.Column="3"
                                Background="Transparent"
                                ToolTip="{Binding ToolTip}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    Name="icon"
                                    Grid.Column="0"
                                    Width="16"
                                    Height="16"
                                    Margin="0,0,5,1"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}"
                                    Focusable="False">
                                    <ContentPresenter.ContentTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding}" />
                                        </DataTemplate>
                                    </ContentPresenter.ContentTemplate>
                                </ContentPresenter>
                                <Border
                                    Name="textContainer"
                                    Grid.Column="1"
                                    Background="{TemplateBinding TextBackground}">
                                    <ContentPresenter
                                        Name="textContainerPresenter"
                                        Margin="2,0,0,0"
                                        VerticalAlignment="Center"
                                        Content="{Binding}"
                                        ContentTemplate="{Binding ParentTreeView.NodeTextTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Focusable="False" />
                                </Border>
                                <Border
                                    Name="childrenCountContainer"
                                    Grid.Column="2"
                                    Background="{TemplateBinding TextBackground}"
                                    Visibility="Collapsed">
                                    <TextBlock
                                        Margin="0,0,2,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Focusable="False"
                                        FontWeight="Bold"
                                        Text="{Binding ChildrenCount}" />
                                </Border>
                                <Border Name="textEditorContainer" Grid.Column="3" />
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEditing}" Value="True">
                            <Setter TargetName="textContainer" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="childrenCountContainer" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ParentTreeView.ShowNodeChildrenCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                            <Setter TargetName="childrenCountContainer" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ParentTreeView.NodeTextTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Null}">
                            <Setter TargetName="textContainerPresenter" Property="Content" Value="{Binding Text}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ShowIcon}" Value="False">
                            <Setter TargetName="icon" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                            <Setter TargetName="icon" Property="Content" Value="{Binding ExpandedIcon}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ShowExpander}" Value="True">
                            <Setter TargetName="expander" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsCheckable}" Value="True">
                            <Setter TargetName="checkBoxContainer" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsCut}" Value="True">
                            <Setter TargetName="icon" Property="Opacity" Value="0.5" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
