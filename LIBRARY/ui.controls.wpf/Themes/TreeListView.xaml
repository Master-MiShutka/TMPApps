<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:TMP.UI.Controls.WPF.Converters"
    xmlns:local="clr-namespace:TMP.UI.Controls.WPF"
    xmlns:treelistview="clr-namespace:TMP.UI.Controls.WPF.TreeListView">

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
                        Width="17"
                        Height="15"
                        SnapsToDevicePixels="True">
                        <!--  Квадрат 13x13 пикселей  -->
                        <Rectangle
                            x:Name="rect"
                            Width="13"
                            Height="13"
                            SnapsToDevicePixels="true"
                            Stroke="#919191">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,2">
                                    <GradientStop Offset="0" Color="White" />
                                    <GradientStop Offset="0.5" Color="Silver" />
                                    <GradientStop Offset="1" Color="LightGray" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <!--  Вертикальная линия по центру квадрата  -->
                        <Rectangle
                            x:Name="ExpandPath"
                            Width="1"
                            Height="7"
                            SnapsToDevicePixels="true"
                            Stroke="Black" />
                        <!--  Горизонтальная линия по центру квадрата  -->
                        <Rectangle
                            x:Name="MinusPath"
                            Width="7"
                            Height="1"
                            SnapsToDevicePixels="true"
                            Stroke="Black" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <converters:LevelToIndentConverter x:Key="LevelToIndentConverter" />
    <converters:CanExpandConverter x:Key="CanExpandConverter" />

    <Style TargetType="{x:Type treelistview:RowExpander}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type treelistview:RowExpander}">
                    <ToggleButton
                        x:Name="Expander"
                        Margin="{Binding Node.Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type treelistview:TreeListViewItem}}}"
                        ClickMode="Press"
                        IsChecked="{Binding Node.IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type treelistview:TreeListViewItem}}}"
                        Style="{StaticResource ExpandCollapseToggleStyle}"
                        Visibility="{Binding Node.IsExpandable, Converter={StaticResource CanExpandConverter}, RelativeSource={RelativeSource AncestorType={x:Type treelistview:TreeListViewItem}}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type treelistview:TreeListView}">
        <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="true" />

        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="SeparatorStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Width="1"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Stretch"
                        Stroke="{DynamicResource GrayBrush6}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type treelistview:TreeListViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="0,2" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource GrayBrush1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type treelistview:TreeListViewItem}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <local:GridViewRowPresenterWithGridLines
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Columns="{TemplateBinding GridView.ColumnCollection}"
                                SeparatorStyle="{StaticResource SeparatorStyle}">
                                <local:GridViewRowPresenterWithGridLines.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type treelistview:TreeListViewItem}}, Path=Foreground}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type treelistview:TreeListViewItem}}}" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type treelistview:TreeListView}}}" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource GrayNormalBrush}" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type treelistview:TreeListView}}}" Value="False" />
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type treelistview:TreeListViewItem}}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </local:GridViewRowPresenterWithGridLines.Resources>
                            </local:GridViewRowPresenterWithGridLines>
                            <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" />
                            <Rectangle
                                Height="1"
                                VerticalAlignment="Bottom"
                                Stroke="{DynamicResource GrayBrush6}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource HighlightBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource HighlightBrush}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource GrayBrush7}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
