<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:converters="clr-namespace:TMP.UI.Controls.WPF.Converters;assembly=ui.controls.wpf"
    xmlns:itemsfilter="clr-namespace:ItemsFilter;assembly=ItemsFilter"
    xmlns:local="clr-namespace:TMP.WORK.AramisChetchiki"
    xmlns:local_converters="clr-namespace:TMP.WORK.AramisChetchiki.Converters"
    xmlns:model="clr-namespace:TMP.WORK.AramisChetchiki.Model">


    <converters:ExpandCollapseToggleMargin x:Key="ExpandCollapseToggleMargin" />
    <converters:UnderLineTextToSpaceConverter x:Key="TextSpaceConverter" />

    <LinearGradientBrush x:Key="ExpandCollapseToggleBackground" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset=".2" Color="White" />
            <GradientStop Offset="1" Color="#FFC0B7A6" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Name="rootBorder"
                        Width="{Binding FontSize, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                        Height="{Binding FontSize, RelativeSource={RelativeSource AncestorType=ToggleButton}}">
                        <Border
                            Name="border"
                            Background="{StaticResource ExpandCollapseToggleBackground}"
                            BorderBrush="{StaticResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                            BorderThickness="1"
                            CornerRadius="1"
                            SnapsToDevicePixels="True">
                            <Path
                                Name="ExpandPath"
                                Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"
                                Fill="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}"
                                Stretch="Fill">
                                <Path.Margin>
                                    <MultiBinding Converter="{StaticResource ExpandCollapseToggleMargin}">
                                        <Binding ElementName="rootBorder" Path="ActualWidth" />
                                        <Binding Path="IsChecked" RelativeSource="{RelativeSource AncestorType=ToggleButton}" />
                                    </MultiBinding>
                                </Path.Margin>
                            </Path>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Data" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
                            <Setter TargetName="border" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlusMinusExpander" TargetType="{x:Type Expander}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander}}, Path=Header, Mode=OneWay}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}"
                            IsHitTestVisible="false"
                            Opacity="0" />
                        <DockPanel x:Name="ExpanderRoot">
                            <Border
                                x:Name="HeaderSite"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                DockPanel.Dock="Top">
                                <DockPanel>
                                    <ToggleButton
                                        x:Name="ToggleSite"
                                        Margin="2"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        DockPanel.Dock="Left"
                                        FocusVisualStyle="{x:Null}"
                                        IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource ExpandCollapseToggleStyle}" />
                                    <ContentPresenter
                                        Margin="{TemplateBinding Padding}"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                        RecognizesAccessKey="True" />
                                </DockPanel>
                            </Border>
                            <Border
                                x:Name="ExpandSite"
                                Margin="5,0,0,1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,0,1,1"
                                DockPanel.Dock="Bottom"
                                Focusable="false"
                                Opacity="0"
                                Visibility="Collapsed">
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Cursor="{TemplateBinding Cursor}" />
                            </Border>
                        </DockPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0"
                                            Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <HierarchicalDataTemplate
        x:Key="HierarchicalMenuTemplate"
        DataType="{x:Type model:HierarchicalItem}"
        ItemsSource="{Binding Items}">
        <MenuItem
            x:Name="menuitem"
            Command="{Binding Command}"
            CommandParameter="{Binding CommandParameter}"
            Header="{Binding Name, Converter={StaticResource TextSpaceConverter}}"
            IsCheckable="{Binding IsCheckable}"
            Tag="{Binding Tag}" />
        <HierarchicalDataTemplate.Triggers>
            <DataTrigger Binding="{Binding CommandParameter}" Value="{x:Null}">
                <Setter TargetName="menuitem" Property="CommandParameter" Value="{Binding}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding HasTemplate}" Value="true">
                <Setter TargetName="menuitem" Property="Template" Value="{Binding Template}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding HasDataContext}" Value="true">
                <Setter TargetName="menuitem" Property="DataContext" Value="{Binding DataContext}" />
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

</ResourceDictionary>