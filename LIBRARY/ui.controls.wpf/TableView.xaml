<DataGrid
    x:Class="TMP.UI.Controls.WPF.TableView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:TMP.UI.Controls.WPF"
    xmlns:extensions="clr-namespace:TMP.UI.Controls.WPF.Extensions"
    Name="table"
    AlternationCount="2"
    CanUserAddRows="False"
    CanUserDeleteRows="False"
    EnableColumnVirtualization="True"
    EnableRowVirtualization="True"
    IsReadOnly="True"
    VirtualizingStackPanel.IsVirtualizing="True"
    VirtualizingStackPanel.VirtualizationMode="Recycling">
    <DataGrid.Resources>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
        </Style>
    </DataGrid.Resources>
    <DataGrid.RowHeaderStyle>
        <Style BasedOn="{StaticResource {x:Type DataGridRowHeader}}" TargetType="{x:Type DataGridRowHeader}">
            <Style.Triggers>
                <Trigger Property="IsRowSelected" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter Property="FontWeight" Value="SemiBold" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </DataGrid.RowHeaderStyle>
    <DataGrid.ItemContainerStyle>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Padding" Value="2,0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </DataGrid.ItemContainerStyle>
    <DataGrid.CellStyle>
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <!--  The selected row is shown in blue even when focus has been lost  -->
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="CornflowerBlue" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </DataGrid.CellStyle>
    <DataGrid.Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="WhiteSmoke" />
            <Setter Property="VerticalGridLinesBrush" Value="LightSteelBlue" />
            <Setter Property="HorizontalGridLinesBrush" Value="LightSteelBlue" />
            <Style.Triggers>
                <Trigger Property="ItemsSource" Value="{x:Null}">
                    <Setter Property="Template" Value="{StaticResource NoDataControlTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </DataGrid.Style>
    <DataGrid.GroupStyle>
        <GroupStyle>
            <GroupStyle.ContainerStyle>
                <Style TargetType="{x:Type GroupItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                <Expander IsExpanded="False" Style="{StaticResource PlusMinusExpander}">
                                    <Expander.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock
                                                Margin="2,0,5,0"
                                                FontWeight="SemiBold"
                                                Text="{Binding Name, Converter={StaticResource TextSpaceConverter}}" />
                                            <TextBlock Margin="2,0,5,0" Text="{Binding Items.Count, StringFormat=(\{0:N0\})}" />
                                        </StackPanel>
                                    </Expander.Header>
                                    <ItemsPresenter />
                                </Expander>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </GroupStyle.ContainerStyle>
        </GroupStyle>
    </DataGrid.GroupStyle>
</DataGrid>