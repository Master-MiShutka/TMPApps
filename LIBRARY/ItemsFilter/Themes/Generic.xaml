<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:ItemsFilter"
    xmlns:res="clr-namespace:ItemsFilter.Resources"
    xmlns:view="clr-namespace:ItemsFilter.View">

    <FontFamily x:Key="DefaultFont">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
    <System:Double x:Key="NormalFontSize">14</System:Double>
    <System:Double x:Key="SmallFontSize">12</System:Double>

    <view:FilterControlVmToVisibilityConverter x:Key="FilterControlVmToVisibilityConverter" />
    <view:SimplePropertyConverter x:Key="SimplePropertyConverter" />
    <view:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />

    <!--    -->

    <Color x:Key="Gray1">#FF333333</Color>
    <Color x:Key="Gray2">#FF7F7F7F</Color>
    <Color x:Key="Gray3">#FF9D9D9D</Color>
    <Color x:Key="Gray4">#FFA59F93</Color>
    <Color x:Key="Gray5">#FFB9B9B9</Color>
    <Color x:Key="Gray6">#FFCCCCCC</Color>
    <Color x:Key="Gray7">#FFD8D8D9</Color>
    <Color x:Key="Gray8">#FFE0E0E0</Color>
    <Color x:Key="Gray9">#FFF0F0F0</Color>
    <Color x:Key="Gray10">#FFF7F7F7</Color>

    <SolidColorBrush x:Key="GrayBrush1" Color="{DynamicResource Gray1}" />
    <SolidColorBrush x:Key="GrayBrush2" Color="{DynamicResource Gray2}" />
    <SolidColorBrush x:Key="GrayBrush3" Color="{DynamicResource Gray3}" />
    <SolidColorBrush x:Key="GrayBrush4" Color="{DynamicResource Gray4}" />
    <SolidColorBrush x:Key="GrayBrush5" Color="{DynamicResource Gray5}" />
    <SolidColorBrush x:Key="GrayBrush6" Color="{DynamicResource Gray6}" />
    <SolidColorBrush x:Key="GrayBrush7" Color="{DynamicResource Gray7}" />
    <SolidColorBrush x:Key="GrayBrush8" Color="{DynamicResource Gray8}" />
    <SolidColorBrush x:Key="GrayBrush9" Color="{DynamicResource Gray9}" />
    <SolidColorBrush x:Key="GrayBrush10" Color="{DynamicResource Gray10}" />

    <SolidColorBrush x:Key="BlackBrush" Color="{x:Static SystemColors.ControlTextColor}" />
    <SolidColorBrush x:Key="ControlsDisabledBrush" Color="{x:Static SystemColors.ControlLightColor}" />
    <SolidColorBrush x:Key="AccentColorBrush" Color="{x:Static SystemColors.HighlightColor}" />
    <SolidColorBrush
        x:Key="AccentColorBrush4"
        Opacity="0.6"
        Color="{x:Static SystemColors.HighlightTextColor}" />
    <SolidColorBrush x:Key="HighlightBrush" Color="{x:Static SystemColors.HighlightTextColor}" />
    <SolidColorBrush x:Key="ControlBorderBrush" Color="{x:Static SystemColors.ActiveBorderColor}" />
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="{x:Static SystemColors.ControlColor}" />


    <!--    -->

    <DrawingImage x:Key="ClearImage">
        <DrawingImage.Drawing>
            <GeometryDrawing Brush="{DynamicResource BlackBrush}" Geometry="M 1,1 15,15Z M 15,1 1,15Z" />
        </DrawingImage.Drawing>
    </DrawingImage>

    <DrawingBrush x:Key="FilterButtonDisable" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource ControlsDisabledBrush}" Geometry="M 0,0 L 5,6 L 10,0 Z" />
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonEnable" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource BlackBrush}" Geometry="M 0,0 L 5,6 L 10,0 Z" />
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonActive" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource AccentColorBrush}" Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen
                            Brush="{DynamicResource AccentColorBrush}"
                            EndLineCap="Square"
                            LineJoin="Bevel"
                            StartLineCap="Square"
                            Thickness="3" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen
                            Brush="{DynamicResource AccentColorBrush}"
                            EndLineCap="Round"
                            LineJoin="Round"
                            StartLineCap="Round"
                            Thickness="3" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Brush="{DynamicResource AccentColorBrush}" Geometry="F1 M 2,5L 6,9L 10,5">
                    <GeometryDrawing.Pen>
                        <Pen
                            Brush="{DynamicResource AccentColorBrush}"
                            EndLineCap="Round"
                            LineJoin="Round"
                            StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonOpenPressed" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen
                            Brush="{DynamicResource HighlightBrush}"
                            EndLineCap="Square"
                            LineJoin="Bevel"
                            StartLineCap="Square"
                            Thickness="3" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen
                            Brush="{DynamicResource HighlightBrush}"
                            EndLineCap="Round"
                            LineJoin="Round"
                            StartLineCap="Round"
                            Thickness="3" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonOpen" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource AccentColorBrush}" Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen
                            Brush="{DynamicResource AccentColorBrush}"
                            EndLineCap="Square"
                            LineJoin="Bevel"
                            StartLineCap="Square"
                            Thickness="3" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen
                            Brush="{DynamicResource AccentColorBrush}"
                            EndLineCap="Round"
                            LineJoin="Round"
                            StartLineCap="Round"
                            Thickness="3" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="Clear" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource BlackBrush}" Geometry="F0 M 3,3L 13,13">
                    <GeometryDrawing.Pen>
                        <Pen
                            Brush="{DynamicResource BlackBrush}"
                            EndLineCap="Square"
                            LineJoin="Bevel"
                            StartLineCap="Square"
                            Thickness="3" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F0 M 13,3L 3,13">
                    <GeometryDrawing.Pen>
                        <Pen
                            Brush="{DynamicResource BlackBrush}"
                            EndLineCap="Square"
                            LineJoin="Round"
                            StartLineCap="Square"
                            Thickness="3" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <!--  border style  -->
    <Style x:Key="borderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
    </Style>

    <!--  Text block style for displaying the filter type  -->
    <Style x:Key="FilterNameStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Text" Value="{x:Static res:Strings.FilterByValueText}" />
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="FilterClearButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Margin="0"
                        Padding="0"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        BorderThickness="1">
                        <TextBlock
                            VerticalAlignment="Center"
                            FontFamily="Marlett"
                            FontSize="{DynamicResource NormalFontSize}"
                            Foreground="{DynamicResource AccentColorBrush}"
                            Text="r" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Command" Value="{x:Static local:FilterCommand.Clear}" />
        <Setter Property="ToolTip" Value="{x:Static res:Strings.ClearFilterText}" />
    </Style>

    <!--  String Value Filter  -->
    <Style TargetType="{x:Type view:StringFilterView}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:StringFilterView}">
                    <Border
                        Height="Auto"
                        Margin="{TemplateBinding Margin}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Style="{StaticResource borderStyle}">
                        <StackPanel Orientation="Vertical">
                            <DockPanel LastChildFill="False">
                                <TextBlock x:Name="PART_Name" Style="{StaticResource FilterNameStyle}" />
                                <Button DockPanel.Dock="Right" Style="{StaticResource FilterClearButtonStyle}" />
                            </DockPanel>
                            <DockPanel>
                                <TextBlock
                                    Margin="1"
                                    VerticalAlignment="Center"
                                    DockPanel.Dock="Left"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Text="{x:Static res:Strings.ConditionText}" />
                                <ComboBox
                                    x:Name="PART_FilterType"
                                    Margin="2"
                                    Padding="1,1,1,1"
                                    HorizontalAlignment="Stretch"
                                    SelectedValue="{Binding Model.Mode, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock FontSize="{DynamicResource SmallFontSize}" Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </DockPanel>
                            <DockPanel>
                                <TextBlock
                                    Margin="1"
                                    VerticalAlignment="Center"
                                    DockPanel.Dock="Left"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Text="{x:Static res:Strings.Text}" />
                                <TextBox
                                    x:Name="PART_Input"
                                    Margin="1"
                                    Padding="0"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Text="{Binding Model.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextWrapping="NoWrap" />
                            </DockPanel>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SearchPanel" TargetType="{x:Type view:StringFilterView}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:StringFilterView}">
                    <Border
                        Height="Auto"
                        Margin="{TemplateBinding Margin}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Style="{StaticResource borderStyle}">
                        <WrapPanel>
                            <TextBlock
                                Margin="1"
                                VerticalAlignment="Center"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Text="{x:Static res:Strings.ConditionText}" />
                            <ComboBox
                                x:Name="PART_FilterType"
                                Margin="2"
                                Padding="1,1,1,1"
                                SelectedValue="{Binding Model.Mode, RelativeSource={RelativeSource TemplatedParent}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock FontSize="{DynamicResource SmallFontSize}" Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBlock
                                Margin="1"
                                VerticalAlignment="Center"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Text="{x:Static res:Strings.Text}" />
                            <TextBox
                                x:Name="PART_Input"
                                MinWidth="30"
                                Margin="1"
                                Padding="0"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Text="{Binding Model.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                                TextWrapping="NoWrap" />
                            <Button Style="{StaticResource FilterClearButtonStyle}" />
                        </WrapPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Filters View  -->
    <Style TargetType="{x:Type view:RangeFilterView}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:RangeFilterView}">
                    <Border
                        Height="Auto"
                        Margin="{TemplateBinding Margin}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Style="{StaticResource borderStyle}">
                        <StackPanel Orientation="Vertical">
                            <DockPanel LastChildFill="False">
                                <TextBlock x:Name="PART_Name" Style="{StaticResource FilterNameStyle}" />
                                <Button DockPanel.Dock="Right" Style="{StaticResource FilterClearButtonStyle}">
                                    <Image Source="{StaticResource ClearImage}" />
                                </Button>
                            </DockPanel>
                            <DockPanel>
                                <TextBlock
                                    Margin="1,1,1,1"
                                    Padding="1,1,1,1"
                                    DockPanel.Dock="Left"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Text="{x:Static res:Strings.FromText}" />
                                <TextBox
                                    x:Name="PART_From"
                                    Margin="1,1,1,1"
                                    Padding="1,1,1,1"
                                    VerticalAlignment="Center"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Text="{Binding Model.CompareFrom, Converter={StaticResource SimplePropertyConverter}, UpdateSourceTrigger=Explicit, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextWrapping="NoWrap" />
                            </DockPanel>
                            <DockPanel>
                                <TextBlock
                                    Margin="1,1,1,1"
                                    Padding="1,1,1,1"
                                    DockPanel.Dock="Left"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Text="{x:Static res:Strings.ToText}" />
                                <TextBox
                                    x:Name="PART_To"
                                    Margin="1,1,1,1"
                                    Padding="1,1,1,1"
                                    VerticalAlignment="Center"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Text="{Binding Model.CompareTo, Converter={StaticResource SimplePropertyConverter}, UpdateSourceTrigger=Explicit, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextWrapping="NoWrap" />
                            </DockPanel>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Compare Value Filter  -->
    <Style TargetType="{x:Type view:ComparableFilterView}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:ComparableFilterView}">
                    <Border
                        Height="Auto"
                        Margin="{TemplateBinding Margin}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Style="{StaticResource borderStyle}">
                        <StackPanel Orientation="Vertical">
                            <DockPanel LastChildFill="False">
                                <TextBlock
                                    x:Name="PART_Name"
                                    Style="{StaticResource FilterNameStyle}"
                                    Text="{Binding Model.Name, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Button DockPanel.Dock="Right" Style="{StaticResource FilterClearButtonStyle}">
                                    <Image Source="{StaticResource ClearImage}" />
                                </Button>
                            </DockPanel>
                            <TextBox
                                x:Name="PART_Input"
                                Margin="2"
                                Padding="1,1,1,1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Text="{Binding Model.CompareTo, UpdateSourceTrigger=Explicit, Converter={StaticResource SimplePropertyConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                TextWrapping="NoWrap" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MultivalueFilterItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="Margin" Value="0,0,1,0" />
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="Bd"
                        BorderBrush="{x:Null}"
                        BorderThickness="1">
                        <CheckBox VerticalContentAlignment="Center" IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Center"
                                ContentStringFormat="G"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </CheckBox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource GrayBrush6}" />
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ControlsDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="MultiValueFilterViewTemplate" TargetType="{x:Type view:MultiValueFilterView}">
        <Border
            MaxHeight="150"
            Margin="{TemplateBinding Margin}"
            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
            VerticalAlignment="{TemplateBinding VerticalAlignment}"
            Style="{StaticResource borderStyle}">
            <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock
                    x:Name="PART_Name"
                    Grid.Row="0"
                    Grid.Column="0"
                    Style="{StaticResource FilterNameStyle}"
                    Text="{Binding Model.Name, RelativeSource={RelativeSource TemplatedParent}}" />
                <Button Grid.Column="1" Style="{StaticResource FilterClearButtonStyle}">
                    <Image Source="{StaticResource ClearImage}" />
                </Button>
                <ListBox
                    x:Name="PART_Items"
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Width="Auto"
                    Height="Auto"
                    Padding="1"
                    BorderThickness="0"
                    ItemContainerStyle="{StaticResource MultivalueFilterItemStyle}"
                    ItemsSource="{Binding Model.AvailableValues, RelativeSource={RelativeSource TemplatedParent}}"
                    SelectedValuePath="{x:Null}"
                    SelectionMode="Multiple"
                    SnapsToDevicePixels="False"
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling" />
            </Grid>
        </Border>
    </ControlTemplate>

    <!--  Multi Value Filter  -->
    <Style TargetType="{x:Type view:MultiValueFilterView}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="local:ColumnedPanel.ColumnBreakAfter" Value="True" />
        <Setter Property="Template" Value="{StaticResource MultiValueFilterViewTemplate}" />
    </Style>

    <ControlTemplate x:Key="FilterControlTemplate" TargetType="{x:Type local:FilterControl}">
        <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <ItemsPresenter />
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type local:FilterControl}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource FilterControlTemplate}" />
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
        <!-- Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <local:ColumnedPanel IsItemsHost="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter-->
    </Style>


    <Style TargetType="{x:Type local:ColumnFilter}">
        <Setter Property="Template" Value="{StaticResource FilterControlTemplate}" />
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColumnFilter}">
                    <Grid
                        Width="Auto"
                        Height="{TemplateBinding Height}"
                        Visibility="{TemplateBinding Model,
                                                     Converter={StaticResource FilterControlVmToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Button
                            x:Name="button"
                            Padding="2"
                            Style="{StaticResource ColumnHeaderButtonStyle}">
                            <Rectangle
                                x:Name="Icon"
                                Width="10"
                                Height="16"
                                Fill="{StaticResource FilterButtonEnable}" />
                            <!--    -->
                        </Button>
                        <Popup
                            x:Name="PART_FilterView"
                            Grid.Row="1"
                            Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridColumnHeader}}}"
                            MinWidth="250"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            AllowsTransparency="True"
                            IsOpen="{Binding Model.IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="Scroll"
                            StaysOpen="False">
                            <Border
                                Padding="2"
                                Background="{DynamicResource ControlBackgroundBrush}"
                                BorderBrush="{DynamicResource ControlBorderBrush}"
                                BorderThickness="1">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Popup>
                        <!--    -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FilterState">
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Rectangle.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonActive}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Rectangle.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonOpen}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disable" />
                                <VisualState x:Name="Enable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Rectangle.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonEnable}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OpenActive">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Rectangle.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonActive}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>