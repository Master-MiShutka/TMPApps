<customWindow:WindowWithDialogs
    x:Class="TMP.Work.Emcos.View.BalanceView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:SystemWindowsControls="clr-namespace:System.Windows.Controls;assembly=presentationframework"
    xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:commandBehaviors="clr-namespace:Interactivity;assembly=Interactivity"
    xmlns:customWindow="clr-namespace:TMPApplication.CustomWpfWindow;assembly=TMPApplication"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:TMP.Work.Emcos.View"
    xmlns:local_controls="clr-namespace:TMP.Work.Emcos.Controls"
    xmlns:local_converters="clr-namespace:TMP.Work.Emcos.Converters"
    xmlns:local_vm="clr-namespace:TMP.Work.Emcos.ViewModel"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:TMP.Work.Emcos.Model;assembly=EmcosModel"
    xmlns:model_Balance="clr-namespace:TMP.Work.Emcos.Model.Balance;assembly=EmcosModel"
    xmlns:settings="clr-namespace:TMP.Work.Emcos.Settings"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:system_windows="clr-namespace:System.Windows;assembly=PresentationFramework"
    xmlns:treeListView="clr-namespace:TMP.UI.WPF.Controls.TreeListView;assembly=ui.wpf"
    xmlns:ui="clr-namespace:TMP.UI.WPF.Controls;assembly=ui.wpf"
    x:Name="mainwindow"
    Title="{Binding WindowTitle}"
    Width="{settings:SettingBinding MainWindowWidth,
                                    1500.0}"
    Height="{settings:SettingBinding MainWindowHeight,
                                     600.0}"
    d:DataContext="{d:DesignInstance Type={x:Type local_vm:BalanceViewModel}}"
    d:DesignHeight="1000"
    d:DesignWidth="1400"
    Background="{DynamicResource WindowBackground}"
    FocusManager.FocusedElement="{Binding ElementName=tree}"
    FontFamily="Calibri,Verdana,Tahoma"
    FontSize="{DynamicResource SubHeaderFontSize}"
    Icon="/EmcosSiteWrapper;component/ImagesAndIcons/emcos.ico"
    Left="{settings:SettingBinding MainWindowLeft,
                                   100.0}"
    TextOptions.TextFormattingMode="Ideal"
    Top="{settings:SettingBinding MainWindowTop,
                                  0.0}"
    UseLayoutRounding="True"
    WindowStartupLocation="CenterOwner"
    WindowState="{settings:SettingBinding MainWindowState,
                                          {x:Static system_windows:WindowState.Normal}}"
    mc:Ignorable="d">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="None" />
    </Window.TaskbarItemInfo>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVisiblityConv" />
        <!--  видимость в зависимости от типа элемента  -->
        <local_converters:BalanceItemVisiblityConverter x:Key="BalanceItemVisiblityConverter" />

        <Style x:Key="CollapsableRow" TargetType="{x:Type RowDefinition}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SelectedBalanceItem, Converter={StaticResource BalanceItemVisiblityConverter}, ConverterParameter=Bool}" Value="True">
                    <Setter Property="RowDefinition.Height" Value="0" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=SelectedBalanceItem, Converter={StaticResource BalanceItemVisiblityConverter}, ConverterParameter=Bool}" Value="False">
                    <Setter Property="RowDefinition.Height" Value="Auto" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="TabControlStyle"
            BasedOn="{StaticResource {x:Type TabControl}}"
            TargetType="{x:Type TabControl}">
            <Setter Property="ItemContainerStyle" Value="{StaticResource TabItemStyle}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid
                            ClipToBounds="True"
                            KeyboardNavigation.TabNavigation="Local"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>
                            <TabPanel
                                x:Name="HeaderPanel"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="2,2,2,0"
                                HorizontalAlignment="Center"
                                Panel.ZIndex="1"
                                IsItemsHost="True"
                                KeyboardNavigation.TabIndex="1" />
                            <Border
                                x:Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter
                                    x:Name="PART_SelectedContentHost"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding SelectedContent}"
                                    ContentSource="SelectedContent"
                                    ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                    ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--  waiting control  -->
        <local_controls:GettingData Grid.RowSpan="3" Visibility="{Binding IsGettingData, FallbackValue=Hidden, Converter={StaticResource boolToVisiblityConv}}" />
        <!--  0  -->
        <Border
            Grid.Row="0"
            Margin="0"
            Padding="0"
            CornerRadius="0"
            Style="{StaticResource MainBorderStyle}">
            <DockPanel LastChildFill="True">
                <DockPanel.Resources>

                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="0,2" />
                        <Setter Property="MinWidth" Value="50" />
                    </Style>

                    <Style TargetType="TextBlock">
                        <Setter Property="TextAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="5,0,0,0" />
                        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
                        <Setter Property="LineHeight" Value="15" />
                    </Style>
                </DockPanel.Resources>
                <StackPanel Margin="5,1">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="FontSize" Value="24" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Effect" Value="{StaticResource dropShadowWhite}" />
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Margin="0,-3,0,-5" Text="Баланс" />
                    <TextBlock Text="10-6 кВ" />
                </StackPanel>
                <Separator />
                <Button Command="{Binding PointsEditorCommand}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <ui:Icons Kind="Settings" />
                            <TextBlock Text="Редактор&#x0a;списка&#x0a;точек" />
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Separator />
                <local_controls:DateRange
                    Margin="0,2"
                    Period="{Binding SelectedPeriod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ToolTip="Выбор временного периода&#x0a;Щелкнув правой клавишей мыши,&#x0a;можно выбрать период&#x0a;без указания даты" />
                <Separator />
                <Label Padding="5,0" Content="Данные">
                    <Label.LayoutTransform>
                        <RotateTransform Angle="-90" />
                    </Label.LayoutTransform>
                </Label>
                <Button Command="{Binding GetDataCommand}" ToolTip="Получить данные">
                    <Button.Content>
                        <StackPanel>
                            <ui:Icons Kind="Download" />
                            <TextBlock Text="получить" />
                        </StackPanel>
                    </Button.Content>
                </Button>
                <ui:DropDownButton
                    VerticalContentAlignment="Center"
                    Content=""
                    DisplayMemberPath="Header"
                    ItemsSource="{Binding ExportList}"
                    ToolTip="Экспорт данных">
                    <ui:DropDownButton.Icon>
                        <StackPanel>
                            <ui:Icons Kind="OfficeExcel" />
                            <TextBlock Text="экспорт" />
                        </StackPanel>
                    </ui:DropDownButton.Icon>
                </ui:DropDownButton>
                <Separator />
                <Label Padding="5,0" Content="Сессия">
                    <Label.LayoutTransform>
                        <RotateTransform Angle="-90" />
                    </Label.LayoutTransform>
                </Label>
                <Button Command="{Binding SelectSessionCommand}" ToolTip="Выбрать сессию">
                    <ui:Icons Kind="DiskUpload" />
                </Button>
                <Button Command="{Binding SaveDataCommand}" ToolTip="Сохранить текущую сессию">
                    <ui:Icons Kind="DiskDownload" />
                </Button>
                <Separator />
                <Button Command="{Binding OpenAuxiliaryReportCommand}" ToolTip="Просмотр информации по расходу электроэнергии на собственные нужды подстанций">
                    <StackPanel Orientation="Horizontal">
                        <ui:Icons Kind="Cogs" />
                        <TextBlock Text="Собственные&#x0a;нужды&#x0a;подстанций" />
                    </StackPanel>
                </Button>
                <Separator />
                <Slider
                    LargeChange="2"
                    Maximum="36"
                    Minimum="10"
                    Orientation="Vertical"
                    SmallChange="1"
                    TickFrequency="4"
                    TickPlacement="TopLeft"
                    Value="{Binding Path=FontSize, ElementName=tree}" />
                <StackPanel
                    Margin="5,0,2,0"
                    VerticalAlignment="Center"
                    DockPanel.Dock="Right"
                    Orientation="Vertical">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontFamily" Value="Lucida Brigh" />
                            <Setter Property="FontStyle" Value="Italic" />
                            <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                            <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource HighlightBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock
                        Text="{Binding AppVersion, StringFormat={}Версия:\&#x0a;{0}}"
                        TextAlignment="Right"
                        ToolTip="{Binding AppCopyright}" />
                </StackPanel>
                <ListBox
                    Margin="0,1,0,1"
                    DockPanel.Dock="Right"
                    IsSynchronizedWithCurrentItem="True"
                    ItemsSource="{Binding Session.Departaments}"
                    SelectedItem="{Binding SelectedDepartament}"
                    Style="{StaticResource DepartamentsListBox}" />
            </DockPanel>
        </Border>
        <!--    -->
        <TabControl
            Grid.Row="1"
            Margin="4,4,4,0"
            SelectedIndex="{Binding SelectedEnergyIndex}"
            Style="{StaticResource TabControlStyle}">
            <TabItem Header="Активная энергия" />
            <TabItem Header="Реактивная энергия" />
        </TabControl>
        <!--    -->
        <treeListView:TreeListView
            x:Name="tree"
            Grid.Row="2"
            Grid.Column="0"
            Margin="4,-1,4,4"
            BorderThickness="1,0,1,1"
            FontSize="{DynamicResource tableFontSize}"
            IsSynchronizedWithCurrentItem="True"
            Model="{Binding SubstationsTree}"
            SelectedItem="{Binding SelectedBalanceItemNode}"
            TextBlock.FontSize="{DynamicResource tableFontSize}"
            VirtualizingStackPanel.IsVirtualizing="True">
            <treeListView:TreeListView.Resources>

                <local_converters:BalanceValuesConverter x:Key="BalanceValuesConverter" />

                <DataTemplate x:Key="groupTemplate" DataType="{x:Type model_Balance:Substation}">
                    <TextBox Text="{Binding ConverterParameter=MaximumAllowableUnbalance, Mode=OneWay, Converter={StaticResource BalanceValuesConverter}, StringFormat={StaticResource DoubleStringFormat}, ConverterCulture=be-BY}">
                        <TextBox.Style>
                            <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="FontFamily" Value="{DynamicResource ContentNumbersFontFamily}" />
                                <Setter Property="FontSize" Value="{Binding ElementName=tree, Path=FontSize}" />
                                <Style.Triggers>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type treeListView:TreeListViewItem}}}" Value="true">
                                        <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, FallbackValue=false, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type treeListView:TreeListViewItem}}}" Value="True" />
                                            <Condition Binding="{Binding Path=IsFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Foreground" Value="Black" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </DataTemplate>
                <DataTemplate x:Key="itemTemplate" />

                <Style x:Key="q" TargetType="{x:Type MenuItem}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedBalanceItem.Type}" Value="{x:Static model:ElementTypes.SUBSTATION}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

            </treeListView:TreeListView.Resources>
            <treeListView:TreeListView.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Command="{Binding UpdateSubstationDataCommand}"
                        Header="Обновить данные"
                        Style="{StaticResource q}" />
                    <Separator />
                    <MenuItem
                        Command="{Binding SetSubstationToUseMonthValueCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                        Header="Использовать месячные данные"
                        IsCheckable="True"
                        IsChecked="{Binding SelectedBalanceItemNode.Tag.UseMonthValue}" />
                </ContextMenu>

            </treeListView:TreeListView.ContextMenu>
            <treeListView:TreeListView.View>
                <GridView>
                    <GridViewColumn Width="300" Header="Наименование" />
                    <GridViewColumn Width="180" Header="Поступление по вводам&#x0a;и фидерам, кВт∙ч">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <local_controls:EnergyPlusMinusCell DirectedEnergy="{Binding ConverterParameter=PlusEnergy, Converter={StaticResource BalanceValuesConverter}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="150" Header="Отпуск по фидерам&#x0a;и вводам, кВт∙ч">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <local_controls:EnergyPlusMinusCell DirectedEnergy="{Binding ConverterParameter=MinusEnergy, Converter={StaticResource BalanceValuesConverter}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="120" Header="Небаланс,&#x0a;кВт∙ч">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource NumericCellStyle}" Text="{Binding ConverterParameter=Unbalance, StringFormat={StaticResource NumberStringFormat}, ConverterCulture=be-BY, Converter={StaticResource BalanceValuesConverter}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="100" Header="Небаланс,&#x0a;%">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <!--  StringFormat={}{0:0.0}%  -->
                                <TextBlock
                                    x:Name="textPercentageOfUnbalance"
                                    Style="{StaticResource NumericCellStyle}"
                                    Text="{Binding ConverterParameter=PercentageOfUnbalance, StringFormat={StaticResource DoubleStringFormat}, Converter={StaticResource BalanceValuesConverter}, ConverterCulture=be-BY}" />
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Converter={StaticResource BalanceValuesConverter}, ConverterParameter=ExcessUnbalance}" Value="true">
                                        <Setter TargetName="textPercentageOfUnbalance" Property="FontWeight" Value="Bold" />
                                        <Setter TargetName="textPercentageOfUnbalance" Property="Foreground" Value="Navy" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Converter={StaticResource BalanceValuesConverter}, ConverterParameter=ExcessUnbalance}" Value="true" />
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type treeListView:TreeListViewItem}}}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter TargetName="textPercentageOfUnbalance" Property="FontWeight" Value="Bold" />
                                            <Setter TargetName="textPercentageOfUnbalance" Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="120" Header="Допустимый&#x0a;небаланс, %">
                        <GridViewColumn.CellTemplateSelector>
                            <local:MaximumAllowedUnbalanceColumnTemplateSelector BalanceGroupTemplate="{StaticResource groupTemplate}" BalanceItemTemplate="{StaticResource itemTemplate}" />
                        </GridViewColumn.CellTemplateSelector>
                    </GridViewColumn>
                    <GridViewColumn Width="180" Header="Примечание">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ScrollViewer MaxHeight="25" VerticalScrollBarVisibility="Auto">
                                    <TextBlock
                                        Style="{StaticResource TextCellStyle}"
                                        Text="{Binding ConverterParameter=Description, Converter={StaticResource BalanceValuesConverter}}"
                                        TextWrapping="Wrap" />
                                </ScrollViewer>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="250" Header="Корректировка">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ScrollViewer MaxHeight="25" VerticalScrollBarVisibility="Auto">
                                    <TextBlock
                                        Style="{StaticResource TextCellStyle}"
                                        Text="{Binding ConverterParameter=Correction, Converter={StaticResource BalanceValuesConverter}}"
                                        TextWrapping="WrapWithOverflow"
                                        ToolTip="{Binding ConverterParameter=Correction, Converter={StaticResource BalanceValuesConverter}}" />
                                </ScrollViewer>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </treeListView:TreeListView.View>
            <treeListView:TreeListView.Style>
                <Style TargetType="{x:Type treeListView:TreeListView}">
                    <Setter Property="commandBehaviors:MouseDoubleClick.Command" Value="{Binding ViewDetailsCommand}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasData}" Value="False">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="true">
                                            <ui:NoData Message="{Binding PointsTreeMessage}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </treeListView:TreeListView.Style>
        </treeListView:TreeListView>
        <!--    -->
        <StackPanel Grid.Row="4" Visibility="{Binding Path=SelectedBalanceItem, Converter={StaticResource BalanceItemVisiblityConverter}}">
            <TextBlock
                FontSize="{DynamicResource SubHeaderFontSize}"
                FontWeight="Bold"
                Foreground="{DynamicResource BlackBrush}"
                Text="{Binding SelectedBalanceItem.Name, StringFormat=Значения данных по суткам по \{0\}}"
                TextAlignment="Center" />
            <TextBlock Text="{Binding Session}" />
            <TextBlock Text="{Binding Session.Info.Period}" />
            <local_controls:ArchiveDataVisualizer Dates="{Binding Path=Session.Info.Period.Dates}" Energy="{Binding}" />
        </StackPanel>
    </Grid>
</customWindow:WindowWithDialogs>
