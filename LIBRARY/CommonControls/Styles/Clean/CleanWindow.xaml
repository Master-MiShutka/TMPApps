<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:TMP.Wpf.CommonControls"
                    xmlns:Converters="clr-namespace:TMP.Wpf.CommonControls.Converters"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    mc:Ignorable="options">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/TMP.Wpf.CommonControls;component/Styles/Controls.Buttons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="IdealForegroundDisabledBrush" options:Freeze="True" Color="#ADADAD" />

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <ControlTemplate x:Key="CleanWindowTemplate" TargetType="{x:Type Controls:TMPWindow}">
        <Grid>
            <AdornerDecorator>
                <Grid Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <!--  icon  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  title  -->
                        <ColumnDefinition Width="*" />
                        <!--  min,max,close buttons  -->
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!--  icon  -->
                    <ContentControl x:Name="PART_Icon"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Height="{Binding TitlebarHeight,
                                                     RelativeSource={RelativeSource TemplatedParent},
                                                     Mode=OneWay}"
                                    MinWidth="{Binding TitlebarHeight,
                                                       RelativeSource={RelativeSource TemplatedParent},
                                                       Mode=OneWay}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Panel.ZIndex="1"
                                    Content="{TemplateBinding Icon}"
                                    ContentTemplate="{TemplateBinding IconTemplate}"
                                    Focusable="False"
                                    Visibility="{TemplateBinding ShowIconOnTitleBar,
                                                                 Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  the left window commands  -->
                    <Grid x:Name="PART_TitleBar"
                          Grid.Row="0"
                          Grid.Column="0"
                          Grid.ColumnSpan="3"
                          Height="{Binding TitlebarHeight,
                                           RelativeSource={RelativeSource TemplatedParent},
                                           Mode=OneWay}"
                          Focusable="False"
                          Visibility="{TemplateBinding ShowTitleBar,
                                                       Converter={StaticResource BooleanToVisibilityConverter}}">

                        <!--  This (empty) element is used so everything still responds to drag  -->
                        <Label HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            <ContentControl x:Name="TitleControl"
                                            HorizontalAlignment="Center"
                                            Content="{TemplateBinding Title}"
                                            ContentTemplate="{TemplateBinding TitleTemplate}"
                                            Focusable="False">
                                <ContentControl.Foreground>
                                    <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                        <Binding Mode="OneWay" Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Mode="OneWay" Path="TitleForeground" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </ContentControl.Foreground>
                            </ContentControl>
                        </Label>
                    </Grid>

                    <!--  the title bar  -->
                    <ContentPresenter x:Name="PART_RightWindowCommands"
                                      Grid.Row="0"
                                      Grid.RowSpan="2"
                                      Grid.Column="1"
                                      Height="{Binding TitlebarHeight,
                                                       RelativeSource={RelativeSource TemplatedParent},
                                                       Mode=OneWay}"
                                      VerticalAlignment="Top"
                                      Panel.ZIndex="1"
                                      Content="{Binding RightWindowCommands,
                                                        RelativeSource={RelativeSource TemplatedParent},
                                                        Mode=OneWay}"
                                      Focusable="False"
                                      TextElement.Foreground="{DynamicResource BlackColorBrush}"
                                      Visibility="{TemplateBinding ShowTitleBar,
                                                                   Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  the window button commands  -->
                    <Controls:WindowButtonCommands x:Name="PART_WindowButtonCommands"
                                                   Grid.Row="0"
                                                   Grid.RowSpan="2"
                                                   Grid.Column="2"
                                                   Height="{Binding TitlebarHeight,
                                                                    RelativeSource={RelativeSource TemplatedParent},
                                                                    Mode=OneWay}"
                                                   VerticalAlignment="Top"
                                                   Panel.ZIndex="1"
                                                   Focusable="False" />

                    <Grid x:Name="PART_OverlayBox"
                          Grid.Row="1"
                          Grid.RowSpan="1"
                          Grid.Column="0"
                          Grid.ColumnSpan="3"
                          Panel.ZIndex="3"
                          Background="{DynamicResource BlackColorBrush}"
                          FocusVisualStyle="{x:Null}"
                          Focusable="False"
                          Opacity="0"
                          Visibility="Hidden" />

                    <Grid x:Name="PART_TMPDialogContainer"
                          Grid.Row="1"
                          Grid.RowSpan="1"
                          Grid.Column="0"
                          Grid.ColumnSpan="3"
                          Panel.ZIndex="4"
                          FocusVisualStyle="{x:Null}" />

                    <Controls:TMPContentControl Grid.Row="1"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="3"
                                                FocusVisualStyle="{x:Null}"
                                                IsTabStop="False"
                                                OnlyLoadTransition="True">
                        <ContentPresenter />
                    </Controls:TMPContentControl>

                    <!--  the main window content  -->
                    <!--  Used to create that overlay effect. Can be used for anything.  -->
                </Grid>
            </AdornerDecorator>
            <Border x:Name="PART_Border"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ResizeGrip x:Name="WindowResizeGrip"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        IsTabStop="false"
                        Visibility="Collapsed" />
        </Grid>

        <ControlTemplate.Resources>
            <Storyboard x:Key="OverlayFastSemiFadeIn"
                        AccelerationRatio=".97"
                        BeginTime="0:0:0"
                        SpeedRatio="2.7"
                        Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To=".7" />
            </Storyboard>
            <Storyboard x:Key="OverlayFastSemiFadeOut"
                        AccelerationRatio=".97"
                        BeginTime="0:0:0"
                        SpeedRatio="2.7"
                        Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To="0." />
            </Storyboard>
        </ControlTemplate.Resources>
        <ControlTemplate.Triggers>
            <!--  handle active/inactive state  -->
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:TMPWindow}}}" />
            </Trigger>
            <!--  no icon and no icon content template -> collapse the icon content control  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="IconTemplate" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Icon" Property="MinWidth" Value="0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="TitleCaps" Value="True">
                <Setter TargetName="TitleControl" Property="Content" Value="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CleanWindowStyleKey" BasedOn="{StaticResource {x:Type Controls:TMPWindow}}" TargetType="{x:Type Controls:TMPWindow}">

        <Setter Property="ShowTitleBar" Value="True" />
        <Setter Property="MinWidth" Value="400" />
        <Setter Property="Template" Value="{StaticResource CleanWindowTemplate}" />
        <Setter Property="TitleForeground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="OverrideDefaultWindowCommandsBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="WindowMinButtonStyle" Value="{DynamicResource CleanWindowButtonStyle}" />
        <Setter Property="WindowMaxButtonStyle" Value="{DynamicResource CleanWindowButtonStyle}" />
        <Setter Property="WindowCloseButtonStyle" Value="{DynamicResource CleanCloseWindowButtonStyle}" />
    </Style>

    <Style x:Key="CleanWindowButtonStyle" BasedOn="{StaticResource TMPWindowButtonStyle}" TargetType="{x:Type Button}">

        <Style.Triggers>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundDisabledBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CleanCloseWindowButtonStyle" BasedOn="{StaticResource CleanWindowButtonStyle}" TargetType="{x:Type Button}">
        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#EB2F2F" />
                <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#7C0000" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>