<Window
    x:Class="TMP.Work.Emcos.View.BalansView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:SystemWindowsControls="clr-namespace:System.Windows.Controls;assembly=presentationframework"
    xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:common_controls="clr-namespace:TMP.Wpf.Common.Controls;assembly=TMP.Wpf.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:icons="clr-namespace:TMP.Wpf.Common.Icons;assembly=TMP.Wpf.Common"
    xmlns:local="clr-namespace:TMP.Work.Emcos.View"
    xmlns:local_controls="clr-namespace:TMP.Work.Emcos.Controls"
    xmlns:local_converters="clr-namespace:TMP.Work.Emcos.Converters"
    xmlns:local_vm="clr-namespace:TMP.Work.Emcos.ViewModel"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:TMP.Work.Emcos.Model;assembly=EmcosModel"
    xmlns:model_balans="clr-namespace:TMP.Work.Emcos.Model.Balans"
    xmlns:settings="clr-namespace:TMP.Work.Emcos.Settings"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:system_windows="clr-namespace:System.Windows;assembly=PresentationFramework"
    xmlns:treeListView="clr-namespace:TMP.Wpf.Common.Controls.TreeListView;assembly=TMP.Wpf.Common"
    xmlns:vtreeview="clr-namespace:TMP.Work.Emcos.Controls.VTreeView"
    x:Name="mainwindow"
    Title="{Binding WindowTitle}"
    Width="{settings:SettingBinding MainWindowWidth,
                                    1500.0}"
    Height="{settings:SettingBinding MainWindowHeight,
                                     600.0}"
    d:DesignHeight="800"
    d:DesignWidth="1400"
    Background="{DynamicResource WindowBackground}"
    FocusManager.FocusedElement="{Binding ElementName=tree}"
    FontFamily="Calibri,Verdana,Tahoma"
    FontSize="{DynamicResource SubHeaderFontSize}"
    Icon="/EmcosSiteWrapper;component/ImagesAndIcons/emcos.ico"
    KeyUp="Window_KeyUp"
    Left="{settings:SettingBinding MainWindowLeft,
                                   100.0}"
    Loaded="Window_Loaded"
    TextOptions.TextFormattingMode="Ideal"
    Top="{settings:SettingBinding MainWindowTop,
                                  0.0}"
    UseLayoutRounding="True"
    WindowStartupLocation="CenterOwner"
    WindowState="{settings:SettingBinding MainWindowState,
                                          {x:Static system_windows:WindowState.Normal}}"
    mc:Ignorable="d">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="None" />
    </Window.TaskbarItemInfo>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVisiblityConv" />
        <local_converters:BalansItemVisiblityConverter x:Key="BalansItemVisiblityConverter" />
        <local_converters:BalansItemValueConverter x:Key="BalansItemValueConverter" />
        <local_converters:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter" />
        <local_converters:StateToVisibilityConverter x:Key="StateToVisibilityConverter" />

        <Style x:Key="infoLabel" TargetType="{x:Type TextBlock}">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Opacity" Value="200" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="DockPanel.Dock" Value="Right" />
            <Setter Property="Panel.ZIndex" Value="1001" />
        </Style>

        <Style x:Key="CollapsableRow" TargetType="{x:Type RowDefinition}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SelectedBalansItem, Converter={StaticResource BalansItemVisiblityConverter}, ConverterParameter=Bool}" Value="True">
                    <Setter Property="RowDefinition.Height" Value="0" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=SelectedBalansItem, Converter={StaticResource BalansItemVisiblityConverter}, ConverterParameter=Bool}" Value="False">
                    <Setter Property="RowDefinition.Height" Value="Auto" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type local_controls:Wait}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Progress, RelativeSource={RelativeSource TemplatedParent}}" Value="0">
                    <Setter Property="ProgressVisible" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--  waiting control  -->
        <local_controls:GettingData Grid.RowSpan="3" Visibility="{Binding IsGettingData, FallbackValue=Hidden, Converter={StaticResource boolToVisiblityConv}}" />
        <local_controls:Wait
            Grid.RowSpan="3"
            Margin="-2"
            Message="Пожалуйста, подождите ..."
            ProgressVisible="True" />

        <!--  0  -->
        <Border
            Grid.Row="0"
            Margin="0"
            Padding="0"
            CornerRadius="0"
            Style="{StaticResource MainBorderStyle}">
            <DockPanel LastChildFill="True">
                <DockPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="5,0,0,0" />
                        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
                        <Setter Property="LineHeight" Value="15" />
                    </Style>
                </DockPanel.Resources>
                <StackPanel Margin="5,1">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="FontSize" Value="24" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Effect" Value="{StaticResource dropShadowWhite}" />
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Margin="0,-3,0,-5" Text="Баланс" />
                    <TextBlock Text="10-6 кВ" />
                </StackPanel>
                <Separator />
                <Button Command="{Binding PointsEditorCommand}" ToolTip="Редактор списка точек">
                    <Button.Content>
                        <icons:PackIconModern
                            Width="{StaticResource iconSize}"
                            Height="{StaticResource iconSize}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="Settings" />
                    </Button.Content>
                </Button>
                <Separator />
                <local_controls:DateRange Period="{Binding SelectedPeriod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Выбор временного периода&#x0a;Щелкнув правой клавишей мыши,&#x0a;можно выбрать период&#x0a;без указания даты" />
                <Separator />
                <Label Padding="0" Content="Данные">
                    <Label.LayoutTransform>
                        <RotateTransform Angle="-90" />
                    </Label.LayoutTransform>
                </Label>
                <Button Command="{Binding GetDataCommand}" ToolTip="Получить данные">
                    <Button.Content>
                        <icons:PackIconModern
                            Width="{StaticResource iconSize}"
                            Height="{StaticResource iconSize}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="Download" />
                    </Button.Content>
                </Button>
                <common_controls:DropDownButton
                    VerticalContentAlignment="Center"
                    DisplayMemberPath="Header"
                    ItemsSource="{Binding ExportList}"
                    ToolTip="Экспорт данных">
                    <common_controls:DropDownButton.Icon>
                        <icons:PackIconModern
                            Width="{StaticResource iconSize}"
                            Height="{StaticResource iconSize}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="OfficeExcel" />
                    </common_controls:DropDownButton.Icon>
                </common_controls:DropDownButton>
                <Separator />
                <Label Padding="0" Content="Сессия">
                    <Label.LayoutTransform>
                        <RotateTransform Angle="-90" />
                    </Label.LayoutTransform>
                </Label>
                <Button Command="{Binding SelectSessionCommand}" ToolTip="Выбрать сессию">
                    <icons:PackIconModern
                        Width="{StaticResource iconSize}"
                        Height="{StaticResource iconSize}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Kind="DiskUpload" />
                </Button>
                <Button Command="{Binding SaveDataCommand}" ToolTip="Сохранить текущую сессию">
                    <icons:PackIconModern
                        Width="{StaticResource iconSize}"
                        Height="{StaticResource iconSize}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Kind="DiskDownload" />
                </Button>
                <Separator />
                <Button Command="{Binding OpenAuxiliaryReportCommand}" ToolTip="Просмотр информации по расходу электроэнергии на собственные нужды подстанций">
                    <StackPanel Orientation="Horizontal">
                        <icons:PackIconModern
                            Width="{StaticResource iconSize}"
                            Height="{StaticResource iconSize}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="Cogs" />
                        <TextBlock Text="Собственные&#x0a;нужды&#x0a;подстанций" />
                    </StackPanel>
                </Button>
                <Separator />
                <Slider
                    LargeChange="2"
                    Maximum="36"
                    Minimum="10"
                    Orientation="Vertical"
                    SmallChange="1"
                    TickFrequency="4"
                    TickPlacement="TopLeft"
                    Value="{Binding Path=FontSize, ElementName=tree}" />
                <StackPanel
                    Margin="5,0,2,0"
                    VerticalAlignment="Center"
                    DockPanel.Dock="Right"
                    Orientation="Vertical">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontFamily" Value="Lucida Brigh" />
                            <Setter Property="FontStyle" Value="Italic" />
                            <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                            <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource HighlightBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock
                        Text="{Binding AppVersion, StringFormat={}Версия:\&#x0a;{0}}"
                        TextAlignment="Right"
                        ToolTip="{Binding AppCopyright}" />
                </StackPanel>
                <ListBox
                    Margin="0,1,0,1"
                    DockPanel.Dock="Right"
                    IsSynchronizedWithCurrentItem="True"
                    ItemsSource="{Binding Departaments}"
                    SelectedItem="{Binding SelectedDepartament}"
                    Style="{StaticResource DepartamentsListBox}" />
            </DockPanel>
        </Border>
        <!--    -->
        <treeListView:TreeListView
            x:Name="tree"
            Grid.Row="1"
            Grid.Column="0"
            Margin="3,5,2,2"
            FontSize="{DynamicResource tableFontSize}"
            IsSynchronizedWithCurrentItem="True"
            KeyDown="tree_KeyDown"
            Model="{Binding SubstationsTree}"
            MouseDoubleClick="tree_MouseDoubleClick"
            SelectedItem="{Binding SelectedBalansItemNode}"
            TextBlock.FontSize="{DynamicResource tableFontSize}"
            VirtualizingStackPanel.IsVirtualizing="True">
            <treeListView:TreeListView.Resources>
                <DataTemplate x:Key="groupTemplate" DataType="{x:Type model_balans:Substation}">
                    <TextBox Text="{Binding MaximumAllowableUnbalance, StringFormat={StaticResource DoubleStringFormat}, ConverterCulture=be-BY}">
                        <TextBox.Style>
                            <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="FontFamily" Value="{DynamicResource ContentNumbersFontFamily}" />
                                <Setter Property="FontSize" Value="{Binding ElementName=tree, Path=FontSize}" />
                                <Setter Property="common_controls:TextBoxHelper.Watermark" Value="{x:Null}" />
                                <Setter Property="common_controls:TextBoxHelper.ClearTextButton" Value="True" />
                                <Style.Triggers>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type treeListView:TreeListViewItem}}}" Value="true">
                                        <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </DataTemplate>
                <DataTemplate x:Key="itemTemplate" />

                <Style
                    x:Key="q"
                    BasedOn="{StaticResource MetroMenuItem}"
                    TargetType="{x:Type MenuItem}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.SelectedBalansItem.Type}" Value="{x:Static model:ElementTypes.SUBSTATION}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

            </treeListView:TreeListView.Resources>
            <treeListView:TreeListView.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Command="{Binding UpdateSubstationDataCommand}"
                        Header="Обновить данные"
                        Style="{StaticResource q}" />
                    <Separator />
                    <MenuItem
                        Command="{Binding SetSubstationToUseMonthValueCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                        Header="Использовать месячные данные"
                        IsCheckable="True"
                        IsChecked="{Binding SelectedBalansItemNode.Tag.UseMonthValue}" />
                </ContextMenu>

            </treeListView:TreeListView.ContextMenu>
            <treeListView:TreeListView.View>
                <GridView>
                    <GridViewColumn Width="300" Header="Наименование" />
                    <GridViewColumn Width="180" Header="Поступление по вводам и фидерам, кВт∙ч">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock
                                        HorizontalAlignment="Left"
                                        Style="{StaticResource infoLabel}"
                                        ToolTip="Сумма суточных значений не равна расходу за месяц"
                                        Visibility="{Binding Converter={StaticResource BalansItemValueConverter}, ConverterParameter=PlusMonthAndSumDaysNotEqual}">
                                        <icons:PackIconModern
                                            Width="{Binding Path=FontSize, ElementName=tree}"
                                            Height="{Binding Path=FontSize, ElementName=tree}"
                                            Kind="CalendarMonth" />
                                    </TextBlock>
                                    <TextBlock
                                        FontWeight="{Binding Converter={StaticResource BalansItemValueConverter}, ConverterParameter=SetBoldValuesOnGroup}"
                                        Style="{StaticResource NumericCellStyle}"
                                        Text="{Binding EnergyIn, StringFormat={StaticResource NumberStringFormat}, ConverterCulture=be-BY}" />
                                    <StackPanel
                                        HorizontalAlignment="Right"
                                        Orientation="Horizontal"
                                        ToolTip="{Binding Converter={StaticResource BalansItemValueConverter}, ConverterParameter=ValuePlusStatus}">
                                        <TextBlock
                                            FontFamily="Wingdings"
                                            Style="{StaticResource infoLabel}"
                                            Text="!"
                                            ToolTip="{Binding Correction}"
                                            Visibility="{Binding AddToEplus, Converter={StaticResource NullableToVisibilityConverter}}" />
                                        <TextBlock
                                            FontFamily="Webdings"
                                            Style="{StaticResource infoLabel}"
                                            Text="i"
                                            Visibility="{Binding NotFullDataPlus, Converter={StaticResource boolToVisiblityConv}}" />
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="150" Header="Отпуск по фидерам и вводам, кВт∙ч">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock
                                        HorizontalAlignment="Left"
                                        Style="{StaticResource infoLabel}"
                                        ToolTip="Сумма суточных значений не равна расходу за месяц"
                                        Visibility="{Binding Converter={StaticResource BalansItemValueConverter}, ConverterParameter=MinusMonthAndSumDaysNotEqual}">
                                        <icons:PackIconModern
                                            Width="{Binding Path=FontSize, ElementName=tree}"
                                            Height="{Binding Path=FontSize, ElementName=tree}"
                                            Kind="CalendarMonth" />
                                    </TextBlock>
                                    <TextBlock
                                        FontWeight="{Binding Converter={StaticResource BalansItemValueConverter}, ConverterParameter=SetBoldValuesOnGroup}"
                                        Style="{StaticResource NumericCellStyle}"
                                        Text="{Binding EnergyOut, StringFormat={StaticResource NumberStringFormat}, ConverterCulture=be-BY}" />
                                    <StackPanel
                                        HorizontalAlignment="Right"
                                        Orientation="Horizontal"
                                        ToolTip="{Binding Converter={StaticResource BalansItemValueConverter}, ConverterParameter=ValuePlusStatus}">
                                        <TextBlock
                                            FontFamily="Wingdings"
                                            Style="{StaticResource infoLabel}"
                                            Text="!"
                                            ToolTip="{Binding Correction}"
                                            Visibility="{Binding AddToEminus, Converter={StaticResource NullableToVisibilityConverter}}" />
                                        <TextBlock
                                            FontFamily="Webdings"
                                            Style="{StaticResource infoLabel}"
                                            Text="i"
                                            Visibility="{Binding NotFullDataMinus, Converter={StaticResource boolToVisiblityConv}}" />
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="120" Header="Небаланс,&#x0a;кВт∙ч">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource NumericCellStyle}" Text="{Binding Unbalance, StringFormat={StaticResource NumberStringFormat}, ConverterCulture=be-BY}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="100" Header="Небаланс,&#x0a;%">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <!--  StringFormat={}{0:0.0}%  -->
                                <TextBlock
                                    x:Name="textPercentageOfUnbalance"
                                    Style="{StaticResource NumericCellStyle}"
                                    Text="{Binding PercentageOfUnbalance, StringFormat={StaticResource DoubleStringFormat}, ConverterCulture=be-BY}" />
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Converter={StaticResource BalansItemValueConverter}, ConverterParameter=ExcessUnbalance}" Value="true">
                                        <Setter TargetName="textPercentageOfUnbalance" Property="FontWeight" Value="Bold" />
                                        <Setter TargetName="textPercentageOfUnbalance" Property="Foreground" Value="Navy" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Converter={StaticResource BalansItemValueConverter}, ConverterParameter=ExcessUnbalance}" Value="true" />
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type treeListView:TreeListViewItem}}}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter TargetName="textPercentageOfUnbalance" Property="FontWeight" Value="Bold" />
                                            <Setter TargetName="textPercentageOfUnbalance" Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="120" Header="Допустимый небаланс, %">
                        <GridViewColumn.CellTemplateSelector>
                            <local:MaximumAllowedUnbalanceColumnTemplateSelector BalansGroupTemplate="{StaticResource groupTemplate}" BalansItemTemplate="{StaticResource itemTemplate}" />
                        </GridViewColumn.CellTemplateSelector>
                    </GridViewColumn>
                    <GridViewColumn Width="180" Header="Примечание">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ScrollViewer MaxHeight="25" VerticalScrollBarVisibility="Auto">
                                    <TextBlock
                                        Style="{StaticResource TextCellStyle}"
                                        Text="{Binding Description}"
                                        TextWrapping="Wrap" />
                                </ScrollViewer>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="250" Header="Корректировка">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ScrollViewer MaxHeight="25" VerticalScrollBarVisibility="Auto">
                                    <TextBlock
                                        Style="{StaticResource TextCellStyle}"
                                        Text="{Binding Correction}"
                                        TextWrapping="WrapWithOverflow"
                                        ToolTip="{Binding Correction}" />
                                </ScrollViewer>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </treeListView:TreeListView.View>
            <treeListView:TreeListView.Style>
                <Style TargetType="{x:Type treeListView:TreeListView}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasData}" Value="False">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="true">
                                            <local_controls:NoData />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </treeListView:TreeListView.Style>
        </treeListView:TreeListView>
        <!--    -->
        <local_controls:ArchiveDataVisualizer
            Grid.Row="3"
            DataContext="{Binding}"
            Visibility="{Binding Path=SelectedBalansItem, Converter={StaticResource BalansItemVisiblityConverter}}" />
    </Grid>
</Window>