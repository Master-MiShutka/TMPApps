<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviours="clr-namespace:TMPApplication.Behaviours"
    xmlns:converters="clr-namespace:TMPApplication.Converters"
    xmlns:local="clr-namespace:TMPApplication.CustomWpfWindow"
    xmlns:reskeys="clr-namespace:TMPApplication.Themes"
    xmlns:shell="clr-namespace:MS.Windows.Shell;assembly=WindowsShell">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <ControlTemplate x:Key="WindowWithDialogsTemplate" TargetType="{x:Type local:WindowWithDialogs}">
        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">
            <AdornerDecorator>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <!--  иконка окна  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  заголовок  -->
                        <ColumnDefinition Width="*" />
                        <!--  кнопки  -->
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="header_row" Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!--  иконка  -->
                    <ContentControl
                        x:Name="PART_Icon"
                        Grid.Row="0"
                        Grid.Column="0"
                        Padding="2"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Panel.ZIndex="1"
                        Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        ContentTemplate="{Binding IconTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"
                        Visibility="{Binding ShowIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  заголовок  -->
                    <ContentControl
                        x:Name="PART_TitleBar"
                        Grid.Row="0"
                        Grid.Column="1"
                        Height="{Binding Source={x:Static SystemParameters.CaptionHeight}}"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Panel.ZIndex="1"
                        Content="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"
                        ContentTemplate="{Binding TitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"
                        Foreground="{Binding TitleForeground, RelativeSource={RelativeSource TemplatedParent}}"
                        IsHitTestVisible="False"
                        Visibility="{Binding ShowTitleBar, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <local:MetroThumb
                        x:Name="PART_WindowTitleThumb"
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Focusable="False"
                        Visibility="{TemplateBinding ShowTitleBar,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:MetroThumb.Style>
                            <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Background" Value="{Binding TitleBrush, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid Background="{TemplateBinding Background}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </local:MetroThumb.Style>
                    </local:MetroThumb>

                    <!--  кнопки  -->
                    <local:WindowButtonCommands
                        x:Name="PART_WindowButtonCommands"
                        Grid.Column="2"
                        MinHeight="{DynamicResource {x:Static SystemParameters.WindowCaptionButtonHeight}}"
                        Margin="0,0,0,2"
                        HorizontalAlignment="Right"
                        Panel.ZIndex="1" />

                    <!--  Содержимое окна  -->
                    <ContentPresenter
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        Margin="0"
                        Panel.ZIndex="1" />

                    <!--  оверлей  -->
                    <Grid
                        x:Name="PART_OverlayBox"
                        Grid.Row="1"
                        Grid.RowSpan="3"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Panel.ZIndex="4"
                        Background="{DynamicResource {x:Static reskeys:ResourceKeys.OverlayBrushKey}}"
                        FocusVisualStyle="{x:Null}"
                        Focusable="False"
                        Opacity="0"
                        Visibility="Hidden" />

                    <!--  контейнер для диалогов  -->
                    <Grid
                        x:Name="PART_DialogsContainer"
                        Grid.Row="1"
                        Grid.RowSpan="3"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Panel.ZIndex="5"
                        FocusVisualStyle="{x:Null}" />

                    <!--  строка статуса  -->
                    <StatusBar
                        x:Name="PART_StatusBar"
                        Grid.Row="2"
                        Grid.ColumnSpan="3"
                        Background="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccent70BrushKey}}"
                        Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.ControlNormalBackgroundBrushKey}}">
                        <StatusBarItem Content="Status" />
                    </StatusBar>
                    <ResizeGrip
                        x:Name="WindowResizeGrip"
                        Grid.Row="2"
                        Grid.Column="2"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Panel.ZIndex="1"
                        IsTabStop="false"
                        Visibility="Collapsed" />

                </Grid>
            </AdornerDecorator>
            <Border
                x:Name="PART_Border"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{x:Null}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0.5"
                UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Resources>
            <Storyboard
                x:Key="OverlayFastSemiFadeIn"
                AccelerationRatio=".97"
                BeginTime="0:0:0"
                SpeedRatio="2.7"
                Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To=".7" />
            </Storyboard>
            <Storyboard
                x:Key="OverlayFastSemiFadeOut"
                AccelerationRatio=".97"
                BeginTime="0:0:0"
                SpeedRatio="2.7"
                Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To="0.0" />
            </Storyboard>
        </ControlTemplate.Resources>
        <ControlTemplate.Triggers>

            <Trigger Property="ShowDialogsOverTitleBar" Value="True">
                <Setter TargetName="PART_OverlayBox" Property="Grid.Row" Value="0" />
                <Setter TargetName="PART_DialogsContainer" Property="Grid.Row" Value="0" />
            </Trigger>

            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="PART_WindowTitleThumb" Property="Background" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowWithDialogs}}}" />
                <Setter TargetName="PART_StatusBar" Property="Background" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowWithDialogs}}}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowWithDialogs}}}" />
                <Setter TargetName="PART_TitleBar" Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlInputTextDisabledKey}}" />
                <Setter TargetName="PART_StatusBar" Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlInputTextDisabledKey}}" />
                <Setter TargetName="PART_Icon" Property="Opacity" Value="0.5" />
            </Trigger>

            <Trigger Property="UseNoneWindowStyle" Value="True">
                <Setter TargetName="header_row" Property="Height" Value="0" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="IconTemplate" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Icon" Property="MinWidth" Value="0" />
            </MultiTrigger>

            <Trigger Property="IsContentDialogVisible" Value="true">
                <Setter TargetName="PART_WindowButtonCommands" Property="Focusable" Value="false" />
            </Trigger>

            <Trigger Property="ShowDialogsOverTitleBar" Value="False">
                <Setter TargetName="PART_OverlayBox" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_DialogsContainer" Property="Grid.Row" Value="1" />
            </Trigger>

            <Trigger Property="WindowState" Value="Maximized">
                <Setter TargetName="PART_Border" Property="Visibility" Value="Hidden" />
                <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:WindowWithDialogs}">
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlDefaultFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlDefaultFontSizeKey}}" />

        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlWindowTextKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlWindowBackgroundKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlWindowBorderActiveKey}}" />
        <Setter Property="BorderThickness" Value="1" />

        <Setter Property="TitleBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccent50BrushKey}}" />
        <Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.GrayNormalBrushKey}}" />
        <Setter Property="TitleForeground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlTextBrushKey}}" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Margin="8,-1,0,0"
                        VerticalAlignment="Center"
                        FontFamily="{DynamicResource {x:Static reskeys:ResourceKeys.HeaderFontFamilyKey}}"
                        FontSize="{DynamicResource {x:Static reskeys:ResourceKeys.HeaderFontSizeKey}}"
                        Text="{TemplateBinding Content}"
                        TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="WindowButtonStyle" Value="{DynamicResource {x:Static reskeys:ResourceKeys.WindowButtonStyleKey}}" />
        <Setter Property="MinButtonStyle" Value="{DynamicResource {x:Static reskeys:ResourceKeys.WindowMinButtonStyleKey}}" />
        <Setter Property="MaxRestoreButtonStyle" Value="{DynamicResource {x:Static reskeys:ResourceKeys.WindowMaxButtonStyleKey}}" />
        <Setter Property="CloseButtonStyle" Value="{DynamicResource {x:Static reskeys:ResourceKeys.WindowCloseButtonStyleKey}}" />

        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="MinHeight" Value="{Binding Source={x:Static SystemParameters.MinimumWindowHeight}}" />
        <Setter Property="MinWidth" Value="{Binding Source={x:Static SystemParameters.MinimumWindowWidth}}" />

        <Setter Property="GlowBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccentBrushKey}}" />
        <Setter Property="NonActiveGlowBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccent30BrushKey}}" />

        <Setter Property="Template" Value="{StaticResource WindowWithDialogsTemplate}" />
        <Setter Property="Behaviours:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Behaviours:StylizedBehaviorCollection>
                    <Behaviours:BorderlessWindowBehavior />
                    <Behaviours:GlowWindowBehavior />
                </Behaviours:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="IconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowWithDialogs}}}"
                        RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowWithDialogs}}}"
                        Source="{TemplateBinding Content}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>

</ResourceDictionary>